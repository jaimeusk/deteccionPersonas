<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f579ecdf660"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f579ed98b40"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f579ed98b40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f579ecf8110"/></to>
    </wire>
    <wire loc="19:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f579ecde020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579d8a05c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579d8a05c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579d8348d0"/></to>
    </wire>
    <wire loc="21:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f579ecd8020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579d89d600"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579d89d600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579d83e110"/></to>
    </wire>
    <wire loc="22:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f579ec86e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d89c800"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579d89c800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d83ee70"/></to>
    </wire>
    <wire loc="23:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f579ec7d870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579d89ce10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579d89ce10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579d83ca40"/></to>
    </wire>
    <wire loc="24:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f579ec6d9b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579d89aab0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579d89aab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579d83d490"/></to>
    </wire>
    <wire loc="34:BaseStationC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579ec7e160"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579d46bc30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579d46bc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579c9eb590"/></to>
    </wire>
    <wire loc="35:BaseStationC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579ec7edd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579d46a8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579d46a8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579c9ea270"/></to>
    </wire>
    <wire loc="36:BaseStationC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f579ecdebc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579e8ee760"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579e8ee760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579e8bccc0"/></to>
    </wire>
    <wire loc="37:BaseStationC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579ec6b440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579d46b020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579d46b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579c9ec920"/></to>
    </wire>
    <wire loc="38:BaseStationC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579ec690c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d464910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579d464910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579e8eab20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:BaseStationC.nc">
      <from><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f579ec68270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579d503060"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579d503060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f579daa2610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:BaseStationC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f579ec58650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579d4fdb00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579d4fdb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f579daa2610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579ec46500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebbe620"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ca3f020"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d834280"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d976dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d9feb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579da1d750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579da3e080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579dba63a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579dca7620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579dd96c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579e738c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579cd60020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579e267020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579e7e8510"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f579ecf8780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f579f23d1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f579f23d1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f579ede2140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f579ecf71d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ed910c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579ed910c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ed841a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ecf78d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f579ed87130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f579ed84810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f579ed82020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f579ed6c900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f579ed6c900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ed53850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f579ed82700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ed86640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f579ed82de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579eb96dd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579ed53850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ed391c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f579ed4ade0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f579ed39830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f579eeb8c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f579ed38af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579ede1040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f579eddc490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f579f0159a0"/></to>
    </wire>
    <wire loc="88:BaseStationP.nc">
      <from><interface-ref name="RadioSendTask" scoped="" ref="0x7f579ec39bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f579ec3ac80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579eb96dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579ebbe020"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f579ebb6b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f579ebbf590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f579ebbf590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e9199e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f579ebbce30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f579eb98830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f579eb98830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e902020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f579ebb5020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f579eb97b50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f579eb97b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e8fd630"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e908c50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f579eb28020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f579eb28020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9d2540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e9012f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f579eb268a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f579eb268a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9cdb90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e8fc7a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f579eb23020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f579eb23020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9c7060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f579eb7bd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea81b90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f579eb61e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea4a060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f579ead73d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea3a060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f579eadc3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e99cb90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f579eb053f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea35540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f579eb5ce50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea40b90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f579eb42020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea08060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f579eb14020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9a6060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f579eb003f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea29060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f579eaeb3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9bdb90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f579eacd3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e996060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f579eb73580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea71b90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f579eafebc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea24540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f579eb6e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea66540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f579eb54710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea2fb90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f579eb3b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9f8060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f579eb218a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9c2540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f579eb0d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e996060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f579eb80d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea8c060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f579eb67d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea556d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f579eb4de50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea1fb90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f579eb08bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea3a060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f579eae4bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9acb90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f579ead0bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e996060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f579eaf4bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9d7060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f579eb48e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea14740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f579eb2e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9ddb90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f579eb19020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9b1540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f579eae13e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9a6060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f579eafb3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9e8060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f579eb78580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea7b060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f579eb5e710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea45540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f579eb1e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9bdb90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f579eb59710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea3a060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f579eb408a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea03540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f579eb128a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9a1540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f579eaf63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9ddb90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f579eb83cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea97540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f579eb6cd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea61b90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f579eb52e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea29060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f579eb38020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9f3540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f579eaf13f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea1fb90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f579eae9bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9b7060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f579eadabb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e996060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f579eb33020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9e8060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f579eaefbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea19060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f579eb7d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea86540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f579eb64710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea50b90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f579eb4a710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea19060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f579eaf9bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9e3540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f579eadfbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9a1540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f579eb458a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea0fb90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f579eb2c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9d7060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f579eb178a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9acb90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f579eb76d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea76540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f579eb1c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9b7060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f579eb71d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea6b060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f579eb57e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea35540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f579eb3d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9feb90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f579eb0f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e99cb90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f579eb82580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea92b90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f579eb69580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea5a060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f579eb4f710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea24540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f579eb368a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9eeb90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f579eae63e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9b1540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f579ead5ba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea2fb90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f579eb03bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea2fb90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f579eb318a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9e3540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f579ead23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e99cb90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f579eacbbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579e9c2540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f579eb0a060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f579ea40b90"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579e8bccc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579e892020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579e8eb7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579e8bbd20"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579e8bbd20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579d938020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f579e8e8880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f579e8b9c00"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f579e8b9c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f579d936df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579e8e7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579e8b68f0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579e8b68f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579d934a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579e8e3310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc22550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc22550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc14a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e8c9130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e8abcb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e8abcb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e87d080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579e8eab20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579e8b9020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579e8b9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d936210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e8e4080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e8b4990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e8b4990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e87f020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579e8e7c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579e8b82d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579e8b82d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579d935470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579e8d43f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579dc1e660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579dc1e660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579dc10af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579e892020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579d969b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e8a2e30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f579d9328b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f579e895d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f579d933ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e8ad9b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e880020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e880020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e87d080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f579d969080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e87f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f579dc246e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f579e8a0020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f579e87db70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f579e87db70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f579d955020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579e8aac70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579e87f9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579e87f9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579dc23a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f579d9290f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e891530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579d931860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f579e88aa70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f579e88aa70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f579d9d2c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579d930690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f579e882840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f579e882840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f579d9d1a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579d92b4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579de4eb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579d930ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc19d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579d92fb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc15640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f579d92e610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f579e7f1dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f579e7f1dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f579e7e7970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f579d92a1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e877330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e877330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e8727e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579d929d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579d969b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f579d966d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579dc23a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579dc14020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f579d955020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f579d952410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f579d9d2c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f579d9c7a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f579d969080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f579d9622d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f579e88b690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d9d25e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579d9d25e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f579d9c7370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f579dc246e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f579dc16c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e891530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d9d4be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579d9d4be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d9c97b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f579e881940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d9d38e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579d9d38e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f579d9c84d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f579e88bd50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f579d9d0170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f579d9d0170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f579d9c5020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f579d9d1a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f579d9c6840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f579d966d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579e879390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579e879390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579e876e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579d9cf6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579da22220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579da22220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579da20a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579da21020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d958350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579d958350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f579d955d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579d955d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d96dce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579d96dce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f579d967860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579d967860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579e879e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579e879e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579e873990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579d9cf020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d96a980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579d96a980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f579d966690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579d966690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579da06aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579da06aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579da01e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579da03950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579e878b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579e878b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579dcab7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579dcab7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579dca5020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e871640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e803950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e803950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e7e8b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f579e869b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f579e7fcbf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f579e7fcbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f579e7e5740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f579e866760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579dda56c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f579e866760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579dcae5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f579dcae5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579dca7ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f579dda56c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579dd95320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f579e85e2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f579dda2020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f579dda2020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579dd95bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f579e867060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f579dda2cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f579dda2cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f579dd94970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e85c330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579e854920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f579e85b420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f579da43a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f579da43a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f579da3da20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f579e858110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579da45aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f579da45aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579e26c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579e85bbf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f579e84ab70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f579e84bba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f579e84cc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f579e7ee0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f579e7e4b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f579e7d9d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e735690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e735690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e72f5f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f579e7d5060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f579e4e4690"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f579e4e4690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4d6020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f579e7d4380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f579e4e0020"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f579e4e0020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4c5020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f579e7d36a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f579e4de6a0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f579e4de6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4bab00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f579e7d10e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f579e4a0400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f579e4a0400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f579e33c680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f579e7bb1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579dedae20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579dedae20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f579e7ba2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f579ded67b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f579ded67b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f579e7ba9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f579ded3ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f579ded3ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f579e7bca40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f579ded7ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f579ded7ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579e7bc120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579ded2160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579ded2160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f579e7c1b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f579dec9870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f579dec9870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f579e7c83d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f579dec7880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f579dec7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f579e7c8c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f579dec60a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f579dec60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579e7c35f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579decee50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579decee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579e7c0020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579decd670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579decd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f579e7cd520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f579deb9500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f579deb9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f579e7c4a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f579debace0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f579debace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f579e7c08e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f579decbe50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f579decbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f579e7bf1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f579decde50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f579decde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579e7bfa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f579decce50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579decce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f579e7b9d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579dea7a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579dea7a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f579e7b9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579de7b9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579de7b9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579e7c9810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579de4eb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579e7e1020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579de4dd20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579de4dd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579de33310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f579e7ae820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f579e7af940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579e738c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579e730d40"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579e730d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d06b340"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e72f5f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579d06bb90"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579d06b340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d0633d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f579d06bb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579d05c020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579d0633d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d047ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f579d056780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579d063c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f579d063c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579d0465b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579d0593d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579e5698c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579e5698c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579e54dcf0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579d043710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f579d04d9d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579d04d9d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579d042da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579d04b120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579d04b120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579d0400c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f579d04a440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579d04a440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f579e6e35a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f579e6e35a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e62c6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f579e6e2a20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f579e6e2a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e62bac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f579e6ddd40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f579e6ddd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e61c220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f579e6db160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f579e6db160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e61b610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f579e6d9020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f579e6d9020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e6156d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f579e6d8570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f579e6d8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e614ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f579e6d5410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f579e6d5410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e60db30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f579e6d4890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f579e6d4890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e60b020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f579e6d28c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f579e6d28c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e605220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f579e6d1d40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f579e6d1d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e604610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f579e6cfa50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f579e6cfa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e5fd6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f579e6cd020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f579e6cd020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e5fcac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f579e6e8a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e634220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f579e6e9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e63acb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f579e6d63e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e6137a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f579e6efbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e63a020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f579e6cdda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e5fb7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f579e6f3280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e6886d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f579e6deda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e623cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f579e6de020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e623020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f579e6e0a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e625b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f579e6e6da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e6322f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f579e6d3890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e60bcb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f579e6e6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e633610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f579e6f7a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e6963e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f579e6f0730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f579e63cb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f579e6ea690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e6427a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f579e6da020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e61a2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f579e6f2700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f579e643ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f579e6d0ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e6032f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f579e6e1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e62a7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f579e6942f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e695bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f579e694940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f579e5f43f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f579e693020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f579e5f4b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e640610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e6963e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e63fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e695bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e639b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e6963e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e6372f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e695bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e631160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e6963e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e62f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e695bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f579e68d100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f579e68d750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f579e5f3430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f579e68dda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f579e5f3bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e629610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e628c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e622b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e61f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e619160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e6187a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e612610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e611c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e60ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e6082f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e602160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e6017a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579e5fa610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f579e5f9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f579e52f0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f579e5688e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f579e5688e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579e561b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e553c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f579e4e39c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4d0630"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f579e4e2cf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4cbb00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f579e4e53e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4dca20"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f579e4df370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4c0630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4dbc50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f579eb7bd50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4d42f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f579eb42020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4cf7a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f579eb7d580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4cac60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f579eb83cb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4c42f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f579eb38020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4bf7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f579eb458a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4b9c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f579eb3b8a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f579e49d700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f579e494c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f579e49f060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f579e32db70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e482760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f579e6e0a50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f579e481a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f579e6deda0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f579e480930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f579eb458a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f579e33b2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f579e46d020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f579e46d020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f579e4563f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f579e32c7a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f579e4703d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f579e4703d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f579e45d7a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f579e4603f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f579e4493f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f579e469a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f579e453d50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f579e466020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f579e4503f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f579e476a30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f579e459d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f579e463a30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f579e44dd50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f579e46c3f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f579e455710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f579e45f710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f579e448710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f579e4653f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f579e44f710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f579e46fd50"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f579e457020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f579e461020"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f579e44a100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f579e46b710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f579e454a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f579e468d50"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f579e451020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f579e477710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f579e45aa30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f579e464710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f579e44ea30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f579ded6160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dec8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f579dec00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f579dec70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f579deb4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579deb7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f579ded3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f579debd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579deb8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f579dec2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f579dec40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579ded8a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2e3660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579ded2e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f579ded1490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579debbc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f579ded1be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579deb8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f579debd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f579decc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f579debe0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f579dec0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f579debe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f579deb6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579deb7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f579dec4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f579debf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f579deb9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f579dec6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f579deb4ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579ded7480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f579dece670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f579decb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f579dec10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f579dec1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dec80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f579decf2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f579dece020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579ded27b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579deba500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f579deb6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f579dec20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f579debf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f579ded6e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f579dec50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f579decf940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f579dec5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f579debb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f579deb39b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2e1890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2dfba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2dea30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e2e2510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2dd8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f579e2cfb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579e271770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f579e271770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579e26c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f579e2dc060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e24ec40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e24ec40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579cde4a00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f579e2d8c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f579df008f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f579df008f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f579cde2020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f579e2cf2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f579deff020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f579deff020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f579cde0120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579e2d7a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f579e2ccbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f579e26c1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579e267b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f579cde0120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f579e1e8850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f579cde2020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f579e1e9110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579cde4a00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e1edd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cde3760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cdd82c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cdd82c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579e0682c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f579e1e9110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f579e16ca10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f579cde2630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f579e1e9790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f579e1e9790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f579e16b060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579e1e3a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579cde08c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579cdcb760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e1e58e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f579e1e4690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579cdd9640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579cdd9640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e06a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579e1deb40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579cdd3c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579cdd3c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f579e06c4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e1e58e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e16c250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f579e1e8850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f579e16bc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e1edd80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e16e470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579e1693e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579e1e3a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f579e16a5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f579e1e4690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579e164480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579e1deb40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f579e169a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579e15a020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579e15a020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f579e150700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579e164c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f579e1622f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f579e1512c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e14bc20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579e156d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f579e14b2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f579e11cbb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f579eb08bc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f579e1193e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f579eb053f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f579e117bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f579eb03bc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f579e1143e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f579eafebc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f579e112bb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f579eb003f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f579e121d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f579dfbfd40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f579cdd2440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e06b3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f579cdd2a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f579dfc6020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f579dfc6020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f579dfbfd40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579cdd72b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579e15a020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579cdd8a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579e068ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579e068ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579dfd2e80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e0678a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579cdcb760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579e0682c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579dfd3a60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579dfd3a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cd5d6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f579e06c4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f579e065d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579e06a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579dfd4ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579dfd4ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579cd5e850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e06b3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e053710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579dfd2e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579cd5ca70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579dfd1790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e0678a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579e052bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579dfd2e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f579e053d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579e156d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f579e0525e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f579e1512c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579dfd2270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579cd5de40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579cd5a9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579dfd1790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579cd5a2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579dfcf020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f579cd592b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f579cd60630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f579cd57480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f579dfb6bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f579e150700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f579dfb1700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f579eb08bc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f579dfafe40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f579eb03bc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f579de9ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f579dea5da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579de9eb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579de98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f579de91e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f579de98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f579de842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579de862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f579dea2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f579de8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579de872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f579de9cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579de9bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f579de92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f579de94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f579de97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dea6760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dea1aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f579dea0120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579de8ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f579dea0870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579de87ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579dea2dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f579de8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f579de9b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579de9c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f579dea5750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f579de8ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f579de8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f579de8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f579de85ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579de86ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f579de93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f579de8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f579de89ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f579de95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f579de84ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579dea5100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f579de9e370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f579de9a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f579de92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f579de97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f579de91670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f579de99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f579dea4450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579de99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f579de9f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f579de9fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f579de892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f579de8aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579dea1450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579de8a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f579de852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f579de93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f579de8e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f579dea4aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f579dea2770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f579de95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f579de9f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f579de94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f579de8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f579de837a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f579de6ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f579de78da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579de71b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579de6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f579de64e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f579de6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f579de572f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579de5a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f579de76120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f579de5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579de5b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f579de70c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579de6fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f579de65670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f579de68e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f579de6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579de79760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579de75aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f579de73120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579de5ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f579de73870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579de5bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579de76dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f579de61e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f579de6f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579de70480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f579de78750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f579de62e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f579de63670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f579de61670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f579de58ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579de5aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f579de66670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f579de63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f579de5cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f579de69670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f579de57ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579de78100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f579de71370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f579de6e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f579de65e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f579de6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f579de64670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f579de6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f579de77450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579de6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f579de72020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f579de72cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f579de5c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f579de5dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579de75450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579de5d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f579de582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f579de66e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f579de62670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f579de77aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f579de76770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f579de69e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f579de72670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f579de68670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f579de5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f579de567a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f579de30880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f579de25020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f579de25020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f579de1f140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f579de1bbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f579de24c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f579de24c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f579de06150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f579de1e530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579ddb11b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f579de0b540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f579de0c590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f579de0c590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f579ddba9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f579de01950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f579de08ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f579de08ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f579dddfa90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f579de069f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f579de0b540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579ddce020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f579ddc9530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f579ddc9530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579ddc5e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579ddc1020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f579e6f7a30"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579ddb9c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f579eb67d50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f579dd9e990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f579dd93900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f579dda0150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f579dd900f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f579dd90ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e735690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f579dd84500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f579e4e53e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f579dd7d820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f579e4e4690"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f579dd7cb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f579e4df370"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f579dd85880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f579e49d700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f579dd7a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579dcdfc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579dcdfc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dd7ad10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dcdd8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dcdd8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579dd776d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f579dcdc2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579dcdc2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f579dd77de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f579dcdbcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f579dcdbcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f579dd76530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f579dcda370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f579dcda370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dd76c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dcd9d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dcd9d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579dd78e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f579dcd3c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579dcd3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f579dd79780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f579dcba7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f579dcba7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579dd78550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579dcbf2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579dcbf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579dd743e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579dcd4480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579dcd4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dd735e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dcd0e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dcd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dd72020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dccf670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dccf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f579dd74e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f579dcd67b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f579dcd67b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f579dd719c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f579dcbcad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f579dcbcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579dd72890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f579dcbe2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579dcbe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579dd71130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f579dcbead0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579dcbead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dd6cd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dcaedf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dcaedf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dca6550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dd8cd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dd8bbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f579dd8a950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc22550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dd7fbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dc1a480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dc1a480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dc0c8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579dd6f6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f579dcd2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f579dcdb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579dcd5c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f579dcc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f579dccfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f579dcbb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f579dcc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f579dcd4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f579dcc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f579dccce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f579dcce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f579dcd7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579dcc2a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f579dcd7ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579dcbfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579dcd9060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f579dcc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f579dcd3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f579dcdc940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f579dcc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f579dcc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f579dcc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f579dcca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f579dcc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f579dcc0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f579dccd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f579dcbbad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f579dcd5490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f579dcd2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f579dcc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f579dccee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f579dcc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f579dcd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f579dcdb670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f579dcd6160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f579dcd6e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f579dcc02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f579dcc1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579dcd96b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579dcc12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f579dcbc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f579dccae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f579dcc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f579dcda9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f579dccde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f579dccc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f579dcc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f579dcaa020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f579dca57c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579dc90150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f579dca4020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f579e4e4690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f579dca3380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f579e4e39c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f579dca16b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f579e4e2cf0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f579dca0a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f579e49f060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f579dc9f6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579da91250"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579da91250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f579dc9e530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f579da6e120"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f579da6e120"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579dc9dad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579da8dd00"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579da8dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f579dc9d3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f579da8b9c0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f579da8b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc9c330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc9b1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f579dc99d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc22550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f579dc9bb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f579e7f1dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dc943e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f579da83500"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f579da83500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dc94cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f579da83ce0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f579da83ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f579dc95b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f579da8a7b0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f579da8a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f579dc926d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f579da6f900"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f579da6f900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579dc93590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f579da72900"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f579da72900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579dc93e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f579da70120"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f579da70120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579dc91020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579da72120"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579da72120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579dc918b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f579da90990"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f579da90990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f579dc849d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579dbb6a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579e5698c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f579dc07820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f579dbb7790"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f579dc09b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f579dba0610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f579dba0610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f579dab5a20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f579dba51d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579dac38e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579dac38e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579cbb9bc0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579dba63a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579db71020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579db71020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579cc2a9d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f579dabc020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f579db442f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f579db3f850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579db71870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f579db71870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579cc235f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579dab4d20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579db90b70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579db90b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579db88610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579cc2a9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579cc0d360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f579cc1dd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579cc29260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f579cc29260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f579cc0dbf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579cc1f9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579db90b70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579cc0add0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f579cc12020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f579cc12020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579cc07440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579cc11760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579cc11760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579cc04760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f579cc10a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f579cc10a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f579db86b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f579e5688e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f579db3b9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f579cbb2180"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f579dabc020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f579cbac8b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f579dab7450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f579cbad410"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f579ed87130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f579cbaa020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f579daabce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f579daa2610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f579daa2610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f579dba51d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f579da842f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f579da8f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579da882f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f579da7b500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f579da82500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f579da8e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f579da77ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579da73900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f579da872f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f579da852f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f579da7dce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f579da7e500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f579da82ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579da90020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579da8b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579da75120"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f579da8a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579da8d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f579da77500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f579da87ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579da88ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f579da8f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f579da79500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f579da7bce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f579da79ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f579da6f120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f579da7ece0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f579da7a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f579da73120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f579da81ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f579da89ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f579da85ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f579da7c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f579da81500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f579da7cce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f579da84cd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f579da8fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f579da89490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f579da74900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f579da74120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579da75900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f579da70900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f579da7d500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f579da7ace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f579da8e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f579da8d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f579da80500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f579da8ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f579da80ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f579da76500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f579da6edb0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f579da41920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f579da3e940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579da47990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579da3e080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579da1de60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f579da21020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f579da1cae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579da1e690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f579da1e690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579e26c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f579da1b8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f579da43a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579da1a170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f579da03200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f579d9fe570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579d9fd3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f579da03950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579d9fda70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579d9c5d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f579d9cf6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579d9c4b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f579d9cf020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f579d9c32f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579d9c2170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f579d9c2b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f579d975410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f579d996db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f579d968800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579d964580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f579d964580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f579e26c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579d94f1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e87f020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f579d8348d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f579d8272f0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579d8981a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579d83a720"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f579d834280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f579d82ac70"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579d830dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579d898b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f579d839120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d832480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f579d839d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d833940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f579d8304a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f579d516a30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579d832480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d6f6830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f579d833940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f579d6f6110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f579d6f4760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f579d8304a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579d81c8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579d830dc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579d6f2590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579d830dc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579d6eacc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579d830dc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f579d6f30e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f579d81d5c0"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f579d6f39d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f579d820130"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f579d8178e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f579d6eeb60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f579d815060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579d6c4080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f579d6c4080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f579d528080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f579d6e0d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f579d6c4890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f579d6c4890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f579d52e440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f579d7c0e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f579d7f7d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f579d7c2400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f579d7bb0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f579d6f1c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f579d6f0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f579d6c1020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f579d52d440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f579d52d440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f579d6ad020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f579d52e440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f579d6b0860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d52c020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d5288e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579d527020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d530020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579d530020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d6b27a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d530c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579caaba90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579caaba90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d572510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d6ab450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d52c020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579caa4be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d6b1a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f579d6ac1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579caace00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579caace00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d573280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579d6a91d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579caa4440"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579caa4440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f579d574510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d6b1a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d63edc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f579d6ad020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f579d63c890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f579d6b0860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f579d63d6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579d6b27a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d63e020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d63a3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d6ab450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f579d63b5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f579d6ac1d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579d6355b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579d6a91d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f579d63aa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579d625d30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579d625d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f579d61e3c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579d634020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f579d58f7c0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f579d58f7c0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f579e5688e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f579d631120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579d622860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f579d618020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d625500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d6219c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f579d6188f0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f579eaf9bc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f579d615020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f579eaf63f0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f579d613890"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f579eaf4bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f579d610020"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f579eaefbc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f579d60e890"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f579eaf13f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579caa9a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579d625d30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579caa92b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d572d20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d572d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d566060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d571af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579caa4be0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d572510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d569bd0"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d569bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f579ca3b6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f579d574510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f579d56e230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579d573280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579d56ae30"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f579d56ae30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f579ca3c850"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d566060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579ca3aa70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f579d56d2f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579d622860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d566950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d571af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d56c120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d566060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579d55fd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579d568400"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579d568400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579ca3be40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d55f020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d625500"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579ca399d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d566950"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579ca392d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579d5630f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f579ca382b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f579ca3f630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f579ca35480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579ca016a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d55f020"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f579ca01e00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f579d55f780"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579ca00410"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579d55fd50"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579c9ff060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d549990"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579c9ec920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579c9df390"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579c9eb590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579e8e7020"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579c9ea270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579e8e7c90"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f579d468020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f579c9e98f0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f579c9e98f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e8e4080"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579c9de060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d4d2930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579c9dec70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579e8e7c90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f579d4d2930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f579d482df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f579d480400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f579e8eb7f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579d47e060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579e8e7c90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579d47d720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579e8e7020"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f579d47c480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f579d47cc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f579d45e020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f579e8e7020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f579d45ec30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f579e8e7c90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="14:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579db36530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="44(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
        <short>&#10; An HPL abstraction of USART1 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART1 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="56(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="96(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.TimerTramaTDMA" loc="44(BaseStationC.TimerTramaTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.TimerLeds" loc="44(BaseStationC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC" loc="47(BaseStationC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC" loc="47(BaseStationC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BaseStationC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseStationC.AMReceiverC" loc="43(BaseStationC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f579eac5810" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f579eac5bc0" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f579eac4020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f579eac43d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f579eac4740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f579e6c8930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f579e6c8cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f579e6c70d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f579e6c7450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f579e6c77d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f579e6c7b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f579e6c6020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f579e6c63b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f579e6c6780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f579e68ac80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f579e6870d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f579e5a4cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f579e5a4cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f579e562a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f579e562a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f579e54c570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f579e54c570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f579e54cd40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f579e54cd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f579e54b160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f579e54b160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f579e54b940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f579e54b940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f579e54bd10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f579e549540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f579e549540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f579e529620" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f579e529620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f579e529df0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f579e529df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f579e528220" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f579e528220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f579e528a00" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f579e528a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f579e528dd0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f579e04d5e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f579e0419b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f579e026cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579dddc020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579dddc020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f579dddc7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579dddc7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579dbb8d00" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579dbb8d00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579db6ccc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579db6ccc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579db36530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579db36530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f579db36880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579db28980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579db28980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f579db28cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f579d4f4360" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f579d4ed140" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f579d4e6020" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f579d4cec80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f579d463330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f579ed95160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ed95160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed954e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f579ed98b40" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f579ed98b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f579ed97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ed910c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ed910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed91440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f579ed87130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f579ed87130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f579ed901b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f579ed90340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f579ed877d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f579ed87960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f579ed87af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f579ed87c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f579ed87e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f579ed90020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f579ed874b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f579ed87640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f579ed82700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f579ed82700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed82a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ed841a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ed841a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed84520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f579ed82020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f579ed82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed823a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f579ed82de0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f579ed82de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed81180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f579ed84810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f579ed84810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f579ed83980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f579ed83b10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f579ed83020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f579ed831b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f579ed83340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f579ed834d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f579ed83660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f579ed837f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f579ed84b90"/>
        <function-ref name="node_id" scoped="" ref="0x7f579ed84d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ed86640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ed86640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed869c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f579ed6c900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f579ed6c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed6cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f579ed4ade0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f579ed4ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f579ed4fc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f579ed4f310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f579ed4f4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f579ed4f630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f579ed4f180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f579ed4f7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f579ed4f950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f579ed4fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ed53850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ed53850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed53bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f579ed39830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f579ed39830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f579ed387f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f579ed39d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f579ed38020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f579ed381b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f579ed39bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f579ed38340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f579ed384d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f579ed38660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f579ed38af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f579ed38af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f579ed38e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ed391c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ed391c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ed39540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f579eeb8c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f579eeb8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f579f0930a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f579f0159a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f579f0159a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f579f015d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f579f130020"/>
        <function-ref name="sleep" scoped="" ref="0x7f579f1301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f579ef563d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f579ef563d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f579ef56750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f579ed518b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f579ed518b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f579ed047f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f579ed51dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f579ed04020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f579ed041b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f579ed51c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f579ed04340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f579ed044d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f579ed04660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f579ecf78d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f579ecf78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ecf7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f579ecf8110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f579ecf8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f579ecf8490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f579ecf71d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f579ecf71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ecf7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f579ecf8780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f579ecf8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ecf8b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f579ecf8c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f579ecf8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f579f230940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f579f230940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579f230cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579f230e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f579f23d1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f579f23d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579f23d560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f579f23d6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f579f23d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f579ede1040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f579ede1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579ede13c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579ede1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f579eddc490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f579eddc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f579eddc810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f579eddc9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f579eddcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f579ede2140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f579ede2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ede24c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f579ede2650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f579ede27e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f579ecdebc0" loc="18:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f579ecdebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579ecdd020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579ecdd1b0"/>
        <function-ref name="start" scoped="" ref="0x7f579ecdd340"/>
        <function-ref name="stop" scoped="" ref="0x7f579ecdd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSendTask" ref="0x7f579ec39bf0" loc="88:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSendTask" scoped="" ref="0x7f579ec39bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579ec38020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579ec381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f579ecdf660" loc="16:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f579ecdf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f579ecdf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f579ecde020" loc="17:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f579ecde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579ecde3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579ecde530"/>
        <function-ref name="start" scoped="" ref="0x7f579ecde6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f579ecde850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f579ec86e30" loc="21:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7f579ec86e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579ecd71e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f579ec7e160" loc="28:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579ec7e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579ec7e4e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579ec7e670"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579ec7e800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579ec7e990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579ec7eb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f579ec6b440" loc="30:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579ec6b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579ec6b7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579ec6b950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579ec6bae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579ec6bc70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579ec6be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTramaTDMA" ref="0x7f579ec68270" loc="33:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f579ec68270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579ec596e0"/>
        <function-ref name="fired" scoped="" ref="0x7f579ec67cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579ec5ba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579ec5b5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f579ec58020"/>
        <function-ref name="gett0" scoped="" ref="0x7f579ec59b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579ec5b170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579ec68e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579ec590d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579ec67360"/>
        <function-ref name="stop" scoped="" ref="0x7f579ec67830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f579ec3ac80" loc="87:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7f579ec3ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579ec390a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579ec39230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f579ec690c0" loc="31:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579ec690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579ec69440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579ec46500" loc="35:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579ec46500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579ec46880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579ec46a10"/>
        <function-ref name="led1On" scoped="" ref="0x7f579ec46ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579ec46d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579ec52020"/>
        <function-ref name="get" scoped="" ref="0x7f579ec521b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579ec52340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579ec52980"/>
        <function-ref name="set" scoped="" ref="0x7f579ec524d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f579ec52660"/>
        <function-ref name="led2On" scoped="" ref="0x7f579ec527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f579ec7d870" loc="22:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7f579ec7d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579ec7dbf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579ec7dd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579ec8c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579ec8c1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579ec8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f579ecd8020" loc="20:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7f579ecd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579ecd83a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579ecd8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579ecd86c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579ecd8850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579ecd89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f579ec6d9b0" loc="23:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7f579ec6d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579ec6dd30"/>
        <function-ref name="source" scoped="" ref="0x7f579ec87020"/>
        <function-ref name="address" scoped="" ref="0x7f579ec871b0"/>
        <function-ref name="destination" scoped="" ref="0x7f579ec87340"/>
        <function-ref name="setSource" scoped="" ref="0x7f579ec874d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579ec87660"/>
        <function-ref name="type" scoped="" ref="0x7f579ec877f0"/>
        <function-ref name="setType" scoped="" ref="0x7f579ec87980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579ec87b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579ec87ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579ec87e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f579ec7edd0" loc="29:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579ec7edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579ec6c180"/>
        <function-ref name="source" scoped="" ref="0x7f579ec6c310"/>
        <function-ref name="address" scoped="" ref="0x7f579ec6c4a0"/>
        <function-ref name="destination" scoped="" ref="0x7f579ec6c630"/>
        <function-ref name="setSource" scoped="" ref="0x7f579ec6c7c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579ec6c950"/>
        <function-ref name="type" scoped="" ref="0x7f579ec6cae0"/>
        <function-ref name="setType" scoped="" ref="0x7f579ec6cc70"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579ec6ce00"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579ec6b020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579ec6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f579ec58650" loc="34:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f579ec58650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579ec54c40"/>
        <function-ref name="fired" scoped="" ref="0x7f579ec561e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579ec54020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579ec56ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f579ec53590"/>
        <function-ref name="gett0" scoped="" ref="0x7f579ec53110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579ec56660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579ec57390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579ec54630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579ec57860"/>
        <function-ref name="stop" scoped="" ref="0x7f579ec57d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f579ebc5c70" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579ebc5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579ebc2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579ebc21b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579ebc2340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579ebc24d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579ebc2660"/>
        <function-ref name="get" scoped="" ref="0x7f579ebc27f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579ebc2980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579ebc1020"/>
        <function-ref name="set" scoped="" ref="0x7f579ebc2b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f579ebc2ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f579ebc2e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f579ebb6b50" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f579ebb6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ebbc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ebbc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ebbc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ebbc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579ebbc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ebbc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f579ebbc980"/>
        <function-ref name="clr" scoped="" ref="0x7f579ebbcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ebbe020" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ebbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ebbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f579ebbce30" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f579ebbce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ebbb1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ebbb370"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ebbb500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ebbb690"/>
        <function-ref name="get" scoped="" ref="0x7f579ebbb820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ebbb9b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ebbbb40"/>
        <function-ref name="clr" scoped="" ref="0x7f579ebbbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f579ebbe620" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579ebbe620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579ebbe9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579ebbeb30"/>
        <function-ref name="led1On" scoped="" ref="0x7f579ebbecc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579ebbee50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579ebbd020"/>
        <function-ref name="get" scoped="" ref="0x7f579ebbd1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579ebbd340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579ebbd980"/>
        <function-ref name="set" scoped="" ref="0x7f579ebbd4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f579ebbd660"/>
        <function-ref name="led2On" scoped="" ref="0x7f579ebbd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f579ebb5020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f579ebb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ebb53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ebb5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ebb56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ebb5850"/>
        <function-ref name="get" scoped="" ref="0x7f579ebb59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ebb5b70"/>
        <function-ref name="set" scoped="" ref="0x7f579ebb5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f579ebb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f579ebbf590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f579ebbf590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ebbf910"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ebbfaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ebbfc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ebbfdc0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb981b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb98340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f579eb98830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f579eb98830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb98bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb98d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb97020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb971b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb97340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb974d0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb97660"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb977f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f579eb96dd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579eb96dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579eb95180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f579eb97b50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f579eb97b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb96020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb961b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb96340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb964d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb96660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb967f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb96980"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb96b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f579eb7bd50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f579eb7bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb7a100"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb7a290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb7a420"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb7a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb7a8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb7aa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb7abf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb7ad80"/>
        <function-ref name="get" scoped="" ref="0x7f579eb79020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb791b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb79340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb794d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb79760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb798f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb79a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb79c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb7a5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb79da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f579eb61e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f579eb61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb60210"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb603a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb60530"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb5e340"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb60850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb60b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb60d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb5f020"/>
        <function-ref name="get" scoped="" ref="0x7f579eb5f1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb5f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb5f4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb5f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb5f8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb5fa80"/>
        <function-ref name="set" scoped="" ref="0x7f579eb5fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb5fda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb606c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb5e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f579ead73d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f579ead73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ead7750"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ead78e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ead7a70"/>
        <function-ref name="clr" scoped="" ref="0x7f579ead57f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ead7d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ead6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ead61b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ead6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ead64d0"/>
        <function-ref name="get" scoped="" ref="0x7f579ead6660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ead67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ead6980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ead6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ead6da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ead5020"/>
        <function-ref name="set" scoped="" ref="0x7f579ead51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ead5340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ead7c00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ead54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ead5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f579eadc3e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f579eadc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eadc760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eadc8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eadca80"/>
        <function-ref name="clr" scoped="" ref="0x7f579eada7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eadcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eadb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eadb1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eadb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eadb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eadb660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eadb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eadb980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eadbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eadbda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eada020"/>
        <function-ref name="set" scoped="" ref="0x7f579eada1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eada340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eadcc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eada4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eada660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f579eb053f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f579eb053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb05770"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb05900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb05a90"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb037f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb05db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb04020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb041b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb04340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb044d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb04660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb04980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb04b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb04da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb03020"/>
        <function-ref name="set" scoped="" ref="0x7f579eb031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb03340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb05c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb03660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f579eb5ce50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f579eb5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb5b210"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb5b3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb5b530"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb59340"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb5b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb5b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb5bb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb5bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb5a020"/>
        <function-ref name="get" scoped="" ref="0x7f579eb5a1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb5a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb5a4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb5a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb5a8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb5aa80"/>
        <function-ref name="set" scoped="" ref="0x7f579eb5ac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb5ada0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb5b6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb59020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f579eb42020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f579eb42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb42530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb426c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb404d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb429e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb42b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb42d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb41020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb411b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb41340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb414d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb41660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb41a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb41c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb41da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb40020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb42850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb401b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f579eb28020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f579eb28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb28530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb286c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb264d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb289e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb28b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb28d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb27020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb271b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb27340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb274d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb27660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb27a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb27c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb27da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb26020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb28850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f579eb14020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f579eb14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb14530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb146c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb124d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb149e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb14b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb14d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb131b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb13340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb13660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb13a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb13c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb13da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb12020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb14850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb121b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f579eb003f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f579eb003f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb00770"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb00900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb00a90"/>
        <function-ref name="clr" scoped="" ref="0x7f579eafe7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb00db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaff1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaff660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaff980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaffb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaffda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eafe020"/>
        <function-ref name="set" scoped="" ref="0x7f579eafe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eafe340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb00c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eafe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eafe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f579eaeb3e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f579eaeb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaeb760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaeb8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaeba80"/>
        <function-ref name="clr" scoped="" ref="0x7f579eae97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaea1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaea4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaea660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaea7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaea980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaeab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaeada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eae9020"/>
        <function-ref name="set" scoped="" ref="0x7f579eae91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eae9340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaebc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eae94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eae9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f579eacd3f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f579eacd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eacd770"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eacd900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eacda90"/>
        <function-ref name="clr" scoped="" ref="0x7f579eacb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eacddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eacc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eacc1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eacc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eacc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eacc660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eacc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eacc980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaccb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaccda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eacb020"/>
        <function-ref name="set" scoped="" ref="0x7f579eacb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eacb340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eacdc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eacb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eacb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f579eb73580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f579eb73580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb73900"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb73a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb73c20"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb71980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb72020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb72340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb72660"/>
        <function-ref name="get" scoped="" ref="0x7f579eb727f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb72980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb72b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb72ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb71020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb711b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb71340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb714d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb73db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb71660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f579eafebc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f579eafebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eafd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eafd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eafd340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eafb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eafd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eafd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eafd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eafdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eafdca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eafde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eafc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eafc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eafc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eafc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eafc760"/>
        <function-ref name="set" scoped="" ref="0x7f579eafc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eafca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eafd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eafcc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eafcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f579eb6e580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f579eb6e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb6e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb6ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb6ec20"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb6c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb6d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb6d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb6d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb6d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb6d660"/>
        <function-ref name="get" scoped="" ref="0x7f579eb6d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb6d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb6db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb6dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb6c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb6c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb6c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb6c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb6edb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb6c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f579eb54710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f579eb54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb54a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb54c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb54db0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb52a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb53340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb534d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb53660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb537f0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb53980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb53b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb53ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb53e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb52120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb522b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb52440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb525d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb53020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb52760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f579eb3b8a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f579eb3b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb3bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb3bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb3a020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb39c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb3a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb3a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb3a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb3a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb3a980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb3ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb3aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb3ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb39020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb392b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb39440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb395d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb39760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb3a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb398f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb39a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f579eb218a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f579eb218a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb21c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb21db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb20020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb1fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb20340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb204d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb20660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb207f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb20980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb20b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb20ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb20e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb1f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb1f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb1f440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb1f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb1f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb201b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb1f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb1fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f579eb0d8a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f579eb0d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb0dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb0ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb0c020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb0bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb0c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb0c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb0c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb0c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb0c980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb0cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb0cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb0ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb0b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb0b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb0b440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb0b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb0b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb0c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb0b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb0ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f579eb80d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f579eb80d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb7f100"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb7f290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb7f420"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb7d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb7f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb7f8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb7fa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb7fbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb7fd80"/>
        <function-ref name="get" scoped="" ref="0x7f579eb7e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb7e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb7e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb7e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb7e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb7e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb7ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb7ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb7f5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb7eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f579eb67d50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f579eb67d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb66210"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb663a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb66530"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb64340"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb66850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb669e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb66b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb66d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb65020"/>
        <function-ref name="get" scoped="" ref="0x7f579eb651b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb65340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb654d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb65660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb658f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb65a80"/>
        <function-ref name="set" scoped="" ref="0x7f579eb65c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb65da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb666c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb64020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f579eb4de50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f579eb4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb4c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb4c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb4c530"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb4a340"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb4c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb4cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb4cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb4b020"/>
        <function-ref name="get" scoped="" ref="0x7f579eb4b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb4b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb4b4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb4b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb4b8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb4ba80"/>
        <function-ref name="set" scoped="" ref="0x7f579eb4bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb4bda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb4c6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb4a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f579eb08bc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f579eb08bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb07020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb071b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb07340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb05020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb07660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb077f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb07980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb07b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb07ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb07e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb06020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb061b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb06340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb065d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb06760"/>
        <function-ref name="set" scoped="" ref="0x7f579eb068f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb06a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb074d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb06c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb06da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f579eae4bb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f579eae4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eae3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eae31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eae3340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eae1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eae3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eae37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eae3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eae3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eae3ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eae3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eae2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eae21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eae2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eae25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eae2760"/>
        <function-ref name="set" scoped="" ref="0x7f579eae28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eae2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eae34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eae2c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eae2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f579ead0bb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f579ead0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eacf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eacf1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eacf340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eacd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eacf660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eacf7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eacf980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eacfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eacfca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eacfe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eace020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eace1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eace340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eace5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eace760"/>
        <function-ref name="set" scoped="" ref="0x7f579eace8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eacea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eacf4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eacec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f579eaf4bc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f579eaf4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaf3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaf31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaf3340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eaf1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaf3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaf37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaf3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaf3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaf3ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaf3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaf2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaf21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaf2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaf25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eaf2760"/>
        <function-ref name="set" scoped="" ref="0x7f579eaf28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eaf2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaf34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaf2c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaf2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f579eb48e50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f579eb48e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb47410"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb475a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb47730"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb454d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb47a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb47be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb47d70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb46020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb461b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb46340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb464d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb46660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb46a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb46c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb46da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb45020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb478c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb451b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f579eb2e020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f579eb2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb2e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb2e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb2e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb2c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb2e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb2eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb2ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb2d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb2d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb2d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb2d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb2d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb2d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb2da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb2dc10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb2dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb2c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb2e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb2c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f579eb19020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f579eb19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb19530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb196c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb199e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb19b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb19d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb18020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb181b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb18340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb18660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb18a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb18c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb18da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb17020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb19850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb171b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f579eae13e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f579eae13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eae1760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eae18f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eae1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f579eadf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eae1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eae0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eae01b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eae0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eae04d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eae0660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eae07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eae0980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eae0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eae0da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eadf020"/>
        <function-ref name="set" scoped="" ref="0x7f579eadf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eadf340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eae1c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eadf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eadf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f579eafb3e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f579eafb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eafb760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eafb8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eafba80"/>
        <function-ref name="clr" scoped="" ref="0x7f579eaf97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eafbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eafa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eafa1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eafa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eafa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eafa660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eafa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eafa980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eafab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eafada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eaf9020"/>
        <function-ref name="set" scoped="" ref="0x7f579eaf91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eaf9340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eafbc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaf94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaf9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f579eb78580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f579eb78580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb78900"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb78a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb78c20"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb76980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb77020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb771b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb77340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb77660"/>
        <function-ref name="get" scoped="" ref="0x7f579eb777f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb77980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb77b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb77ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb76020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb761b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb76340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb764d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb78db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb76660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f579eb5e710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f579eb5e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb5ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb5ec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb5edb0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb5ca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb5d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb5d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb5d4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb5d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb5d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb5d980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb5db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb5dca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb5de30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb5c120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb5c2b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb5c440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb5c5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb5d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb5c760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb5c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f579eb1e020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f579eb1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb1e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb1e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb1e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb1c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb1e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb1eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb1ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb1d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb1d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb1d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb1d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb1d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb1da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb1dc10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb1dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb1c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb1e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb1c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb1c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f579eb59710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f579eb59710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb59a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb59c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb59db0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb57a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb58340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb584d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb58660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb587f0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb58980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb58b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb58ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb58e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb57120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb572b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb57440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb575d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb58020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb57760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f579eb408a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f579eb408a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb40c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb40db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb3f020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb3ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb3f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb3f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb3f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb3f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb3f980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb3fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb3fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb3fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb3e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb3e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb3e440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb3e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb3e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb3f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb3e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb3ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f579eb268a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f579eb268a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb26c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb26db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb25020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb24c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb25340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb25660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb257f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb25980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb25b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb25ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb25e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb24020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb242b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb24440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb245d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb24760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb251b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb248f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb24a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f579eb128a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f579eb128a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb12c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb12db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb11020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb10c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb11340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb11660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb117f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb11980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb11b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb11ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb11e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb10020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb102b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb10440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb105d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb10760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb111b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb108f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb10a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f579eaf63f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f579eaf63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaf6770"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaf6900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaf6a90"/>
        <function-ref name="clr" scoped="" ref="0x7f579eaf47f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaf6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaf5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaf51b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaf5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaf54d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaf5660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaf57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaf5980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaf5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaf5da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eaf4020"/>
        <function-ref name="set" scoped="" ref="0x7f579eaf41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eaf4340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaf6c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaf44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaf4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f579eb83cb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f579eb83cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb91230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb913c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb821b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb916e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb91870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb91a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb91b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb91d20"/>
        <function-ref name="get" scoped="" ref="0x7f579eb90020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb90340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb90760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb908f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb90a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb90c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb91550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb90da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f579eb6cd50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f579eb6cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb6b100"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb6b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb6b420"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb6b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb6b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb6ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb6bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb6bd80"/>
        <function-ref name="get" scoped="" ref="0x7f579eb6a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb6a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb6a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb6a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb6a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb6a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb6aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb6ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb6b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb6ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f579eb52e50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f579eb52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb51210"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb513a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb51530"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb4f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb51850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb51b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb51d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb50020"/>
        <function-ref name="get" scoped="" ref="0x7f579eb501b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb50340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb504d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb50660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb508f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb50a80"/>
        <function-ref name="set" scoped="" ref="0x7f579eb50c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb50da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb516c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb4f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f579eb38020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f579eb38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb38530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb386c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb364d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb389e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb38b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb38d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb37020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb371b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb37340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb374d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb37660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb37a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb37c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb37da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb36020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb38850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb361b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f579eaf13f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f579eaf13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaf1770"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaf1900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaf1a90"/>
        <function-ref name="clr" scoped="" ref="0x7f579eaef7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaf1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaf0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaf01b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaf0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaf04d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaf0660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaf07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaf0980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaf0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaf0da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eaef020"/>
        <function-ref name="set" scoped="" ref="0x7f579eaef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eaef340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaf1c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f579eae9bb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f579eae9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eae8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eae81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eae8340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eae6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eae8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eae87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eae8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eae8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eae8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eae8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eae7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eae71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eae7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eae75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eae7760"/>
        <function-ref name="set" scoped="" ref="0x7f579eae78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eae7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eae84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eae7c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eae7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f579eadabb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f579eadabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ead9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ead91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ead9340"/>
        <function-ref name="clr" scoped="" ref="0x7f579ead7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ead9660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ead97f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ead9980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ead9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ead9ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ead9e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ead8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ead81b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ead8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ead85d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ead8760"/>
        <function-ref name="set" scoped="" ref="0x7f579ead88f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ead8a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ead94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ead8c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ead8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f579eb33020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f579eb33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb33530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb336c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb314d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb339e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb33b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb33d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb32020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb321b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb32340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb32660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb32a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb32c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb32da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb31020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb33850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb311b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f579eaefbc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f579eaefbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaed1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaed340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eaeb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaed660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaed7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaed980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaedb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaedca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaede30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaec1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaec5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eaec760"/>
        <function-ref name="set" scoped="" ref="0x7f579eaec8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eaeca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaed4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaecc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f579eb7d580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f579eb7d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb7d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb7da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb7dc20"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb7b980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb7c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb7c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb7c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb7c660"/>
        <function-ref name="get" scoped="" ref="0x7f579eb7c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb7c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb7cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb7cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb7b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb7b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb7b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb7b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb7ddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb7b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f579eb64710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f579eb64710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb64a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb64c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb64db0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb61a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb62340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb624d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb62660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb627f0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb62980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb62b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb62ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb62e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb61120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb612b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb61440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb615d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb62020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb61760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f579eb4a710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f579eb4a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb4aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb4ac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb4adb0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb48a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb49340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb494d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb49660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb497f0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb49980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb49b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb49ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb49e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb48120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb482b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb48440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb485d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb49020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb48760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f579eaf9bc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f579eaf9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaf8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaf81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaf8340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eaf6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaf8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaf87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaf8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eaf8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eaf8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eaf8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eaf7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eaf71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eaf7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eaf75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eaf7760"/>
        <function-ref name="set" scoped="" ref="0x7f579eaf78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eaf7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaf84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaf7c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaf7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f579eadfbb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f579eadfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eade020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eade1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eade340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eadc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eade660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eade7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eade980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eadeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eadeca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eadee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eadd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eadd1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eadd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eadd5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eadd760"/>
        <function-ref name="set" scoped="" ref="0x7f579eadd8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eadda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eade4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eaddc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eaddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f579eb458a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f579eb458a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb45c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb45db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb44020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb43c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb44340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb444d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb44660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb447f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb44980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb44b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb44ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb44e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb43020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb432b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb43440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb435d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb43760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb441b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb438f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb43a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f579eb2c8a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f579eb2c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb2cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb2cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb2b020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb2ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb2b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb2b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb2b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb2b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb2b980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb2bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb2bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb2be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb2a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb2a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb2a440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb2a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb2a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb2b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb2a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb2aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f579eb178a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f579eb178a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb17c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb17db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb16020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb15c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb16340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb16660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb167f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb16980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb16b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb16ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb16e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb15020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb152b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb15440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb155d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb15760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb161b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb158f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb15a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f579eb76d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f579eb76d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb75100"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb75290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb75420"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb731b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb75740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb758d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb75a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb75bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb75d80"/>
        <function-ref name="get" scoped="" ref="0x7f579eb74020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb741b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb74340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb744d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb74760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb748f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb74a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb74c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb755b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb74da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f579eb1c8a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f579eb1c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb1cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb1cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb1b020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb1ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb1b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb1b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb1b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb1b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb1b980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb1bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb1bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb1be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb1a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb1a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb1a440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb1a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb1a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb1b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb1a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb1aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f579eb71d50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f579eb71d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb70100"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb70290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb70420"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb6e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb70740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb708d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb70a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb70bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb70d80"/>
        <function-ref name="get" scoped="" ref="0x7f579eb6f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb6f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb6f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb6f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb6f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb6f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb6fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb6fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb705b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb6fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f579eb57e50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f579eb57e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb56210"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb563a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb56530"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb54340"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb56850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb56b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb56d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb55020"/>
        <function-ref name="get" scoped="" ref="0x7f579eb551b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb55340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb554d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb55660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb558f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb55a80"/>
        <function-ref name="set" scoped="" ref="0x7f579eb55c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb55da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb566c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb54020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f579eb3d020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f579eb3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb3d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb3d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb3d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb3b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb3d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb3db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb3dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb3c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb3c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb3c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb3c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb3c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb3c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb3ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb3cc10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb3cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb3b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb3d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb3b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f579eb23020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f579eb23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb23530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb236c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb214d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb239e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb23b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb23d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb22020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb221b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb22340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb224d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb22660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb227f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb22a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb22c10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb22da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb21020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb23850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb211b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f579eb0f020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f579eb0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb0f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb0f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb0f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb0d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb0f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb0fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb0fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb0e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb0e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb0e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb0e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb0e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb0e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb0ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb0ec10"/>
        <function-ref name="set" scoped="" ref="0x7f579eb0eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb0d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb0f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb0d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f579eb82580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f579eb82580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb82900"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb82a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb82c20"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb80980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb81020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb811b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb81340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb81660"/>
        <function-ref name="get" scoped="" ref="0x7f579eb817f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb81980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb81b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb81ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb80020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb801b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb80340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb804d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb82db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb80660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f579eb69580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f579eb69580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb69900"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb69a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb69c20"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb67980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb68020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb681b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb68340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb684d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb68660"/>
        <function-ref name="get" scoped="" ref="0x7f579eb687f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb68980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb68b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb68ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb67020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb671b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb67340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb674d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb69db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb67660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f579eb4f710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f579eb4f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb4fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb4fc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb4fdb0"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb4da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb4e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb4e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb4e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb4e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb4e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb4e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb4eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb4eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb4ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb4d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb4d2b0"/>
        <function-ref name="set" scoped="" ref="0x7f579eb4d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb4d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb4e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb4d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb4d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f579eb368a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f579eb368a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb36c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb36db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb35020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb34c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb35340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb354d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb35660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb357f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb35980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb35b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb35ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb35e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb34020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb342b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb34440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb345d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb34760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb351b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb348f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb34a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f579eae63e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f579eae63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eae6760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eae68f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eae6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f579eae47f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eae6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eae5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eae51b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eae5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eae54d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eae5660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eae57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eae5980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eae5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eae5da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eae4020"/>
        <function-ref name="set" scoped="" ref="0x7f579eae41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eae4340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eae6c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eae44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eae4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f579ead5ba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f579ead5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ead4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ead41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ead4340"/>
        <function-ref name="clr" scoped="" ref="0x7f579ead2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ead4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ead47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ead4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ead4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ead4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ead4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ead3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ead31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ead3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ead35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ead3760"/>
        <function-ref name="set" scoped="" ref="0x7f579ead38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ead3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ead44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ead3c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ead3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f579eb03bc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f579eb03bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb02020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb021b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb02340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb00020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb02660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb027f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb02980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb02b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb02ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb02e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb01020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb011b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb01340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb015d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb01760"/>
        <function-ref name="set" scoped="" ref="0x7f579eb018f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb01a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb024d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb01c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb01da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f579eb318a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f579eb318a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb31c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb31db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb30020"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb2fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb30340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb304d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb30660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb307f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb30980"/>
        <function-ref name="get" scoped="" ref="0x7f579eb30b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb30ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb30e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb2f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb2f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb2f440"/>
        <function-ref name="set" scoped="" ref="0x7f579eb2f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb2f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb301b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb2f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb2fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f579ead23e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f579ead23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ead2760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ead28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ead2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f579ead07f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ead2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ead1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ead11b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ead1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ead14d0"/>
        <function-ref name="get" scoped="" ref="0x7f579ead1660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ead17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ead1980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ead1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ead1da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ead0020"/>
        <function-ref name="set" scoped="" ref="0x7f579ead01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ead0340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ead2c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ead04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ead0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f579eacbbc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f579eacbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eaca020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eaca1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eaca340"/>
        <function-ref name="clr" scoped="" ref="0x7f579eac8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eaca660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eaca7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eaca980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eacab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eacaca0"/>
        <function-ref name="get" scoped="" ref="0x7f579eacae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eac9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eac91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eac9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eac95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eac9760"/>
        <function-ref name="set" scoped="" ref="0x7f579eac98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eac9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eaca4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eac9c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eac9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f579eb0a060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f579eb0a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579eb0a7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579eb0a970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579eb0ab00"/>
        <function-ref name="clr" scoped="" ref="0x7f579eb087f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579eb0ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579eb09020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579eb091b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579eb09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579eb094d0"/>
        <function-ref name="get" scoped="" ref="0x7f579eb09660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579eb097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579eb09980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579eb09b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579eb09da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579eb08020"/>
        <function-ref name="set" scoped="" ref="0x7f579eb081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579eb08340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579eb0ac90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579eb084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579eb08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea97540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea97540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea978c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea97a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea97be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea95980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea96020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea96340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea96660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea967f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea96980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea96b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea96ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea95020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea951b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea95340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea954d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea95660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea97d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea92b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea92b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea91020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea911b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea91340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea8f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea91660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea917f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea91980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea91b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea91ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea91e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea90020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea901b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea90340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea905d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea90760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea908f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea90a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea90c10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea914d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea90da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea8c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea8c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea8c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea8c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea8c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea8a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea8ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea8cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea8cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea8b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea8b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea8b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea8b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea8b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea8ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea8bc10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea8bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea8a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea8a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea8c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea86540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea86540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea868c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea86a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea86be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea84980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea85020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea85340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea85660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea857f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea85980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea85b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea85ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea84020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea841b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea84340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea844d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea84660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea86d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea81b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea81b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea80020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea801b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea80340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea7e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea80660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea807f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea80980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea80b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea80ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea80e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea7f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea7f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea7f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea7f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea7f760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea7f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea7fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea7fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea804d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea7fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea7b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea7b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea7b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea7b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea794d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea7ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea7bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea7bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea7a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea7a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea7a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea7a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea7a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea7aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea7ac10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea7ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea79020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea7b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea76540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea76540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea768c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea76a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea76be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea74980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea75020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea75340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea75660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea757f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea75980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea75b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea75ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea74020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea741b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea74340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea744d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea74660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea76d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea71b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea71b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea70020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea701b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea70340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea70660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea707f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea70980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea70b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea70ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea70e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea6f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea6f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea6f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea6f760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea6f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea6fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea6fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea704d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea6fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea6b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea6b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea6b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea6b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea6b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea694d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea6ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea6bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea6bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea6a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea6a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea6a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea6a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea6a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea6a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea6aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea6ac10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea6ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea69020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea6b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea66540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea66540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea668c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea66a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea66be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea64980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea65340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea65660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea657f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea65980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea65b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea65ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea64020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea641b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea64340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea644d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea64660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea66d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea61b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea61b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea5f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea5f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea5f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea5d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea5f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea5f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea5f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea5fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea5fca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea5fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea5e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea5e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea5e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea5e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea5e760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea5e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea5ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea5ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea5f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea5eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea5a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea5a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea5a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea5a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea584d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea5aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea5abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea5ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea591b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea59340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea59660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea59a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea59c10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea59da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea58020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea5a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea556d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea55a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea55be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea55d70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea53a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea54340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea544d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea54660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea547f0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea54980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea54b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea54ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea54e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea53120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea532b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea53440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea535d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea53760"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea54020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea50b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea50b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea4f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea4f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea4f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea4f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea4f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea4f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea4fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea4fca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea4fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea4e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea4e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea4e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea4e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea4e760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea4e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea4ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea4ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea4f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea4eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea4a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea4a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea4a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea4a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea4a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea484d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea4aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea4abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea4ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea49020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea491b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea49340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea494d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea49660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea49a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea49c10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea49da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea48020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea481b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea4a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea45540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea45540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea458c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea45a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea45be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea43980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea44020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea44340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea44660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea447f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea44980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea44b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea44ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea43020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea431b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea43340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea434d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea43660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea45d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea40b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea40b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea3f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea3f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea3f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea3d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea3f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea3f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea3f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea3fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea3fca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea3fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea3e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea3e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea3e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea3e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea3e760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea3e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea3ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea3ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea3f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea3eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea3a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea3a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea3a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea3a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea384d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea3aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea3abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea3ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea39020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea391b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea39340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea39660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea39a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea39c10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea39da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea38020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea3a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea35540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea35540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea358c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea35a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea35be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea32980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea33020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea33340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea33660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea337f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea33980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea33b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea33ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea32020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea321b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea32340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea324d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea32660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea35d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea2fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea2fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea2e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea2e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea2e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea2c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea2e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea2e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea2e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea2eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea2eca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea2ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea2d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea2d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea2d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea2d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea2d760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea2d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea2da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea2dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea2e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea2dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea29060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea29060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea293e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea29570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea29700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea274d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea29a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea29bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea29d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea28020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea281b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea28340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea284d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea28660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea28a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea28c10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea28da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea27020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea271b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea29890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea24540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea24540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea248c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea24a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea24be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea22980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea23020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea23340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea23660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea237f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea23980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea23b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea23ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea22020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea221b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea22340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea224d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea22660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea24d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea1fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea1fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea1e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea1e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea1e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea1c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea1e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea1e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea1e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea1eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea1eca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea1ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea1d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea1d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea1d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea1d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea1d760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea1d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea1da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea1dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea1e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea1dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea19060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea19060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea193e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea19570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea19700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea19a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea19bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea19d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea18020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea181b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea18340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea18660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea18a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea18c10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea18da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea17020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea19890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea14740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea14740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea14ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea14c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea14de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea12a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea13340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea134d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea13660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea137f0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea13980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea13b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea13ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea13e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea12120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea122b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea12440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea125d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea12760"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea13020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea128f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea0fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea0fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea0e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea0e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea0e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea0c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea0e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea0e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea0e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea0eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea0eca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea0ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea0d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea0d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea0d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea0d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea0d760"/>
        <function-ref name="set" scoped="" ref="0x7f579ea0d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea0da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea0dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea0e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea0dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea08060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea08060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea083e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea08570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea08700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea064d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea08a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea08bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea08d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea071b0"/>
        <function-ref name="get" scoped="" ref="0x7f579ea07340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea07660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea07a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea07c10"/>
        <function-ref name="set" scoped="" ref="0x7f579ea07da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea06020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea08890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579ea03540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579ea03540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ea038c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ea03a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ea03be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ea01980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ea02020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ea021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ea02340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ea024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ea02660"/>
        <function-ref name="get" scoped="" ref="0x7f579ea027f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ea02980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ea02b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ea02ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ea01020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ea011b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ea01340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ea014d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ea01660"/>
        <function-ref name="clr" scoped="" ref="0x7f579ea03d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ea017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9feb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9feb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9fd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9fd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9fd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9fd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9fd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9fdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9fdca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9fde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9fc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9fc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9fc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9fc760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9fc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9fca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9fcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9fd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9fcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9f8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9f8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9f83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9f8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9f8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9f64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9f8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9f8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9f8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9f71b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9f7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9f74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9f7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9f77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9f7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9f7c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e9f7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9f6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9f61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9f8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9f3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9f3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9f38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9f3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9f3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9f1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9f21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9f2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9f2660"/>
        <function-ref name="get" scoped="" ref="0x7f579e9f27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9f2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9f2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9f2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9f1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9f11b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e9f1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9f14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9f1660"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9f3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9eeb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9eeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9ed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9ed1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9ed340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9ed660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9ed7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9ed980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9edb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9edca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9ede30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9ec1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9ec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9ec5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9ec760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9ec8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9eca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9ecc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9ed4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9e8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9e8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9e83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9e8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9e8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9e64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9e8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9e8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9e8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9e71b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9e7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9e74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9e7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9e77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9e7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9e7c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e9e7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9e6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9e8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9e3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9e3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9e38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9e3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9e3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9e0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9e1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9e1660"/>
        <function-ref name="get" scoped="" ref="0x7f579e9e17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9e1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9e1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9e1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9e0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9e01b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e9e0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9e04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9e0660"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9e3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9ddb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9dc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9dc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9dc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9da020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9dc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9dc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9dc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9dcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9dcca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9dce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9db1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9db340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9db5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9db760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9db8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9dba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9dbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9dc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9dbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9d7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9d73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9d7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9d7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9d54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9d7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9d7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9d7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9d61b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9d6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9d64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9d6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9d67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9d6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9d6c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e9d6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9d5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9d7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9d2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9d2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9d28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9d2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9d2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9d0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9d1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9d1660"/>
        <function-ref name="get" scoped="" ref="0x7f579e9d17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9d1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9d1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9d0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9d01b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e9d0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9d04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9d0660"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9d2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9cdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9cdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9cc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9cc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9cc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9cc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9cc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9ccb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9ccca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9cce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9cb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9cb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9cb760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9cb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9cba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9cc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9c7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9c73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9c7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9c7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9c54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9c7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9c7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9c7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9c6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9c61b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9c6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9c64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9c6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9c67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9c6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9c6c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e9c6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9c5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9c51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9c7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9c2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9c28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9c2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9c2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9c0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9c1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9c11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9c1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9c1660"/>
        <function-ref name="get" scoped="" ref="0x7f579e9c17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9c1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9c1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9c1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9c0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9c01b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e9c0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9c04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9c0660"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9c2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9bdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9bdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9bc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9bc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9bc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9bc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9bc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9bcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9bcca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9bce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9bb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9bb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9bb760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9bb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9bba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9bc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9b7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9b73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9b7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9b7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9b44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9b7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9b7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9b7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9b5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9b51b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9b5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9b54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9b5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9b5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9b5c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e9b5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9b4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9b7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9b1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9b1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9b18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9b1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9b1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9af980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9b0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9b0660"/>
        <function-ref name="get" scoped="" ref="0x7f579e9b07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9b0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9b0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9b0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9af020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9af1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e9af340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9af4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9af660"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9b1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9acb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9acb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9ab020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9ab1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9ab340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9a9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9ab660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9ab7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9ab980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9abb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9abca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9abe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9aa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9aa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9aa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9aa760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9aa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9aaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9aac10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9ab4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9aada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9a6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9a6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9a63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9a6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9a6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9a44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9a6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9a6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9a6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9a51b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e9a5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9a54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9a5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9a57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9a5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e9a5c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e9a5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e9a4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9a41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9a6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e9a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e9a1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e9a1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9a18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9a1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e9a1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e99f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e9a0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9a0660"/>
        <function-ref name="get" scoped="" ref="0x7f579e9a07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9a0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9a0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9a0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e99f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e99f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e99f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e99f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e99f660"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9a1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e99f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e99cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e99cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e99b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e99b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e99b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e999020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e99b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e99b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e99b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e99bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e99bca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e99be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e99a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e99a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e99a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e99a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e99a760"/>
        <function-ref name="set" scoped="" ref="0x7f579e99a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e99aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e99ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e99b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e99ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f579e996060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f579e996060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9963e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e996570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e996700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e9944d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e996a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e996bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e996d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e995020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e9951b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e995340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e9954d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e995660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e9957f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e995a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e995c10"/>
        <function-ref name="set" scoped="" ref="0x7f579e995da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e994020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e9941b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e996890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e994340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e908c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e908c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e906020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e9061b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e906340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e904020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e906660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e9067f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e906980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e906b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e906ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e906e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e905020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9051b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e905340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e9055d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e905760"/>
        <function-ref name="set" scoped="" ref="0x7f579e9058f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e905a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e905c10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e9064d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e905da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e9199e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e9199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e919d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e908020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e908340"/>
        <function-ref name="get" scoped="" ref="0x7f579e9084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e908660"/>
        <function-ref name="set" scoped="" ref="0x7f579e9087f0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e908980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e9012f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e9012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e901670"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e901800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e901990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e8ff660"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e901cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e901e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e900020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e9001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e900340"/>
        <function-ref name="get" scoped="" ref="0x7f579e9004d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e900660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e9007f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e900980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e900c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e900da0"/>
        <function-ref name="set" scoped="" ref="0x7f579e8ff020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e8ff1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e8ff340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e901b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e8ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e902020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e902020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e9023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e902530"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e9026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e902850"/>
        <function-ref name="get" scoped="" ref="0x7f579e9029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e902b70"/>
        <function-ref name="set" scoped="" ref="0x7f579e902d00"/>
        <function-ref name="clr" scoped="" ref="0x7f579e901020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e8fc7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e8fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e8fcb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e8fccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e8fce40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e8faa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e8fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e8fb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e8fb4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e8fb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e8fb7f0"/>
        <function-ref name="get" scoped="" ref="0x7f579e8fb980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e8fbb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e8fbca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e8fbe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e8fa120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e8fa2b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e8fa440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e8fa5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e8fa760"/>
        <function-ref name="clr" scoped="" ref="0x7f579e8fb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e8fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e8fd630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e8fd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e8fd9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e8fdb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e8fdcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e8fde60"/>
        <function-ref name="get" scoped="" ref="0x7f579e8fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e8fc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e8fc340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e8fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579e8ee760" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579e8ee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579e8eeae0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579e8eec70"/>
        <function-ref name="start" scoped="" ref="0x7f579e8eee00"/>
        <function-ref name="stop" scoped="" ref="0x7f579e8eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579e8eb7f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579e8eb7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e8ebb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e8ebd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e8ea020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e8ea1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e8ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f579e8e8880" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f579e8e8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e8e8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579e8e7020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579e8e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e8e73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579e8e7530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e8e76c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e8e7850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579e8e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f579e8e3310" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579e8e3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579e8de880"/>
        <function-ref name="clear" scoped="" ref="0x7f579e8d6020"/>
        <function-ref name="isValid" scoped="" ref="0x7f579e8de150"/>
        <function-ref name="set" scoped="" ref="0x7f579e8d6750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f579e8c9130" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e8c9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f579e8c94b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f579e8c9640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f579e8c97d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f579e8c9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579e8eab20" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579e8eab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e8e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f579e8e4080" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e8e4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579e8e4400"/>
        <function-ref name="noAck" scoped="" ref="0x7f579e8e4590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579e8e4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579e8e7c90" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579e8e7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579e8e60a0"/>
        <function-ref name="source" scoped="" ref="0x7f579e8e6230"/>
        <function-ref name="address" scoped="" ref="0x7f579e8e63c0"/>
        <function-ref name="destination" scoped="" ref="0x7f579e8e6550"/>
        <function-ref name="setSource" scoped="" ref="0x7f579e8e66e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579e8e6870"/>
        <function-ref name="type" scoped="" ref="0x7f579e8e6a00"/>
        <function-ref name="setType" scoped="" ref="0x7f579e8e6b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579e8e6d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579e8e5020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579e8e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f579e8d43f0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579e8d43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579e8d3970"/>
        <function-ref name="clear" scoped="" ref="0x7f579e8d20d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f579e8d3240"/>
        <function-ref name="set" scoped="" ref="0x7f579e8d2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579e8bccc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579e8bccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579e8bb0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579e8bb230"/>
        <function-ref name="start" scoped="" ref="0x7f579e8bb3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f579e8bb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f579e8a2e30" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e8a2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579e8ab1e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579e8ab370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579e8ab500"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579e8ab690"/>
        <function-ref name="setCca" scoped="" ref="0x7f579e8ab820"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579e8ab9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f579e895d20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f579e895d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f579e89f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579e8b68f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579e8b68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e8b6c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579e8b6e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e8b5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e8b51b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579e8b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579e8bbd20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579e8bbd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e8ba0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e8ba270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e8ba400"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e8ba590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e8ba720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f579e8b9c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f579e8b9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e8b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f579e8ad9b0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e8ad9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579e8add30"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579e8b4020"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579e8b41b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579e8b4340"/>
        <function-ref name="getPower" scoped="" ref="0x7f579e8b44d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579e8b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f579e8abcb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e8abcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f579e8a90a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f579e8a9230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f579e8a93c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f579e8a9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579e8b9020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579e8b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e8b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f579e8b4990" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e8b4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579e8b4d10"/>
        <function-ref name="noAck" scoped="" ref="0x7f579e8b3020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579e8b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f579e8a0020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f579e8a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f579e8a03a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f579e8a0530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f579e8a06c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f579e8a0850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f579e8a09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579e8b82d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579e8b82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579e8b8650"/>
        <function-ref name="source" scoped="" ref="0x7f579e8b87e0"/>
        <function-ref name="address" scoped="" ref="0x7f579e8b8970"/>
        <function-ref name="destination" scoped="" ref="0x7f579e8b8b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f579e8b8c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579e8b8e20"/>
        <function-ref name="type" scoped="" ref="0x7f579e8b6020"/>
        <function-ref name="setType" scoped="" ref="0x7f579e8b61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579e8b6340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579e8b64d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579e8b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f579e8aac70" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579e8aac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f579e8ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579e892020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579e892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579e8923a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579e892530"/>
        <function-ref name="start" scoped="" ref="0x7f579e8926c0"/>
        <function-ref name="stop" scoped="" ref="0x7f579e892850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f579e87f9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579e87f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f579e87fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f579e87db70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f579e87db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f579e87c020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f579e87c1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f579e87c340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f579e87c4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f579e87c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f579e880020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e880020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579e8803a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579e880530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579e8806c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579e880850"/>
        <function-ref name="getPower" scoped="" ref="0x7f579e8809e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579e880b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f579e88aa70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f579e88aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e88adf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e882020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e8821b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e882340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e8824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f579e87d080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f579e87d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f579e87d400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f579e87d590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f579e87d720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f579e87d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f579e88b690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f579e88b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e88ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f579e87f020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579e87f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579e87f3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f579e87f530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579e87f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e891530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e891530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e8918b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e891a40"/>
        <function-ref name="request" scoped="" ref="0x7f579e891bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e891d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e890020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f579e881940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f579e881940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e881cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e881e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e88b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e88b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e88b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f579e88bd50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f579e88bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e88a100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579e88a290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e88a420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e88a5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579e88a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f579e882840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f579e882840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e882bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579e879390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579e879390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579e879710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579e8798a0"/>
        <function-ref name="start" scoped="" ref="0x7f579e879a30"/>
        <function-ref name="stop" scoped="" ref="0x7f579e879bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f579e877330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e877330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579e8776b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579e877840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579e8779d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579e877b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f579e877cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579e877e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579e879e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579e879e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e878220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e8783b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e878540"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e8786d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e878860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579e878b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579e878b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579e877020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579e876e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579e876e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579e873220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579e8733b0"/>
        <function-ref name="start" scoped="" ref="0x7f579e873540"/>
        <function-ref name="stop" scoped="" ref="0x7f579e8736d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f579e8727e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f579e8727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579e872b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579e872cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579e872e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579e871030"/>
        <function-ref name="setCca" scoped="" ref="0x7f579e8711c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579e871350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f579e867060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f579e867060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579e8673e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579e867570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579e867700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579e867890"/>
        <function-ref name="setCca" scoped="" ref="0x7f579e867a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579e867bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f579e85c330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579e85c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579e85c6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579e85c840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579e85c9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579e85cb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f579e85ccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579e85ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f579e85e2a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f579e85e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e85e620"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e85e7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f579e85e940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e85ead0"/>
        <function-ref name="resend" scoped="" ref="0x7f579e85ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579e873990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579e873990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e873d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579e872020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579e8721b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579e872340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e8724d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f579e85b420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f579e85b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f579e85b7a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f579e85b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f579e866760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f579e866760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579e866ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f579e866c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579e854920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579e854920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579e854ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579e854e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579e859020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f579e869b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f579e869b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f579e86f020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f579e86f1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f579e86f340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f579e86f4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f579e86f660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f579e86f7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f579e86f980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f579e86fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579e85bbf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579e85bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579e85d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579e85d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579e85d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579e85d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579e85d660"/>
        <function-ref name="get" scoped="" ref="0x7f579e85d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579e85d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579e85c020"/>
        <function-ref name="set" scoped="" ref="0x7f579e85db10"/>
        <function-ref name="led0On" scoped="" ref="0x7f579e85dca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f579e85de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f579e871640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e871640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e8719c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e871b50"/>
        <function-ref name="request" scoped="" ref="0x7f579e871ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e871e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e870030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f579e858110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f579e858110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579e858590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579e858720"/>
        <function-ref name="isState" scoped="" ref="0x7f579e8588b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579e858a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f579e858bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f579e858d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f579e84ab70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f579e84ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e849020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e8491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f579e84bba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f579e84bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e84a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e84a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f579e84cc20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f579e84cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e84b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e84b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f579e7f1dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f579e7f1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f579e7fd180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f579e7fd310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f579e7fd4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f579e7fd630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f579e7fd7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f579e7fd950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f579e7fdae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f579e7fdc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f579e7fde00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f579e7fc020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f579e7fc1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f579e7fc340"/>
        <function-ref name="sync" scoped="" ref="0x7f579e7fc4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f579e7fc760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f579e7fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f579e7ee0c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f579e7ee0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7eecb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f579e7ed170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f579e7fcbf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f579e7fcbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f579e7f0020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f579e7f01b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f579e7f0340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f579e7f04d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f579e7f0660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f579e7f07f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f579e7f0980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f579e7f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e803950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e803950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e803cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e803e60"/>
        <function-ref name="request" scoped="" ref="0x7f579e7ff020"/>
        <function-ref name="granted" scoped="" ref="0x7f579e7ff1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e7ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f579e7e7970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f579e7e7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f579e7e7cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f579e7e7e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f579e7e6030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f579e7e61c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f579e7e6350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f579e7e64e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f579e7e6670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f579e7e6800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f579e7e6990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f579e7e6b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f579e7e6cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f579e7e6e40"/>
        <function-ref name="sync" scoped="" ref="0x7f579e7e5020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f579e7e52b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f579e7e5440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f579e7c08e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f579e7c08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7c0c60"/>
        <function-ref name="write" scoped="" ref="0x7f579e7c0df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f579e7e1020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579e7e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f579e7e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f579e7d9d90" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f579e7d9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579e7d7670"/>
        <function-ref name="fired" scoped="" ref="0x7f579e7df5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f579e7d7020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579e7dfa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579e7d7b30"/>
        <function-ref name="start" scoped="" ref="0x7f579e7e0bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f579e7df110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f579e7c35f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579e7c35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7c3970"/>
        <function-ref name="write" scoped="" ref="0x7f579e7c3b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f579e7d4380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f579e7d4380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e7d4700"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e7d4890"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e7d4a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e7d4bb0"/>
        <function-ref name="get" scoped="" ref="0x7f579e7d4d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e7d3020"/>
        <function-ref name="set" scoped="" ref="0x7f579e7d31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e7d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f579e7e4b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f579e7e4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7e3750"/>
        <function-ref name="readDone" scoped="" ref="0x7f579e7e3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f579e7ae820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f579e7ae820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e7aeba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e7aed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f579e7bf1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f579e7bf1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7bf540"/>
        <function-ref name="write" scoped="" ref="0x7f579e7bf6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f579e7bfa70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579e7bfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7bfdf0"/>
        <function-ref name="write" scoped="" ref="0x7f579e7be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f579e7c83d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f579e7c83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7c8750"/>
        <function-ref name="write" scoped="" ref="0x7f579e7c88e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f579e7c9810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579e7c9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f579e7c9b90"/>
        <function-ref name="changed" scoped="" ref="0x7f579e7c9d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f579e7d0020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f579e7d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f579e7d5060" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f579e7d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e7d53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e7d5570"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e7d5700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e7d5890"/>
        <function-ref name="get" scoped="" ref="0x7f579e7d5a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e7d5bb0"/>
        <function-ref name="set" scoped="" ref="0x7f579e7d5d40"/>
        <function-ref name="clr" scoped="" ref="0x7f579e7d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f579e7bc120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579e7bc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579e7bc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f579e7d36a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f579e7d36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e7d3a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e7d3bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e7d3d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e7d2020"/>
        <function-ref name="get" scoped="" ref="0x7f579e7d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e7d2340"/>
        <function-ref name="set" scoped="" ref="0x7f579e7d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e7d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579e7e8510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579e7e8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579e7e8890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f579e7c0020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579e7c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7c03a0"/>
        <function-ref name="write" scoped="" ref="0x7f579e7c0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f579e7bca40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f579e7bca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579e7bcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f579e7bb1d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f579e7bb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e7bb550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e7bb6e0"/>
        <function-ref name="request" scoped="" ref="0x7f579e7bb870"/>
        <function-ref name="granted" scoped="" ref="0x7f579e7bba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e7bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f579e7b9d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f579e7b9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e7b8180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e7b8310"/>
        <function-ref name="request" scoped="" ref="0x7f579e7b84a0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e7b8630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e7b87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f579e7e5740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f579e7e5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f579e7e5ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f579e7e5c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f579e7e5de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f579e7e4020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f579e7e41b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f579e7e4340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f579e7e44d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f579e7e4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f579e7c8c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f579e7c8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7c30a0"/>
        <function-ref name="write" scoped="" ref="0x7f579e7c3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f579e7c1b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f579e7c1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7c1e80"/>
        <function-ref name="write" scoped="" ref="0x7f579e7c8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f579e7ba2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f579e7ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579e7ba630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579e7b8a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579e7b8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579e7b8e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579e7b7020"/>
        <function-ref name="led1On" scoped="" ref="0x7f579e7b71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579e7b7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579e7b74d0"/>
        <function-ref name="get" scoped="" ref="0x7f579e7b7660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579e7b77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579e7b7e30"/>
        <function-ref name="set" scoped="" ref="0x7f579e7b7980"/>
        <function-ref name="led0On" scoped="" ref="0x7f579e7b7b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f579e7b7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f579e7af940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f579e7af940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e7afcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e7afe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e7e8b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e7e8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e7e7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e7e71b0"/>
        <function-ref name="request" scoped="" ref="0x7f579e7e7340"/>
        <function-ref name="granted" scoped="" ref="0x7f579e7e74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e7e7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f579e7cd520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f579e7cd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7cd8a0"/>
        <function-ref name="write" scoped="" ref="0x7f579e7cda30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f579e7c4a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f579e7c4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e7cd020"/>
        <function-ref name="write" scoped="" ref="0x7f579e7cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f579e7d10e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f579e7d10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e7d1460"/>
        <function-ref name="disable" scoped="" ref="0x7f579e7d15f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f579e7d1780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f579e7d1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f579e7b9020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f579e7b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e7b93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e7b9530"/>
        <function-ref name="request" scoped="" ref="0x7f579e7b96c0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e7b9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e7b99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f579e7ba9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f579e7ba9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579e7bad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579e738c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579e738c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579e735020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f579e735690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e735690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579e731020"/>
        <function-ref name="fired" scoped="" ref="0x7f579e732020"/>
        <function-ref name="startAt" scoped="" ref="0x7f579e7329a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579e7324e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579e7314e0"/>
        <function-ref name="start" scoped="" ref="0x7f579e7345b0"/>
        <function-ref name="stop" scoped="" ref="0x7f579e734ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579e730d40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579e730d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579e72f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f579e72f5f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f579e72f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579e4eae50"/>
        <function-ref name="fired" scoped="" ref="0x7f579e4ebe00"/>
        <function-ref name="startAt" scoped="" ref="0x7f579e4ea800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579e4ea340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579e4e8340"/>
        <function-ref name="start" scoped="" ref="0x7f579e4eb430"/>
        <function-ref name="stop" scoped="" ref="0x7f579e4eb940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579d06bb90" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579d06bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d0674e0"/>
        <function-ref name="fired" scoped="" ref="0x7f579d0684e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f579d068e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d0689a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579d0679a0"/>
        <function-ref name="start" scoped="" ref="0x7f579d0699d0"/>
        <function-ref name="stop" scoped="" ref="0x7f579d068020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d06b340" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d06b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d06b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579d063c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579d063c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d0604e0"/>
        <function-ref name="fired" scoped="" ref="0x7f579d0614e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f579d061e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d0619a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579d0609a0"/>
        <function-ref name="start" scoped="" ref="0x7f579d062a80"/>
        <function-ref name="stop" scoped="" ref="0x7f579d061020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d0633d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d0633d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d063750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f579d04a440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f579d04a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579d04a7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579d04a950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579d04aae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579d04ac70"/>
        <function-ref name="fired" scoped="" ref="0x7f579d04ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f579d04d9d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579d04d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d04dd50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579d04c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579d04c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579d04c340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579d04c4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579d04c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f579d04c7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579d04c980"/>
        <function-ref name="overflow" scoped="" ref="0x7f579d04cb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f579d04cca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579d04ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f579d04b120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579d04b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579d04b4a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579d04b630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579d04b7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579d04b950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579d04bae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579d04bc70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579d04be00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579d04a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f579d04a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f579e6f93f0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f579e6f93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6f9770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6f9900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6f9a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6f9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6f9db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f579e704cd0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e704cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e6fd0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6fd230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6fd3c0"/>
        <function-ref name="get" scoped="" ref="0x7f579e6fd550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6fd6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6fd870"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e6fda00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6fdb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e6fdd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e6fc020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e6fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f579e6fca40" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e6fca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6fcdc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6fa020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6fa1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6fa340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6fa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6fa660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6fa7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6fa980"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6fab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f579e6e8a50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f579e6e8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6e8dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6e7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6e71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6e7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6e74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6e7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6e77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6e7980"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f579e6e35a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f579e6e35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6e3920"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6e3ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6e3c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6e3dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6e2020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6e21b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6e2340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6e24d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f579e6e9a20" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f579e6e9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6e9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6e8020"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6e81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6e8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6e84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f579e6d63e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f579e6d63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6d6760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6d68f0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6d6a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6d6c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6d6da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f579e6efbb0" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f579e6efbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6e9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6e91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6e9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6e94d0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f579e6d8570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f579e6d8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6d88f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6d8a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6d8c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6d8da0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f579e6cdda0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f579e6cdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6cc180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6cc310"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6cc4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6cc630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6cc7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f579e6d5410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f579e6d5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6d5790"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6d5920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6d5ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6d5c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6d5dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6d4020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6d41b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6d4340"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f579e6f3280" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f579e6f3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6f3600"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6f3790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6f3920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6f3ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6f3c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6f3dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6f2020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6f21b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f579e6deda0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f579e6deda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6dd180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6dd310"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6dd4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6dd630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6dd7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6dd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f579e6de020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f579e6de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6de3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6de530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6de6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6de850"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6de9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f579e6e0a50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f579e6e0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6e0dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6df020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6df1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6df340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6df4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6df660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6df7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6df980"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6dfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f579e6e6da0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f579e6e6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6e5180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6e5310"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6e54a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6e5630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6e57c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6e5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f579e6d3890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f579e6d3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6d3c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6d3da0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6d2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6d21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6d2340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f579e6ddd40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f579e6ddd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6dc0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6dc270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6dc400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6dc590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6dc720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6dc8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6dca40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6dcbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6dcd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f579e6e6020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f579e6e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6e63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6e6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6e66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6e6850"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6e69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f579e6f7a30" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f579e6f7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e6f7db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6f4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6f41b0"/>
        <function-ref name="get" scoped="" ref="0x7f579e6f4340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6f44d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6f4660"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e6f47f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6f4980"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e6f4b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e6f4ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e6f4e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f579e6d4890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f579e6d4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6d4e10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6d3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6d31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6d3340"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f579e6f0730" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f579e6f0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6f0ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6f0c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6f0dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6ef020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6ef1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6ef340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6ef4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6ef660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f579e6d28c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f579e6d28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6d2c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6d2dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6d1020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6d11b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6d1340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6d14d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6d1660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6d17f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f579e6ea690" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f579e6ea690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6eaa10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6eaba0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6ead30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6f0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6f01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f579e6da020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f579e6da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6da3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6da530"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6da6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6da850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6da9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6dab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f579e6f2700" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f579e6f2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6f2a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6f2c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6f2da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6f1020"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f579e6db160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f579e6db160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6db4e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6db670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6db800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6db990"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6dbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f579e6d0ae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f579e6d0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6d0e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6cf020"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6cf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6cf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6cf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f579e6d9020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f579e6d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6d93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6d9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6d96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6d9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6d99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6d9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6d9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6d8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f579e6e5cd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f579e6e5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e6e40a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6e4230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6e43c0"/>
        <function-ref name="get" scoped="" ref="0x7f579e6e4550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6e46e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6e4870"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e6e4a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6e4b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e6e4d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e6e3020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e6e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f579e6e1a20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f579e6e1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6e1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e6e0020"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6e01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6e0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6e04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e6e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f579e6d1d40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f579e6d1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6d00e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6d0270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6d0400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6d0590"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6d0720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f579e6cd020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f579e6cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6cd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6cd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6cd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6cd850"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6cd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f579e6e2a20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f579e6e2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6e1020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e6e11b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6e1340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e6e14d0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f579e6cfa50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f579e6cfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6cfdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6ce020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6ce1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6ce340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6ce4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6ce660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6ce7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6ce980"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6ceb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f579e694940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f579e694940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e694cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f579e6942f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f579e6942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e694670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f579e693020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f579e693020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e6933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f579e695bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e695bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579e6963e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e6963e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e696760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6968f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e696a80"/>
        <function-ref name="get" scoped="" ref="0x7f579e696c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e696da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e695020"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e6951b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e695340"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e6954d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e695660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e6957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f579e68d750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f579e68d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e68dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f579e68d100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f579e68d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e68d480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f579e68dda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f579e68dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e68b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f579e68ea60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e68ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e68ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579e68f260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e68f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e68f5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e68f770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e68f900"/>
        <function-ref name="get" scoped="" ref="0x7f579e68fa90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e68fc20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e68fdb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e68e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e68e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e68e340"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e68e4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e68e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e6427a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e6427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e642b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e642cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e642e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e640020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6401b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e640340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e6886d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e6886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e688a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e688be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e688d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e643020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6431b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e643340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6434d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e643660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6437f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e63fc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e63fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e63e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e643ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e643ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e643e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e642020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6421b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e642340"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e640610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e640610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e640990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e640b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e640cb0"/>
        <function-ref name="get" scoped="" ref="0x7f579e640e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e63f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e63f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e63f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e63f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e63f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e63f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e63f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e63acb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e63acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6390a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e639230"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6393c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e639550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6396e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e639870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e63cb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e63cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e63b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e63b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e63b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e63b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e63b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e63b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e63b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e63bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e63bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e6372f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e6372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e637670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e63a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e63a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e63a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e63a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e63a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e63a850"/>
        <function-ref name="fired" scoped="" ref="0x7f579e63a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e639b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e639b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e638020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e638340"/>
        <function-ref name="get" scoped="" ref="0x7f579e6384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e638660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6387f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e638980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e638b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e638ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e638e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e637020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e6322f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e6322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e632670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e632800"/>
        <function-ref name="captured" scoped="" ref="0x7f579e632990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e632b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e632cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e632e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e634220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e634220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6345a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e634730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6348c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e634a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e634be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e634d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e633020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6331b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e633340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e62f7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e62f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e62fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e633610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e633610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e633990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e633b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e633cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e633e40"/>
        <function-ref name="fired" scoped="" ref="0x7f579e632020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e631160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e631160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e6314e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e631670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e631800"/>
        <function-ref name="get" scoped="" ref="0x7f579e631990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e631b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e631cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e631e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e62f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e62f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e62f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e62f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e62a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e62a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e62ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e62acb0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e62ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e629020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6291b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e629340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e62c6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e62c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e62ca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e62cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e62cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e62b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e62b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e62b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e62b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e62b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e62b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e628c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e628c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e627020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e62bac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e62bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e62be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e62a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e62a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e62a340"/>
        <function-ref name="fired" scoped="" ref="0x7f579e62a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e629610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e629610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e629990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e629b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e629cb0"/>
        <function-ref name="get" scoped="" ref="0x7f579e629e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e628020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6281b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e628340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6284d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e628660"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e6287f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e628980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e623cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e623cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6220a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e622230"/>
        <function-ref name="captured" scoped="" ref="0x7f579e6223c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e622550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6226e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e622870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e625b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e625b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e624020"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e6241b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e624340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e6244d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e624660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e6247f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e624980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e624b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e624ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e61f2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e61f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e61f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e623020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e623020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e6233a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e623530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6236c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e623850"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6239e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e622b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e622b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e620020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6201b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e620340"/>
        <function-ref name="get" scoped="" ref="0x7f579e6204d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e620660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6207f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e620980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e620b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e620ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e620e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e61f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e61a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e61a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e61a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e61a800"/>
        <function-ref name="captured" scoped="" ref="0x7f579e61a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e61ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e61acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e61ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e61c220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e61c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e61c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e61c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e61c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e61ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e61cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e61cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e61b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e61b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e61b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e6187a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e6187a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e618b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e61b610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e61b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e61b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e61bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e61bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e61be40"/>
        <function-ref name="fired" scoped="" ref="0x7f579e61a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e619160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e619160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e6194e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e619670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e619800"/>
        <function-ref name="get" scoped="" ref="0x7f579e619990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e619b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e619cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e619e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e618020"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e6181b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e618340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e6184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e6137a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e6137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e613b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e613cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e613e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e612020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6121b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e612340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e6156d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e6156d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e615a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e615be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e615d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e614020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e6141b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e614340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e6144d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e614660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e6147f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e611c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e611c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e60f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e614ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e614ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e614e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e613020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e6131b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e613340"/>
        <function-ref name="fired" scoped="" ref="0x7f579e6134d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e612610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e612610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e612990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e612b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e612cb0"/>
        <function-ref name="get" scoped="" ref="0x7f579e612e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e611020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6111b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e611340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e6114d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e611660"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e6117f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e611980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e60bcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e60bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e60a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e60a230"/>
        <function-ref name="captured" scoped="" ref="0x7f579e60a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e60a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e60a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e60a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e60db30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e60db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e60c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e60c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e60c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e60c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e60c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e60c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e60c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e60cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e60cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e6082f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e6082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e608670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e60b020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e60b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e60b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e60b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e60b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e60b850"/>
        <function-ref name="fired" scoped="" ref="0x7f579e60b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e60ab40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e60ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e609020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e6091b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e609340"/>
        <function-ref name="get" scoped="" ref="0x7f579e6094d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e609660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e6097f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e609980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e609b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e609ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e609e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e608020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e6032f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e6032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e603670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e603800"/>
        <function-ref name="captured" scoped="" ref="0x7f579e603990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e603b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e603cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e603e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e605220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e605220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e6055a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e605730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e6058c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e605a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e605be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e605d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e604020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e6041b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e604340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e6017a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e6017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e601b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e604610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e604610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e604990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e604b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e604cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e604e40"/>
        <function-ref name="fired" scoped="" ref="0x7f579e603020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e602160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e602160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e6024e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e602670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e602800"/>
        <function-ref name="get" scoped="" ref="0x7f579e602990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e602b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e602cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e602e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e601020"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e6011b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e601340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e6014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e5fb7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e5fb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e5fbb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e5fbcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e5fbe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e5fa020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e5fa1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e5fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f579e5fd6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f579e5fd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e5fda50"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e5fdbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e5fdd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e5fc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e5fc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e5fc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e5fc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e5fc660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e5fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f579e5f9c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f579e5f9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e5f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f579e5fcac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f579e5fcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e5fce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579e5fb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579e5fb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579e5fb340"/>
        <function-ref name="fired" scoped="" ref="0x7f579e5fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f579e5fa610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579e5fa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e5fa990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e5fab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e5facb0"/>
        <function-ref name="get" scoped="" ref="0x7f579e5fae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e5f9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e5f91b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e5f9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e5f94d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e5f9660"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e5f97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e5f9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f579e5f3bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f579e5f3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e5f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f579e5f43f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f579e5f43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e5f4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f579e5f4b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f579e5f4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e5f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f579e5f3430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f579e5f3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e5f37b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f579d0400c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f579d0400c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579d040440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579d0405d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579d040760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579d0408f0"/>
        <function-ref name="fired" scoped="" ref="0x7f579d040a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f579d043710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579d043710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d043a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579d043c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579d043db0"/>
        <function-ref name="get" scoped="" ref="0x7f579d042020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579d0421b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579d042340"/>
        <function-ref name="getMode" scoped="" ref="0x7f579d0424d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579d042660"/>
        <function-ref name="overflow" scoped="" ref="0x7f579d0427f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579d042980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579d042b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579d0465b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579d0465b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d044df0"/>
        <function-ref name="fired" scoped="" ref="0x7f579d045df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f579d0447a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d0442e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579d0432e0"/>
        <function-ref name="start" scoped="" ref="0x7f579d045420"/>
        <function-ref name="stop" scoped="" ref="0x7f579d045930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d047ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d047ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d0460a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f579d042da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579d042da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579d041180"/>
        <function-ref name="getControl" scoped="" ref="0x7f579d041310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579d0414a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579d041630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579d0417c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579d041950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579d041ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579d041c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f579d041e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579e5698c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579e5698c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579e56e700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e56d0d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e56ebc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e56d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f579e5688e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f579e5688e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579e565780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e563150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e565c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e563610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f579e553c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579e553c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e551020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e5511b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e551340"/>
        <function-ref name="get" scoped="" ref="0x7f579e5514d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e551660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e5517f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e551980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e551b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e551ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579e551e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579e550020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579e561b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579e561b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579e5609b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e553360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e560e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e553820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f579e52f0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f579e52f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579e52e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e52e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e52e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e52ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579e54dcf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579e54dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579e532b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e530550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e530090"/>
        <function-ref name="overflow" scoped="" ref="0x7f579e530a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579d05c020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579d05c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d05a870"/>
        <function-ref name="fired" scoped="" ref="0x7f579d05b840"/>
        <function-ref name="startAt" scoped="" ref="0x7f579d05a220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d05bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579d05ad30"/>
        <function-ref name="start" scoped="" ref="0x7f579d05ce30"/>
        <function-ref name="stop" scoped="" ref="0x7f579d05b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f579d056780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f579d056780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d053020"/>
        <function-ref name="fired" scoped="" ref="0x7f579d054020"/>
        <function-ref name="startAt" scoped="" ref="0x7f579d0549a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d0544e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579d0534e0"/>
        <function-ref name="start" scoped="" ref="0x7f579d0555d0"/>
        <function-ref name="stop" scoped="" ref="0x7f579d055ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f579d0593d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579d0593d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579d057240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579d057bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579d057700"/>
        <function-ref name="overflow" scoped="" ref="0x7f579d0560d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f579e4e39c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f579e4e39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4e3d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4e2340"/>
        <function-ref name="get" scoped="" ref="0x7f579e4e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4e2660"/>
        <function-ref name="set" scoped="" ref="0x7f579e4e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f579e4e2cf0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f579e4e2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4e1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4e13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4e1550"/>
        <function-ref name="get" scoped="" ref="0x7f579e4e16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4e1870"/>
        <function-ref name="set" scoped="" ref="0x7f579e4e1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4e1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f579e4e0020" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f579e4e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4e03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4e0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4e06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4e0850"/>
        <function-ref name="get" scoped="" ref="0x7f579e4e09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4e0b70"/>
        <function-ref name="set" scoped="" ref="0x7f579e4e0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f579e4e4690" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f579e4e4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4e4a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4e4ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4e4d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4e3020"/>
        <function-ref name="get" scoped="" ref="0x7f579e4e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4e3340"/>
        <function-ref name="set" scoped="" ref="0x7f579e4e34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f579e4de6a0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f579e4de6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4dea20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4debb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4ded40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4dd020"/>
        <function-ref name="get" scoped="" ref="0x7f579e4dd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4dd340"/>
        <function-ref name="set" scoped="" ref="0x7f579e4dd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f579e4e53e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f579e4e53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4e5760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4e58f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4e5a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4e5c10"/>
        <function-ref name="get" scoped="" ref="0x7f579e4e5da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4e4020"/>
        <function-ref name="set" scoped="" ref="0x7f579e4e41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f579e4df370" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f579e4df370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4df6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4df880"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4dfa10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4dfba0"/>
        <function-ref name="get" scoped="" ref="0x7f579e4dfd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4de020"/>
        <function-ref name="set" scoped="" ref="0x7f579e4de1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4de340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4dbc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4dbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4da020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4da1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4da340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4da660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4da7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4da980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4dab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4daca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e4dae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4d9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4d91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4d9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4d95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4d9760"/>
        <function-ref name="set" scoped="" ref="0x7f579e4d98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4d9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4d9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4da4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4d9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4dca20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4dca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4dcda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4db1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4db340"/>
        <function-ref name="get" scoped="" ref="0x7f579e4db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4db660"/>
        <function-ref name="set" scoped="" ref="0x7f579e4db7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4db980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4d42f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4d4670"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4d4800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4d4990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4d2660"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4d4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4d4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4d3020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4d3340"/>
        <function-ref name="get" scoped="" ref="0x7f579e4d34d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4d37f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4d3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4d3c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4d3da0"/>
        <function-ref name="set" scoped="" ref="0x7f579e4d2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4d21b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4d2340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4d4b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4d6020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4d63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4d6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4d66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4d6850"/>
        <function-ref name="get" scoped="" ref="0x7f579e4d69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4d6b70"/>
        <function-ref name="set" scoped="" ref="0x7f579e4d6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4cf7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4cf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4cfb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4cfcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4cfe40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4cda80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4ce340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4ce4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4ce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4ce7f0"/>
        <function-ref name="get" scoped="" ref="0x7f579e4ce980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4ceb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4ceca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4cee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4cd120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4cd2b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e4cd440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4cd5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4cd760"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4ce020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4d0630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4d0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4d09b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4d0b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4d0cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4d0e60"/>
        <function-ref name="get" scoped="" ref="0x7f579e4cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4cf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e4cf340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4cac60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4cac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4c9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4c91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4c9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4c7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4c9660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4c97f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4c9980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4c9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4c9ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e4c9e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4c81b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4c8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4c85d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4c8760"/>
        <function-ref name="set" scoped="" ref="0x7f579e4c88f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4c8a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4c8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4c94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4c8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4cbb00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4cbb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4cbe80"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4ca030"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4ca1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4ca350"/>
        <function-ref name="get" scoped="" ref="0x7f579e4ca4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4ca670"/>
        <function-ref name="set" scoped="" ref="0x7f579e4ca800"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4ca990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4c42f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4c4670"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4c4800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4c4990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4c2660"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4c4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4c4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4c3020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4c3340"/>
        <function-ref name="get" scoped="" ref="0x7f579e4c34d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4c37f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4c3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4c3c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4c3da0"/>
        <function-ref name="set" scoped="" ref="0x7f579e4c2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4c21b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4c2340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4c4b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4c5020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4c5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4c56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4c5850"/>
        <function-ref name="get" scoped="" ref="0x7f579e4c59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4c5b70"/>
        <function-ref name="set" scoped="" ref="0x7f579e4c5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4bf7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4bfb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4bfcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4bfe40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4bda80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4be340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4be4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4be660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4be7f0"/>
        <function-ref name="get" scoped="" ref="0x7f579e4be980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4beb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4beca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4bee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4bd120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4bd2b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e4bd440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4bd5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4bd760"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4be020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4c0630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4c0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4c09b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4c0b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4c0cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4c0e60"/>
        <function-ref name="get" scoped="" ref="0x7f579e4bf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4bf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579e4bf340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579e4b9c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579e4b9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4b8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4b81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e4b8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e4b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4b8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4b87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e4b8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e4b8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4b8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e4b8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e4b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e4b71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e4b7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e4b75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e4b7760"/>
        <function-ref name="set" scoped="" ref="0x7f579e4b78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e4b7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e4b7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4b84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e4b7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579e4bab00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e4bab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e4bae80"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e4b9030"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e4b91c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e4b9350"/>
        <function-ref name="get" scoped="" ref="0x7f579e4b94e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e4b9670"/>
        <function-ref name="set" scoped="" ref="0x7f579e4b9800"/>
        <function-ref name="clr" scoped="" ref="0x7f579e4b9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f579e49d700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f579e49d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f579e49da80"/>
        <function-ref name="disable" scoped="" ref="0x7f579e49dc10"/>
        <function-ref name="captured" scoped="" ref="0x7f579e49dda0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f579e4a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f579e4a0400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f579e4a0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e4a0780"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4a0910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f579e4a0aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f579e4a0c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f579e49f060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f579e49f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e49f3e0"/>
        <function-ref name="disable" scoped="" ref="0x7f579e49f570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f579e49f700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f579e49f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f579e481a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f579e481a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579e481e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f579e480020"/>
        <function-ref name="captured" scoped="" ref="0x7f579e4801b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579e480340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579e4804d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f579e480660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f579e494c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f579e494c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f579e482020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4821b0"/>
        <function-ref name="captured" scoped="" ref="0x7f579e482340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f579e4824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f579e482760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579e482760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579e482ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579e482c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579e482e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579e481020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579e4811b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579e481340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579e4814d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579e481660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579e4817f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f579e480930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579e480930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e480cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e480e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e47f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e47ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e47f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e47f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e47f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e47f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e47f980"/>
        <function-ref name="get" scoped="" ref="0x7f579e47fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e47fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e47fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e47e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e47e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e47e440"/>
        <function-ref name="set" scoped="" ref="0x7f579e47e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e47e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e47e8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f579e47f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e47ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f579e46d020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f579e46d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e46d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e46d530"/>
        <function-ref name="disable" scoped="" ref="0x7f579e46d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e46d850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e46d9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e46db70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e46dd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e46c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f579e4603f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f579e4603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e460770"/>
        <function-ref name="fired" scoped="" ref="0x7f579e460900"/>
        <function-ref name="disable" scoped="" ref="0x7f579e460a90"/>
        <function-ref name="edge" scoped="" ref="0x7f579e460c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e460db0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e45f020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e45f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e45f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f579e469a30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f579e469a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e469db0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e468020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4681b0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e468340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4684d0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e468660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4687f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e468980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f579e466020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f579e466020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e4663a0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e466530"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4666c0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e466850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4669e0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e466b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e466d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e465020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f579e476a30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f579e476a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e476db0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e46f020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e46f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e46f340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e46f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e46f660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e46f7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e46f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f579e463a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f579e463a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e462020"/>
        <function-ref name="fired" scoped="" ref="0x7f579e4621b0"/>
        <function-ref name="disable" scoped="" ref="0x7f579e462340"/>
        <function-ref name="edge" scoped="" ref="0x7f579e4624d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e462660"/>
        <function-ref name="enable" scoped="" ref="0x7f579e4627f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e462980"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e462b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f579e46c3f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f579e46c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e46c770"/>
        <function-ref name="fired" scoped="" ref="0x7f579e46c900"/>
        <function-ref name="disable" scoped="" ref="0x7f579e46ca90"/>
        <function-ref name="edge" scoped="" ref="0x7f579e46cc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e46cdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e46b020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e46b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e46b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f579e45f710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f579e45f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e45fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e45fc20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e45fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e45e020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e45e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e45e340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e45e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e45e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f579e4703d0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f579e4703d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e470750"/>
        <function-ref name="fired" scoped="" ref="0x7f579e4708e0"/>
        <function-ref name="disable" scoped="" ref="0x7f579e470a70"/>
        <function-ref name="edge" scoped="" ref="0x7f579e470c00"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e470d90"/>
        <function-ref name="enable" scoped="" ref="0x7f579e477020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4771b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e477340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f579e4653f0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f579e4653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e465770"/>
        <function-ref name="fired" scoped="" ref="0x7f579e465900"/>
        <function-ref name="disable" scoped="" ref="0x7f579e465a90"/>
        <function-ref name="edge" scoped="" ref="0x7f579e465c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e465db0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e464020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4641b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e464340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f579e46fd50" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f579e46fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e46e100"/>
        <function-ref name="fired" scoped="" ref="0x7f579e46e290"/>
        <function-ref name="disable" scoped="" ref="0x7f579e46e420"/>
        <function-ref name="edge" scoped="" ref="0x7f579e46e5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e46e740"/>
        <function-ref name="enable" scoped="" ref="0x7f579e46e8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e46ea60"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e46ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f579e461020" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f579e461020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e4613a0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e461530"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4616c0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e461850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4619e0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e461b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e461d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f579e46b710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f579e46b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e46ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e46bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e46bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e469020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4691b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e469340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4694d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e469660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f579e468d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f579e468d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e467100"/>
        <function-ref name="fired" scoped="" ref="0x7f579e467290"/>
        <function-ref name="disable" scoped="" ref="0x7f579e467420"/>
        <function-ref name="edge" scoped="" ref="0x7f579e4675b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e467740"/>
        <function-ref name="enable" scoped="" ref="0x7f579e4678d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e467a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e467bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f579e477710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f579e477710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e477a90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e477c20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e477db0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e476020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4761b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e476340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4764d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e476660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f579e464710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f579e464710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e464a90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e464c20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e464db0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e463020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4631b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e463340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4634d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e463660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f579e4563f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f579e4563f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e456770"/>
        <function-ref name="fired" scoped="" ref="0x7f579e456900"/>
        <function-ref name="disable" scoped="" ref="0x7f579e456a90"/>
        <function-ref name="edge" scoped="" ref="0x7f579e456c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e456db0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e455020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4551b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e455340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f579e4493f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f579e4493f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e449770"/>
        <function-ref name="fired" scoped="" ref="0x7f579e449900"/>
        <function-ref name="disable" scoped="" ref="0x7f579e449a90"/>
        <function-ref name="edge" scoped="" ref="0x7f579e449c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e449db0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e448020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4481b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e448340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f579e453d50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f579e453d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e452100"/>
        <function-ref name="fired" scoped="" ref="0x7f579e452290"/>
        <function-ref name="disable" scoped="" ref="0x7f579e452420"/>
        <function-ref name="edge" scoped="" ref="0x7f579e4525b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e452740"/>
        <function-ref name="enable" scoped="" ref="0x7f579e4528d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e452a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e452bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f579e4503f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f579e4503f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e450770"/>
        <function-ref name="fired" scoped="" ref="0x7f579e450900"/>
        <function-ref name="disable" scoped="" ref="0x7f579e450a90"/>
        <function-ref name="edge" scoped="" ref="0x7f579e450c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e450db0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e44f020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e44f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e44f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f579e459d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f579e459d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e458100"/>
        <function-ref name="fired" scoped="" ref="0x7f579e458290"/>
        <function-ref name="disable" scoped="" ref="0x7f579e458420"/>
        <function-ref name="edge" scoped="" ref="0x7f579e4585b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e458740"/>
        <function-ref name="enable" scoped="" ref="0x7f579e4588d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e458a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e458bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f579e44dd50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f579e44dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e44b210"/>
        <function-ref name="fired" scoped="" ref="0x7f579e44b3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f579e44b530"/>
        <function-ref name="edge" scoped="" ref="0x7f579e44b6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e44b850"/>
        <function-ref name="enable" scoped="" ref="0x7f579e44b9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e44bb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e44bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f579e455710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f579e455710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e455a90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e455c20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e455db0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e454020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4541b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e454340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4544d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e454660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f579e448710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f579e448710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e448a90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e448c20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e448db0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e447020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4471b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e447340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4474d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e447660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f579e45d7a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f579e45d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e45db20"/>
        <function-ref name="fired" scoped="" ref="0x7f579e45dcb0"/>
        <function-ref name="disable" scoped="" ref="0x7f579e45de40"/>
        <function-ref name="edge" scoped="" ref="0x7f579e45a020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e45a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e45a340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e45a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e45a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f579e44f710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f579e44f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e44fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f579e44fc20"/>
        <function-ref name="disable" scoped="" ref="0x7f579e44fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e44e020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e44e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e44e340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e44e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e44e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f579e457020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f579e457020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e4573a0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e457530"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4576c0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e457850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4579e0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e457b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e457d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e456020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f579e44a100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f579e44a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e44a480"/>
        <function-ref name="fired" scoped="" ref="0x7f579e44a610"/>
        <function-ref name="disable" scoped="" ref="0x7f579e44a7a0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e44a930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e44aac0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e44ac50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e44ade0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e449020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f579e454a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f579e454a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e454db0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e453020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4531b0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e453340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4534d0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e453660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4537f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e453980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f579e451020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f579e451020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e4513a0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e451530"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4516c0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e451850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4519e0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e451b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e451d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e450020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f579e45aa30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f579e45aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e45adb0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e459020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e4591b0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e459340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e4594d0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e459660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e4597f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e459980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f579e44ea30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f579e44ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e44edb0"/>
        <function-ref name="fired" scoped="" ref="0x7f579e44d020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e44d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f579e44d340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e44d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e44d660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e44d7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e44d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f579e33b2f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f579e33b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e33b670"/>
        <function-ref name="fired" scoped="" ref="0x7f579e33b800"/>
        <function-ref name="disable" scoped="" ref="0x7f579e33b990"/>
        <function-ref name="edge" scoped="" ref="0x7f579e33bb20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e33bcb0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e33be40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e32e020"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e32e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f579e33c680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f579e33c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e33ca00"/>
        <function-ref name="disable" scoped="" ref="0x7f579e33cb90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f579e33cd20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f579e33b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f579e32c7a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f579e32c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579e32cb20"/>
        <function-ref name="fired" scoped="" ref="0x7f579e32ccb0"/>
        <function-ref name="disable" scoped="" ref="0x7f579e32ce40"/>
        <function-ref name="edge" scoped="" ref="0x7f579e32b020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f579e32b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f579e32b340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f579e32b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f579e32b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f579e32db70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f579e32db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e32c020"/>
        <function-ref name="disable" scoped="" ref="0x7f579e32c1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f579e32c340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f579e32c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f579decbe50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f579decbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec9410"/>
        <function-ref name="write" scoped="" ref="0x7f579dec95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f579ded6160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f579ded6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f579decee50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579decee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579decd210"/>
        <function-ref name="write" scoped="" ref="0x7f579decd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f579dec8880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dec8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec8c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f579dec00a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f579dec00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec0420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f579dec70a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f579dec70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec7420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f579deb4500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f579deb4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb4880"/>
        <function-ref name="write" scoped="" ref="0x7f579deb4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f579deb7500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579deb7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb7880"/>
        <function-ref name="write" scoped="" ref="0x7f579deb7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f579ded3490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f579ded3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f579debd880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f579debd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debdc00"/>
        <function-ref name="write" scoped="" ref="0x7f579debdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f579deb8500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579deb8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb8880"/>
        <function-ref name="write" scoped="" ref="0x7f579deb8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f579decde50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f579decde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579decc210"/>
        <function-ref name="write" scoped="" ref="0x7f579decc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f579decce50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579decce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579decb210"/>
        <function-ref name="write" scoped="" ref="0x7f579decb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f579dec2880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f579dec2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec2c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f579dec40a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f579dec40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec4420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f579dec7880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f579dec7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec7c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579ded8a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579ded8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579ded8e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579ded7020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579ded71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f579ded2e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579ded2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f579ded1490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f579ded1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f579debbc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579debbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deba0a0"/>
        <function-ref name="write" scoped="" ref="0x7f579deba230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f579ded1be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f579ded1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579decf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f579deb8ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579deb8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb70a0"/>
        <function-ref name="write" scoped="" ref="0x7f579deb7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f579ded2160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579ded2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f579debd0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f579debd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debd420"/>
        <function-ref name="write" scoped="" ref="0x7f579debd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f579decc670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f579decc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579decc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579deccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f579decd670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579decd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579decd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579decdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f579ded7ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f579ded7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f579debe0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f579debe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debe420"/>
        <function-ref name="write" scoped="" ref="0x7f579debe5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f579dec0880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f579dec0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec0c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f579debe880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f579debe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debec00"/>
        <function-ref name="write" scoped="" ref="0x7f579debed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f579deb6ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f579deb6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb40a0"/>
        <function-ref name="write" scoped="" ref="0x7f579deb4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f579deb7ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579deb7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb60a0"/>
        <function-ref name="write" scoped="" ref="0x7f579deb6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f579dec4880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f579dec4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec4c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f579debf0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f579debf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debf420"/>
        <function-ref name="write" scoped="" ref="0x7f579debf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f579deb9ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f579deb9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb80a0"/>
        <function-ref name="write" scoped="" ref="0x7f579deb8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f579dec6880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f579dec6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec6c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f579deb4ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f579deb4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579deb30a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579deb3230"/>
        <function-ref name="write" scoped="" ref="0x7f579deb33c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579deb3550"/>
        <function-ref name="readDone" scoped="" ref="0x7f579deb36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f579ded7480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579ded7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f579dece670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f579dece670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dece9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579deceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f579decb670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f579decb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579decb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579decbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f579dec10a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f579dec10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec1420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f579dec60a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f579dec60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec6420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f579dec1880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f579dec1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec1c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f579dec9870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f579dec9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec9bf0"/>
        <function-ref name="write" scoped="" ref="0x7f579dec9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f579ded67b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f579ded67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f579dec80a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dec80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec8420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579dedae20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579dedae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579ded81c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579ded8350"/>
        <function-ref name="request" scoped="" ref="0x7f579ded84e0"/>
        <function-ref name="granted" scoped="" ref="0x7f579ded8670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579ded8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f579decf2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f579decf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579decf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f579dece020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f579dece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dece3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f579deb9500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f579deb9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb9880"/>
        <function-ref name="write" scoped="" ref="0x7f579deb9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f579debace0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f579debace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb90a0"/>
        <function-ref name="write" scoped="" ref="0x7f579deb9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f579ded27b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579ded27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f579deba500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579deba500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deba880"/>
        <function-ref name="write" scoped="" ref="0x7f579debaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f579deb6500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f579deb6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579deb6880"/>
        <function-ref name="write" scoped="" ref="0x7f579deb6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f579dec20a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f579dec20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec2420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f579debf880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f579debf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debfc00"/>
        <function-ref name="write" scoped="" ref="0x7f579debfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f579ded6e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f579ded6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f579ded3ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f579ded3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579ded3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f579dec50a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f579dec50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec5420"/>
        <function-ref name="write" scoped="" ref="0x7f579dec55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f579decf940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f579decf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579decfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f579dec5880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f579dec5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dec5c00"/>
        <function-ref name="write" scoped="" ref="0x7f579dec5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f579debb0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f579debb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579debb820"/>
        <function-ref name="write" scoped="" ref="0x7f579debb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f579deb39b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f579deb39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579deb3d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579deb2020"/>
        <function-ref name="write" scoped="" ref="0x7f579deb21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579deb2340"/>
        <function-ref name="readDone" scoped="" ref="0x7f579deb24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f579e2ea2c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f579e2ea2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579e2ea640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579e2ea7d0"/>
        <function-ref name="write" scoped="" ref="0x7f579e2ea960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579e2eaaf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f579e2eac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579e2eb350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2eb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579e2eb6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579e2eb860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579e2eb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f579e2e8540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f579e2e8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e2e88c0"/>
        <function-ref name="write" scoped="" ref="0x7f579e2e8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f579e2e7370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f579e2e7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e2e76f0"/>
        <function-ref name="write" scoped="" ref="0x7f579e2e7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e2ec4d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e2ec4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e2ec850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e2ec9e0"/>
        <function-ref name="request" scoped="" ref="0x7f579e2ecb70"/>
        <function-ref name="granted" scoped="" ref="0x7f579e2ecd00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e2eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f579e2e61d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f579e2e61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579e2e6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f579e2cf2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f579e2cf2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e2cf660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e2cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f579e2e1890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f579e2e1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579e2e1c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579e2e1da0"/>
        <function-ref name="write" scoped="" ref="0x7f579e2df020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579e2df1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f579e2df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579e2e3660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579e2e3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579e2e39e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579e2e3b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579e2e3d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f579e2d8c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f579e2d8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f579e2db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f579e2cfb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f579e2cfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579e2d7020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579e2d71b0"/>
        <function-ref name="isState" scoped="" ref="0x7f579e2d7340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579e2d74d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f579e2d7660"/>
        <function-ref name="forceState" scoped="" ref="0x7f579e2d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f579e2dc060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f579e2dc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e2dc3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e2dc570"/>
        <function-ref name="request" scoped="" ref="0x7f579e2dc700"/>
        <function-ref name="granted" scoped="" ref="0x7f579e2dc890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e2dca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f579e2dfba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f579e2dfba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e2de020"/>
        <function-ref name="write" scoped="" ref="0x7f579e2de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f579e2dea30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f579e2dea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579e2dedb0"/>
        <function-ref name="write" scoped="" ref="0x7f579e2dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579e2d7a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579e2d7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579e2d7df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579e2d6020"/>
        <function-ref name="led1On" scoped="" ref="0x7f579e2d61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579e2d6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579e2d64d0"/>
        <function-ref name="get" scoped="" ref="0x7f579e2d6660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579e2d67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579e2d6e30"/>
        <function-ref name="set" scoped="" ref="0x7f579e2d6980"/>
        <function-ref name="led0On" scoped="" ref="0x7f579e2d6b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f579e2d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e2e2510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e2e2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e2e2890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e2e2a20"/>
        <function-ref name="request" scoped="" ref="0x7f579e2e2bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e2e2d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e2e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f579e2ccbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f579e2ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e2ca020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e2ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f579e2dd8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f579e2dd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579e2ddc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f579e271770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579e271770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579e271af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579e271c80"/>
        <function-ref name="isState" scoped="" ref="0x7f579e271e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579e268020"/>
        <function-ref name="requestState" scoped="" ref="0x7f579e2681b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f579e268340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f579e26c1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579e26c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579e26c550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579e26c6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f579e26c870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579e26ca00"/>
        <function-ref name="requestState" scoped="" ref="0x7f579e26cb90"/>
        <function-ref name="forceState" scoped="" ref="0x7f579e26cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579e267020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579e267020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579e2673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f579e267b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579e267b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579e266020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579e2661b0"/>
        <function-ref name="isState" scoped="" ref="0x7f579e266340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579e2664d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f579e266660"/>
        <function-ref name="forceState" scoped="" ref="0x7f579e2667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f579deff020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f579deff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579deff3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579deff530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f579df008f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f579df008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f579df00c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e24ec40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e24ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579df00020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579df001b0"/>
        <function-ref name="request" scoped="" ref="0x7f579df00340"/>
        <function-ref name="granted" scoped="" ref="0x7f579df004d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579df00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579cde3760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cde3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579cde3ae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579cde3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f579cde0120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f579cde0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579cde04a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579cde0630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f579cde08c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579cde08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579cde0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f579cde2020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f579cde2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f579cde23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579cde4a00" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579cde4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579cde4d80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579cde3020"/>
        <function-ref name="request" scoped="" ref="0x7f579cde31b0"/>
        <function-ref name="granted" scoped="" ref="0x7f579cde3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579cde34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f579cde2630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f579cde2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f579cde29b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f579cde2b40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f579cde2cd0"/>
        <function-ref name="write" scoped="" ref="0x7f579cde2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f579e1e58e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e1e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579e1e5c60"/>
        <function-ref name="configure" scoped="" ref="0x7f579e1e5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f579e1e8850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f579e1e8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e1e8bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e1e8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f579e1e3a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579e1e3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579e1e3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f579e1e9110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f579e1e9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f579e1e9490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f579e1e4690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f579e1e4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e1e4a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e1e4ba0"/>
        <function-ref name="request" scoped="" ref="0x7f579e1e4d30"/>
        <function-ref name="granted" scoped="" ref="0x7f579e1e3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e1e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e1edd80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e1edd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e1ea180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e1ea310"/>
        <function-ref name="request" scoped="" ref="0x7f579e1ea4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e1ea630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e1ea7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f579e1e9790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f579e1e9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f579e1e9b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f579e1e9ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f579e1e9e30"/>
        <function-ref name="write" scoped="" ref="0x7f579e1e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f579e1deb40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579e1deb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e1e0020"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e1e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f579e16c250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e16c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579e16c5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f579e16c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f579e16bc50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f579e16bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579e16a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579e16a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f579e1693e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f579e1693e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579e169780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f579e16ca10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f579e16ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f579e16cd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f579e169a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f579e169a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579e169dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579e168020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579e1681b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579e168340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579e1684d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579e168660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579e1687f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579e168980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579e168b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579e168ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579e168e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579e167020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579e1671b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579e167440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579e1675d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579e167760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579e1678f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f579e167a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579e167c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579e167da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579e166020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579e1661b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579e166340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579e1664d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e166660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579e1669f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579e166b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579e166d10"/>
        <function-ref name="tx" scoped="" ref="0x7f579e165020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579e1651b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579e165340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579e1654d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579e165660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579e1657f0"/>
        <function-ref name="rx" scoped="" ref="0x7f579e165980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579e165b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579e165ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579e165e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579e164020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579e1641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579e164c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579e164c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579e163020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579e1631b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579e163340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579e1634d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579e163660"/>
        <function-ref name="get" scoped="" ref="0x7f579e1637f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579e163980"/>
        <function-ref name="led2On" scoped="" ref="0x7f579e162020"/>
        <function-ref name="set" scoped="" ref="0x7f579e163ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579e163b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f579e163e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f579e16a5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f579e16a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e16a950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e16aae0"/>
        <function-ref name="request" scoped="" ref="0x7f579e16ac70"/>
        <function-ref name="granted" scoped="" ref="0x7f579e16ae00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e169020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e16e470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e16e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e16e810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e16e9a0"/>
        <function-ref name="request" scoped="" ref="0x7f579e16eb30"/>
        <function-ref name="granted" scoped="" ref="0x7f579e16ecc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e16ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f579e16b060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f579e16b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f579e16b3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f579e16b570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f579e16b700"/>
        <function-ref name="write" scoped="" ref="0x7f579e16b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f579e164480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579e164480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e164800"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e164990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f579e1622f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f579e1622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579e162670"/>
        <function-ref name="runTask" scoped="" ref="0x7f579e162800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f579e1512c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f579e1512c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e151640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f579e156d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579e156d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e1550e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e155270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f579e15a020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579e15a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579e15a3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579e15a530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579e15a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579e15a850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579e15a9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579e15ab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579e15ad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579e159020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579e1591b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579e159340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579e1594d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579e159660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579e1597f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579e159a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579e159c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579e159da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579e158020"/>
        <function-ref name="isUart" scoped="" ref="0x7f579e1581b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579e158340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579e1584d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579e158660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579e1587f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579e158980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579e158b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e158ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579e157220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579e1573b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579e157540"/>
        <function-ref name="tx" scoped="" ref="0x7f579e1576d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579e157860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579e1579f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579e157b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579e157d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579e156020"/>
        <function-ref name="rx" scoped="" ref="0x7f579e1561b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579e156340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579e1564d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579e156660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579e1567f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579e156980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f579e117bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f579e117bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e116020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e1161b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e116340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e114020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e116660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e1167f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e116980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e116b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e116ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e116e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e115020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e1151b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e115340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e1155d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e115760"/>
        <function-ref name="set" scoped="" ref="0x7f579e1158f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e115a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e1164d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e115c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e115da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f579e14b2d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f579e14b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e14b650"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e14b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f579e1143e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f579e1143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e114760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e1148f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e114a80"/>
        <function-ref name="clr" scoped="" ref="0x7f579e1127f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e114da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e113020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e1131b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e113340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e1134d0"/>
        <function-ref name="get" scoped="" ref="0x7f579e113660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e1137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e113980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e113b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e113da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e112020"/>
        <function-ref name="set" scoped="" ref="0x7f579e1121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e112340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e114c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e1124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e112660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f579e112bb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f579e112bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e111020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e1111b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e111340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e10f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e111660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e1117f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e111980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e111b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e111ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e111e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e110020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e1101b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e110340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e1105d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e110760"/>
        <function-ref name="set" scoped="" ref="0x7f579e1108f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e110a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e1114d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e110c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e110da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f579e150700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f579e150700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579e150a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579e150c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579e150da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579e14f020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579e14f1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579e14f340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579e14f4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579e14f660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579e14f7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579e14f980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579e14fb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579e14fca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579e14fe30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579e14e120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579e14e2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579e14e440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579e14e5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f579e14e760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579e14e8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579e14ea80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579e14ec10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579e14eda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579e14d020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579e14d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579e14d340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579e14d6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579e14d860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579e14d9f0"/>
        <function-ref name="tx" scoped="" ref="0x7f579e14db80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579e14dd10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579e14c020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579e14c1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579e14c340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579e14c4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f579e14c660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579e14c7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579e14c980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579e14cb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579e14cca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579e14ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f579e121d10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f579e121d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f579e1490e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f579e149270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f579e149400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f579e149590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f579e149720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f579e1498b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f579e149a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f579e149bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579e149d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f579e147020"/>
        <function-ref name="getData" scoped="" ref="0x7f579e1471b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f579e147340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f579e1474d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f579e147760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f579e1478f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f579e147a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f579e147c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f579e147da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f579e120020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f579e1201b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f579e120340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f579e1204d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f579e120660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f579e1207f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f579e120980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f579e120d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f579e11f020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f579e11f1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f579e11f340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f579e11f4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f579e11f660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f579e11f7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f579e11f980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f579e11fb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f579e11fca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f579e11fe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f579e11e020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f579e11e1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f579e11e340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f579e11e4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f579e11e660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f579e11e7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f579e11e980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f579e11eb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f579e11eca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f579e11ee30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f579e11d020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f579e11d1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f579e11d340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f579e11d8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f579e11da60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f579e11dbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f579e11dd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f579e11c020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f579e11c1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f579e11c340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f579e11c4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f579e11c660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f579e11c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f579e1193e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f579e1193e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e119760"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e1198f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e119a80"/>
        <function-ref name="clr" scoped="" ref="0x7f579e1177f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e119da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e118020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e1181b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e118340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e1184d0"/>
        <function-ref name="get" scoped="" ref="0x7f579e118660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e1187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e118980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e118b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e118da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e117020"/>
        <function-ref name="set" scoped="" ref="0x7f579e1171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e117340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e119c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e1174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e117660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f579e14bc20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e14bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e14a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f579e11cbb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f579e11cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579e11b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579e11b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579e11b340"/>
        <function-ref name="clr" scoped="" ref="0x7f579e119020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579e11b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579e11b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579e11b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579e11bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579e11bca0"/>
        <function-ref name="get" scoped="" ref="0x7f579e11be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579e11a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579e11a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579e11a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579e11a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579e11a760"/>
        <function-ref name="set" scoped="" ref="0x7f579e11a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579e11aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579e11b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579e11ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579e11ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579cdd82c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cdd82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579cdd8640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579cdd87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f579cdd2440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f579cdd2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579cdd27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579cdcb760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579cdcb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579cdcbae0"/>
        <function-ref name="configure" scoped="" ref="0x7f579cdcbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f579cdd2a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f579cdd2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f579cdd2dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f579cdd1020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f579cdd11b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f579cdd1340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f579cdd14d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f579cdd1660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f579cdd17f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f579cdd1980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579cdd1b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f579cdd1ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f579cdd1e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f579cdd0020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f579cdd01b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f579cdd0440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f579cdd05d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f579cdd0760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f579cdd08f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f579cdd0a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f579cdd0c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f579cdd0da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f579cdcf020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f579cdcf1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f579cdcf340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f579cdcf4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f579cdcf660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f579cdcf9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f579cdcfb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f579cdcfd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f579cdce020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f579cdce1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f579cdce340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f579cdce4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f579cdce660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f579cdce7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f579cdce980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f579cdceb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f579cdceca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f579cdcee30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f579cdcd020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f579cdcd1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f579cdcd340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f579cdcd4d0"/>
        <function-ref name="setData" scoped="" ref="0x7f579cdcd660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f579cdcd7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f579cdcd980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f579cdcdb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f579cdcdca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f579cdcde30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f579cdcc020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f579cdcc5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f579cdcc740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f579cdcc8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f579cdcca60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f579cdccbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f579cdccd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f579cdcb020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f579cdcb1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f579cdcb340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f579cdcb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f579cdd3c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579cdd3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579cdd2020"/>
        <function-ref name="txDone" scoped="" ref="0x7f579cdd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579cdd9640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579cdd9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579cdd99c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579cdd9b50"/>
        <function-ref name="request" scoped="" ref="0x7f579cdd9ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f579cdd9e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579cdd8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f579cdd72b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579cdd72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579cdd7630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579cdd77c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579cdd7950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579cdd7ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579cdd7c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579cdd7e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579cdd6020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579cdd61b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579cdd6340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579cdd64d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579cdd6660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579cdd67f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579cdd6980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579cdd6c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579cdd6da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579cdd5020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579cdd51b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f579cdd5340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579cdd54d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579cdd5660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579cdd57f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579cdd5980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579cdd5b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579cdd5ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579cdd5e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579cdd4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579cdd43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579cdd4540"/>
        <function-ref name="tx" scoped="" ref="0x7f579cdd46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579cdd4860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579cdd49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579cdd4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579cdd4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579cdd3020"/>
        <function-ref name="rx" scoped="" ref="0x7f579cdd31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579cdd3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579cdd34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579cdd3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579cdd37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579cdd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579cdd8a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579cdd8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579cdd8de0"/>
        <function-ref name="userId" scoped="" ref="0x7f579cdd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579e0682c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579e0682c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579e068640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579e0687d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579e0678a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579e0678a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579e067c20"/>
        <function-ref name="configure" scoped="" ref="0x7f579e067db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f579e06c4d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f579e06c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e06c850"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e06c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579e06a020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579e06a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579e06a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579e06a530"/>
        <function-ref name="request" scoped="" ref="0x7f579e06a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f579e06a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579e06a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f579e06b3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e06b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e06b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579e068ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579e068ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579e068e50"/>
        <function-ref name="userId" scoped="" ref="0x7f579e067020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f579e052bf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579e052bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579e051020"/>
        <function-ref name="userId" scoped="" ref="0x7f579e0511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f579e065d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f579e065d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e053180"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e053310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f579e0525e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f579e0525e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e052960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f579e053710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579e053710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579e053ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f579e053d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f579e053d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579e052180"/>
        <function-ref name="txDone" scoped="" ref="0x7f579e052310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579dfd3a60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579dfd3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579dfd3e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579dfd2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579dfd1790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579dfd1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579dfd1b30"/>
        <function-ref name="configure" scoped="" ref="0x7f579dfd1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f579dfd2270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579dfd2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579dfd25f0"/>
        <function-ref name="requested" scoped="" ref="0x7f579dfd2780"/>
        <function-ref name="granted" scoped="" ref="0x7f579dfd2910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579dfd2aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579dfd2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579dfd4ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579dfd4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579dfd30a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579dfd3230"/>
        <function-ref name="request" scoped="" ref="0x7f579dfd33c0"/>
        <function-ref name="granted" scoped="" ref="0x7f579dfd3550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579dfd36e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f579dfcf020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579dfcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579dfcf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579dfd2e80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579dfd2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579dfd1220"/>
        <function-ref name="userId" scoped="" ref="0x7f579dfd13b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579cd60020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579cd60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579cd603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f579cd60630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f579cd60630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f579cd609b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f579cd60b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f579cd60cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f579cd60e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579cd5d6c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579cd5d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579cd5da60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579cd5dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579cd5a9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579cd5a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579cd5ad70"/>
        <function-ref name="configure" scoped="" ref="0x7f579cd59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f579cd592b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f579cd592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f579cd59630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f579cd597c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f579cd59950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f579cd59ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f579cd5de40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579cd5de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579cd5c1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f579cd5c370"/>
        <function-ref name="granted" scoped="" ref="0x7f579cd5c500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579cd5c690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579cd5c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579cd59d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579cd59d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579cd580e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579cd58270"/>
        <function-ref name="led1On" scoped="" ref="0x7f579cd58400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579cd58590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579cd58720"/>
        <function-ref name="get" scoped="" ref="0x7f579cd588b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579cd58a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f579cd571b0"/>
        <function-ref name="set" scoped="" ref="0x7f579cd58d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f579cd58bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579cd57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579cd5e850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579cd5e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579cd5ebf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579cd5ed80"/>
        <function-ref name="request" scoped="" ref="0x7f579cd5d020"/>
        <function-ref name="granted" scoped="" ref="0x7f579cd5d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579cd5d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f579cd5a2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579cd5a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579cd5a650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579cd5ca70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579cd5ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579cd5cdf0"/>
        <function-ref name="userId" scoped="" ref="0x7f579cd5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f579cd57480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f579cd57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579cd57800"/>
        <function-ref name="runTask" scoped="" ref="0x7f579cd57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f579dfc6020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f579dfc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f579dfc63a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f579dfc6530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f579dfc66c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f579dfc6850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f579dfc69e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f579dfc6b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f579dfc6d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f579dfc5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579dfc51b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f579dfc5340"/>
        <function-ref name="getData" scoped="" ref="0x7f579dfc54d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f579dfc5660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f579dfc57f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f579dfc5a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f579dfc5c10"/>
        <function-ref name="getIV" scoped="" ref="0x7f579dfc5da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f579dfc4020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f579dfc41b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f579dfc4340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f579dfc44d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f579dfc4660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f579dfc47f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f579dfc4980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f579dfc4b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f579dfc4ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f579dfc3220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f579dfc33b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f579dfc3540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f579dfc36d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f579dfc3860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f579dfc39f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f579dfc3b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f579dfc3d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f579dfc2020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f579dfc21b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f579dfc2340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f579dfc24d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f579dfc2660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f579dfc27f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f579dfc2980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f579dfc2b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f579dfc2ca0"/>
        <function-ref name="setData" scoped="" ref="0x7f579dfc2e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f579dfc1020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f579dfc11b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f579dfc1340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f579dfc14d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f579dfc1660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f579dfc17f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f579dfc1d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f579dfc0020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f579dfc01b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f579dfc0340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f579dfc04d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f579dfc0660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f579dfc07f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f579dfc0980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f579dfc0b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f579dfc0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f579dfb6bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f579dfb6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579dfb5020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579dfb51b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579dfb5340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579dfb54d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579dfb5660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579dfb57f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579dfb5980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579dfb5b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579dfb5ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579dfb5e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579dfb4020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579dfb41b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579dfb4340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579dfb45d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579dfb4760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579dfb48f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579dfb4a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f579dfb4c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579dfb4da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579dfb3020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579dfb31b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579dfb3340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579dfb34d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579dfb3660"/>
        <function-ref name="getMode" scoped="" ref="0x7f579dfb37f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579dfb3b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579dfb3d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579dfb2020"/>
        <function-ref name="tx" scoped="" ref="0x7f579dfb21b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579dfb2340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579dfb24d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579dfb2660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579dfb27f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579dfb2980"/>
        <function-ref name="rx" scoped="" ref="0x7f579dfb2b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579dfb2ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579dfb2e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579dfb1020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579dfb11b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579dfb1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f579dfafe40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f579dfafe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dfae1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dfae370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579dfae500"/>
        <function-ref name="clr" scoped="" ref="0x7f579dfac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dfae820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dfae9b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579dfaeb40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579dfaecd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dfaee60"/>
        <function-ref name="get" scoped="" ref="0x7f579dfad020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579dfad1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579dfad340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579dfad4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579dfad760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579dfad8f0"/>
        <function-ref name="set" scoped="" ref="0x7f579dfada80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579dfadc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579dfae690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579dfadda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579dfac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f579dfbfd40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f579dfbfd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f579dfbc0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f579dfbc270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f579dfbc400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f579dfbc590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f579dfbc720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f579dfbc8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f579dfbca40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f579dfbcbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579dfbcd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f579dfbb020"/>
        <function-ref name="getData" scoped="" ref="0x7f579dfbb1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f579dfbb340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f579dfbb4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f579dfbb760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f579dfbb8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f579dfbba80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f579dfbbc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f579dfbbda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f579dfba020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f579dfba1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f579dfba340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f579dfba4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f579dfba660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f579dfba7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f579dfba980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f579dfbad10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f579dfb9020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f579dfb91b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f579dfb9340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f579dfb94d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f579dfb9660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f579dfb97f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f579dfb9980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f579dfb9b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f579dfb9ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f579dfb9e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f579dfb8020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f579dfb81b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f579dfb8340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f579dfb84d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f579dfb8660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f579dfb87f0"/>
        <function-ref name="setData" scoped="" ref="0x7f579dfb8980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f579dfb8b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f579dfb8ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f579dfb8e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f579dfb7020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f579dfb71b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f579dfb7340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f579dfb78d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f579dfb7a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f579dfb7bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f579dfb7d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f579dfb6020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f579dfb61b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f579dfb6340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f579dfb64d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f579dfb6660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f579dfb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f579dfb1700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f579dfb1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dfb1a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dfb1c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579dfb1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f579dfafa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dfb01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dfb0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579dfb04d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579dfb0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dfb07f0"/>
        <function-ref name="get" scoped="" ref="0x7f579dfb0980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579dfb0b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579dfb0ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579dfb0e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579dfaf120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579dfaf2b0"/>
        <function-ref name="set" scoped="" ref="0x7f579dfaf440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579dfaf5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579dfb0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579dfaf760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579dfaf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f579de9ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f579de9ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de99210"/>
        <function-ref name="write" scoped="" ref="0x7f579de993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f579dea5da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f579dea5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f579de9eb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579de9eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9c020"/>
        <function-ref name="write" scoped="" ref="0x7f579de9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f579de98670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579de98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de989f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f579de91e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f579de91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8f210"/>
        <function-ref name="write" scoped="" ref="0x7f579de8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f579de98e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f579de98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de97210"/>
        <function-ref name="write" scoped="" ref="0x7f579de973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f579de842f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f579de842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de84670"/>
        <function-ref name="write" scoped="" ref="0x7f579de84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f579de862f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579de862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de86670"/>
        <function-ref name="write" scoped="" ref="0x7f579de86800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f579dea2120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f579dea2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f579de8c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f579de8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f579de872f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579de872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de87670"/>
        <function-ref name="write" scoped="" ref="0x7f579de87800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f579de9cc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f579de9cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9b020"/>
        <function-ref name="write" scoped="" ref="0x7f579de9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f579de9bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579de9bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9a020"/>
        <function-ref name="write" scoped="" ref="0x7f579de9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f579de92670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f579de92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de929f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f579de94e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f579de94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de93210"/>
        <function-ref name="write" scoped="" ref="0x7f579de933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f579de97670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f579de97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de979f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579dea6760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dea6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579dea6ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579dea6c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579dea6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f579dea1aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dea1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f579dea0120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f579dea0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f579de8ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579de8ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8bdf0"/>
        <function-ref name="write" scoped="" ref="0x7f579de8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f579dea0870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f579dea0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f579de87ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579de87ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de87e50"/>
        <function-ref name="write" scoped="" ref="0x7f579de86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f579dea2dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579dea2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f579de8de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f579de8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8c210"/>
        <function-ref name="write" scoped="" ref="0x7f579de8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f579de9b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f579de9b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9b800"/>
        <function-ref name="write" scoped="" ref="0x7f579de9b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f579de9c480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579de9c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9c800"/>
        <function-ref name="write" scoped="" ref="0x7f579de9c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f579dea5750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f579dea5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f579de8ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f579de8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8d210"/>
        <function-ref name="write" scoped="" ref="0x7f579de8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f579de8f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f579de8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f579de8d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f579de8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f579de85ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f579de85ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de85e50"/>
        <function-ref name="write" scoped="" ref="0x7f579de84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f579de86ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579de86ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de86e50"/>
        <function-ref name="write" scoped="" ref="0x7f579de85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f579de93670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f579de93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de939f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f579de8fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f579de8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8e210"/>
        <function-ref name="write" scoped="" ref="0x7f579de8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f579de89ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f579de89ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de89e50"/>
        <function-ref name="write" scoped="" ref="0x7f579de87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f579de95670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f579de95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de959f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f579de84ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f579de84ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579de84e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579de83020"/>
        <function-ref name="write" scoped="" ref="0x7f579de831b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579de83340"/>
        <function-ref name="readDone" scoped="" ref="0x7f579de834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f579dea5100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579dea5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea5480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f579de9e370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f579de9e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9e6f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de9e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f579de9a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f579de9a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de9a800"/>
        <function-ref name="write" scoped="" ref="0x7f579de9a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f579de92e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f579de92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de91210"/>
        <function-ref name="write" scoped="" ref="0x7f579de913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f579de97e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f579de97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de95210"/>
        <function-ref name="write" scoped="" ref="0x7f579de953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f579de91670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f579de91670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de919f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de91b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f579de99670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f579de99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de999f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f579dea4450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f579dea4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f579de99e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579de99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de98210"/>
        <function-ref name="write" scoped="" ref="0x7f579de983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579dea7a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579dea7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579dea7e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579dea6020"/>
        <function-ref name="request" scoped="" ref="0x7f579dea61b0"/>
        <function-ref name="granted" scoped="" ref="0x7f579dea6340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579dea64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f579de9f020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f579de9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f579de9fcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f579de9fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de9e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f579de892f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f579de892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de89670"/>
        <function-ref name="write" scoped="" ref="0x7f579de89800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f579de8aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f579de8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8ae50"/>
        <function-ref name="write" scoped="" ref="0x7f579de89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f579dea1450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579dea1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f579de8a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579de8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8a670"/>
        <function-ref name="write" scoped="" ref="0x7f579de8a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f579de852f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f579de852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de85670"/>
        <function-ref name="write" scoped="" ref="0x7f579de85800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f579de93e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f579de93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de92210"/>
        <function-ref name="write" scoped="" ref="0x7f579de923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f579de8e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f579de8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f579dea4aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f579dea4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f579dea2770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f579dea2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dea2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f579de95e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f579de95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de94210"/>
        <function-ref name="write" scoped="" ref="0x7f579de943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f579de9f670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f579de9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de9f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f579de94670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f579de94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de949f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f579de8ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f579de8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de8b610"/>
        <function-ref name="write" scoped="" ref="0x7f579de8b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f579de837a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f579de837a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579de83b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579de83cb0"/>
        <function-ref name="write" scoped="" ref="0x7f579de83e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579de82020"/>
        <function-ref name="readDone" scoped="" ref="0x7f579de821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f579de6ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f579de6ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6c210"/>
        <function-ref name="write" scoped="" ref="0x7f579de6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f579de78da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f579de78da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de77180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f579de71b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579de71b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de70020"/>
        <function-ref name="write" scoped="" ref="0x7f579de701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f579de6b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579de6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f579de64e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f579de64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de63210"/>
        <function-ref name="write" scoped="" ref="0x7f579de633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f579de6be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f579de6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6a210"/>
        <function-ref name="write" scoped="" ref="0x7f579de6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f579de572f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f579de572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de57670"/>
        <function-ref name="write" scoped="" ref="0x7f579de57800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f579de5a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579de5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5a670"/>
        <function-ref name="write" scoped="" ref="0x7f579de5a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f579de76120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f579de76120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de764a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f579de5f670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f579de5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f579de5b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579de5b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5b670"/>
        <function-ref name="write" scoped="" ref="0x7f579de5b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f579de70c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f579de70c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6f020"/>
        <function-ref name="write" scoped="" ref="0x7f579de6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f579de6fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579de6fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6e020"/>
        <function-ref name="write" scoped="" ref="0x7f579de6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f579de65670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f579de65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de659f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f579de68e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f579de68e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de66210"/>
        <function-ref name="write" scoped="" ref="0x7f579de663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f579de6a670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f579de6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579de79760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579de79760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579de79ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579de79c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579de79e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f579de75aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579de75aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de75e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f579de73120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f579de73120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de735a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f579de5ea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579de5ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5edf0"/>
        <function-ref name="write" scoped="" ref="0x7f579de5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f579de73870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f579de73870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de73bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f579de5bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579de5bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5be50"/>
        <function-ref name="write" scoped="" ref="0x7f579de5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f579de76dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579de76dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de75180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f579de61e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f579de61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5f210"/>
        <function-ref name="write" scoped="" ref="0x7f579de5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f579de6f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f579de6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6f800"/>
        <function-ref name="write" scoped="" ref="0x7f579de6f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f579de70480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579de70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de70800"/>
        <function-ref name="write" scoped="" ref="0x7f579de70990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f579de78750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f579de78750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de78ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f579de62e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f579de62e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de61210"/>
        <function-ref name="write" scoped="" ref="0x7f579de613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f579de63670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f579de63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de639f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de63b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f579de61670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f579de61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de619f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de61b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f579de58ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f579de58ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de58e50"/>
        <function-ref name="write" scoped="" ref="0x7f579de57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f579de5aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579de5aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5ae50"/>
        <function-ref name="write" scoped="" ref="0x7f579de58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f579de66670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f579de66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de669f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de66b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f579de63e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f579de63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de62210"/>
        <function-ref name="write" scoped="" ref="0x7f579de623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f579de5cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f579de5cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5ce50"/>
        <function-ref name="write" scoped="" ref="0x7f579de5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f579de69670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f579de69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de699f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de69b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f579de57ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f579de57ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579de57e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579de56020"/>
        <function-ref name="write" scoped="" ref="0x7f579de561b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579de56340"/>
        <function-ref name="readDone" scoped="" ref="0x7f579de564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f579de78100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579de78100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de78480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f579de71370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f579de71370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de716f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de71880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f579de6e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f579de6e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6e800"/>
        <function-ref name="write" scoped="" ref="0x7f579de6e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f579de65e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f579de65e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de64210"/>
        <function-ref name="write" scoped="" ref="0x7f579de643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f579de6ae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f579de6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de69210"/>
        <function-ref name="write" scoped="" ref="0x7f579de693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f579de64670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f579de64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de649f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f579de6c670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f579de6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f579de77450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f579de77450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de777d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f579de6ce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579de6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de6b210"/>
        <function-ref name="write" scoped="" ref="0x7f579de6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579de7b9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579de7b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579de7bd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579de79020"/>
        <function-ref name="request" scoped="" ref="0x7f579de791b0"/>
        <function-ref name="granted" scoped="" ref="0x7f579de79340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579de794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f579de72020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f579de72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f579de72cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f579de72cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f579de5c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f579de5c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5c670"/>
        <function-ref name="write" scoped="" ref="0x7f579de5c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f579de5dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f579de5dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5de50"/>
        <function-ref name="write" scoped="" ref="0x7f579de5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f579de75450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579de75450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de757d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f579de5d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579de5d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5d670"/>
        <function-ref name="write" scoped="" ref="0x7f579de5d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f579de582f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f579de582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de58670"/>
        <function-ref name="write" scoped="" ref="0x7f579de58800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f579de66e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f579de66e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de65210"/>
        <function-ref name="write" scoped="" ref="0x7f579de653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f579de62670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f579de62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de629f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de62b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f579de77aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f579de77aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de77e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f579de76770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f579de76770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de76af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f579de69e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f579de69e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de68210"/>
        <function-ref name="write" scoped="" ref="0x7f579de683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f579de72670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f579de72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579de729f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f579de68670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f579de68670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de689f0"/>
        <function-ref name="write" scoped="" ref="0x7f579de68b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f579de5fe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f579de5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de5e610"/>
        <function-ref name="write" scoped="" ref="0x7f579de5e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f579de567a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f579de567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579de56b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579de56cb0"/>
        <function-ref name="write" scoped="" ref="0x7f579de56e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579de55020"/>
        <function-ref name="readDone" scoped="" ref="0x7f579de551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f579de4eb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579de4eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f579de4b020"/>
        <function-ref name="changed" scoped="" ref="0x7f579de4b1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f579de4b340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f579de4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f579de4dd20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579de4dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f579de370e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f579de33310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f579de33310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f579de33690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f579de30880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f579de30880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de30c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f579de25020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f579de25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de253a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f579de1bbd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f579de1bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de1e020"/>
        <function-ref name="write" scoped="" ref="0x7f579de1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f579de1e530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f579de1e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579de1e8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f579de1ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f579de1f140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f579de1f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de1f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f579de24c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f579de24c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de0b020"/>
        <function-ref name="write" scoped="" ref="0x7f579de0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f579de0b540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f579de0b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579de0b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579de0ba50"/>
        <function-ref name="toggle" scoped="" ref="0x7f579de0bbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579de0bd70"/>
        <function-ref name="get" scoped="" ref="0x7f579de09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579de091b0"/>
        <function-ref name="set" scoped="" ref="0x7f579de09340"/>
        <function-ref name="clr" scoped="" ref="0x7f579de094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f579de01950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f579de01950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f579de04780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f579de06150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f579de06150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579de064d0"/>
        <function-ref name="write" scoped="" ref="0x7f579de06660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f579de069f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f579de069f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579de06d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f579de05020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579de051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579de05340"/>
        <function-ref name="get" scoped="" ref="0x7f579de054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579de05660"/>
        <function-ref name="set" scoped="" ref="0x7f579de057f0"/>
        <function-ref name="clr" scoped="" ref="0x7f579de05980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f579de08ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f579de08ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f579dde1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f579dddfa90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f579dddfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f579ddde8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f579ddce020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579ddce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579ddcee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579ddcd800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579ddcd340"/>
        <function-ref name="overflow" scoped="" ref="0x7f579ddcdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f579ddc9530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f579ddc9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579ddc83d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579ddc8d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579ddc8890"/>
        <function-ref name="overflow" scoped="" ref="0x7f579ddc6260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f579ddc1020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579ddc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579ddc13a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579ddc1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579ddc16c0"/>
        <function-ref name="get" scoped="" ref="0x7f579ddc1850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579ddc19e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579ddc1b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f579ddc1d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579ddc0020"/>
        <function-ref name="overflow" scoped="" ref="0x7f579ddc01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579ddc0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579ddc04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579ddc5e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579ddc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec65460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f579ec657d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579ddc4ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579ddc3670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579ddc31b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579ddc3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f579de0c590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f579de0c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579de0c910"/>
        <function-ref name="isInput" scoped="" ref="0x7f579de0caa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579de0cc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579de0cdc0"/>
        <function-ref name="get" scoped="" ref="0x7f579ddbb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ddbb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ddbb340"/>
        <function-ref name="clr" scoped="" ref="0x7f579ddbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f579ddb9c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f579ddb9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ddb8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ddb81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579ddb8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579ddb6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ddb8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ddb87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579ddb8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579ddb8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ddb8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f579ddb8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579ddb7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579ddb71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579ddb7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579ddb75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579ddb7760"/>
        <function-ref name="set" scoped="" ref="0x7f579ddb78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579ddb7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579ddb7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f579ddb84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579ddb7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f579ddba9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f579ddba9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579ddbad60"/>
        <function-ref name="isInput" scoped="" ref="0x7f579ddb9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f579ddb91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579ddb9340"/>
        <function-ref name="get" scoped="" ref="0x7f579ddb94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579ddb9660"/>
        <function-ref name="set" scoped="" ref="0x7f579ddb97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f579ddb9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579ddb11b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579ddb11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579ddb1530"/>
        <function-ref name="stop" scoped="" ref="0x7f579ddb16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f579dda2cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f579dda2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579dda10a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579dda1230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579dda13c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579dda1550"/>
        <function-ref name="setCca" scoped="" ref="0x7f579dda16e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579dda1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f579dd9e990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f579dd9e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f579dd9ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f579dda2020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f579dda2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579dda23a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579dda2530"/>
        <function-ref name="modify" scoped="" ref="0x7f579dda26c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579dda2850"/>
        <function-ref name="resend" scoped="" ref="0x7f579dda29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579dda56c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579dda56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579dda5a40"/>
        <function-ref name="stop" scoped="" ref="0x7f579dda5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f579dda0150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f579dda0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f579dda04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f579dd94970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f579dd94970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579dd94cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579dd94e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579dd93030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579dd931c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f579dd93350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579dd934e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f579dd8a950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f579dd8a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579dd87020"/>
        <function-ref name="clear" scoped="" ref="0x7f579dd87750"/>
        <function-ref name="isValid" scoped="" ref="0x7f579dd88780"/>
        <function-ref name="set" scoped="" ref="0x7f579dd87e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f579dd72020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dd72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd723a0"/>
        <function-ref name="write" scoped="" ref="0x7f579dd72530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f579dd72890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579dd72890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd72c10"/>
        <function-ref name="write" scoped="" ref="0x7f579dd72da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f579dd93900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f579dd93900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f579dd93c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f579dd76530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f579dd76530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dd768b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f579dd85880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f579dd85880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f579dd85c00"/>
        <function-ref name="disable" scoped="" ref="0x7f579dd85d90"/>
        <function-ref name="captured" scoped="" ref="0x7f579dd84020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f579dd841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f579dd90ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f579dd90ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579dd8c390"/>
        <function-ref name="fired" scoped="" ref="0x7f579dd8d360"/>
        <function-ref name="startAt" scoped="" ref="0x7f579dd8dce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579dd8d820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579dd8c850"/>
        <function-ref name="start" scoped="" ref="0x7f579dd8f970"/>
        <function-ref name="stop" scoped="" ref="0x7f579dd8fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f579dd8cd00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dd8cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579dd8b0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579dd8b230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579dd8b3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579dd8b550"/>
        <function-ref name="getPower" scoped="" ref="0x7f579dd8b6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579dd8b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f579dd78550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579dd78550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd788d0"/>
        <function-ref name="write" scoped="" ref="0x7f579dd78a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f579dd78e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579dd78e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd771c0"/>
        <function-ref name="write" scoped="" ref="0x7f579dd77350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f579dd6cd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dd6cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579dd6f0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f579dd6f270"/>
        <function-ref name="sfd" scoped="" ref="0x7f579dd6f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579dd95bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579dd95bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579dd94020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579dd941b0"/>
        <function-ref name="modify" scoped="" ref="0x7f579dd94340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579dd944d0"/>
        <function-ref name="resend" scoped="" ref="0x7f579dd94660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f579dd7ad10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dd7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579dd790e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579dd79270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579dd79400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f579dd76c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dd76c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dd74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f579dd7d820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f579dd7d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dd7dba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dd7dd30"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dd7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dd7c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579dd7c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dd7c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f579dd7c660"/>
        <function-ref name="clr" scoped="" ref="0x7f579dd7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579dd96c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579dd96c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579dd95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579dd8bbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dd8bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579dd8a020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579dd8a1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579dd8a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f579dd7fbe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dd7fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dd85020"/>
        <function-ref name="isSet" scoped="" ref="0x7f579dd851b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579dd85340"/>
        <function-ref name="set" scoped="" ref="0x7f579dd854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f579dd743e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579dd743e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd74960"/>
        <function-ref name="write" scoped="" ref="0x7f579dd74af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f579dd7a020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f579dd7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579dd7a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579dd7a530"/>
        <function-ref name="request" scoped="" ref="0x7f579dd7a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f579dd7a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579dd7a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f579dd84500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f579dd84500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dd84980"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dd84b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dd84ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dd84e30"/>
        <function-ref name="get" scoped="" ref="0x7f579dd7d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dd7d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579dd7d340"/>
        <function-ref name="clr" scoped="" ref="0x7f579dd7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f579dd71130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579dd71130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd714b0"/>
        <function-ref name="write" scoped="" ref="0x7f579dd71640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f579dd719c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f579dd719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd71d40"/>
        <function-ref name="write" scoped="" ref="0x7f579dd70020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f579dd776d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579dd776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dd77a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f579dd7cb40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f579dd7cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dd7b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dd7b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dd7b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dd7b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f579dd7b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dd7b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f579dd7b980"/>
        <function-ref name="clr" scoped="" ref="0x7f579dd7bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579dd6f6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579dd6f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579dd6fa40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579dd6fbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579dd6fd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579dd6e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579dd6e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579dd6e340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579dd6e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579dd6eb10"/>
        <function-ref name="set" scoped="" ref="0x7f579dd6e660"/>
        <function-ref name="led0On" scoped="" ref="0x7f579dd6e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f579dd6e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f579dd735e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dd735e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dd73960"/>
        <function-ref name="write" scoped="" ref="0x7f579dd73af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579dd95320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579dd95320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579dd956a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579dd95830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f579dd79780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f579dd79780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579dd79b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579dd79c90"/>
        <function-ref name="write" scoped="" ref="0x7f579dd79e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579dd78020"/>
        <function-ref name="readDone" scoped="" ref="0x7f579dd781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f579dd77de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f579dd77de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dd76180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f579dd74e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f579dd74e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dd73220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f579dd900f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f579dd900f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f579dd90470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f579dcd2c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f579dcd2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd0210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f579dcdb020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f579dcdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcdb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f579dcd5c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579dcd5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd4020"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f579dccf670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dccf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dccf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dccfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f579dcc8e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f579dcc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc7210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f579dccfe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f579dccfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcce210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f579dcbb2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f579dcbb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbb670"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f579dcbe2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579dcbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbe670"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f579dcda370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f579dcda370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcda6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f579dcc3670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f579dcc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc39f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f579dcbf2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579dcbf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbf670"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f579dcd4c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f579dcd4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd3020"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f579dcd3c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579dcd3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd2020"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f579dcc9670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f579dcc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc99f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f579dccce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f579dccce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcca210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f579dcce670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f579dcce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579dcdd8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579dcdd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579dcddc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579dcdde00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579dcdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f579dcd9d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579dcd9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f579dcd7370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f579dcd7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f579dcc2a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579dcc2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc2df0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f579dcd7ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f579dcd7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f579dcbfad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579dcbfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbfe50"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f579dcd9060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579dcd9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd93e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f579dcc5e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f579dcc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc3210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f579dcd3480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f579dcd3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd3800"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f579dcd4480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579dcd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd4800"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f579dcdc940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f579dcdc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcdccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f579dcc6e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f579dcc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc5210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f579dcc7670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f579dcc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc79f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f579dcc5670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f579dcc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc59f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f579dcbcad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f579dcbcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbce50"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f579dcbead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579dcbead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbee50"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f579dcca670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f579dcca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dccab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f579dcc7e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f579dcc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc6210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f579dcc0ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f579dcc0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc0e50"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f579dccd670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f579dccd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dccd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dccdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f579dcbbad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f579dcbbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579dcbbe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579dcba020"/>
        <function-ref name="write" scoped="" ref="0x7f579dcba1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579dcba340"/>
        <function-ref name="readDone" scoped="" ref="0x7f579dcba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f579dcdc2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579dcdc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcdc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f579dcd5490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f579dcd5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd5810"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f579dcd2480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f579dcd2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd2800"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f579dcc9e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f579dcc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc8210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f579dccee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f579dccee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dccd210"/>
        <function-ref name="write" scoped="" ref="0x7f579dccd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f579dcc8670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f579dcc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc89f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f579dcd0670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f579dcd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcd09f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f579dcdb670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f579dcdb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcdb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f579dcd0e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dcd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dccf210"/>
        <function-ref name="write" scoped="" ref="0x7f579dccf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579dcdfc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579dcdfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579dcdd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579dcdd1b0"/>
        <function-ref name="request" scoped="" ref="0x7f579dcdd340"/>
        <function-ref name="granted" scoped="" ref="0x7f579dcdd4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579dcdd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f579dcd6160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f579dcd6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f579dcd6e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f579dcd6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f579dcc02f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f579dcc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc0670"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f579dcc1ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f579dcc1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc1e50"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f579dcd96b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579dcd96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd9a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f579dcc12f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579dcc12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc1670"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f579dcbc2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f579dcbc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcbc670"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f579dccae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f579dccae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc9210"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f579dcc6670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f579dcc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc69f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f579dcdbcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f579dcdbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcda0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f579dcda9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f579dcda9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcdad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f579dccde50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f579dccde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dccc210"/>
        <function-ref name="write" scoped="" ref="0x7f579dccc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f579dcd67b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f579dcd67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dcd6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f579dccc670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f579dccc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dccc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f579dcc3e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f579dcc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dcc2610"/>
        <function-ref name="write" scoped="" ref="0x7f579dcc27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f579dcba7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f579dcba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579dcbab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579dcbacb0"/>
        <function-ref name="write" scoped="" ref="0x7f579dcbae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579dcb9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f579dcb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f579dcaedf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dcaedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579dcab1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f579dcab350"/>
        <function-ref name="sfd" scoped="" ref="0x7f579dcab4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579dcab7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579dcab7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579dcabb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f579dcaa020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f579dcaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f579dcaa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579dcae5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579dcae5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579dcae940"/>
        <function-ref name="stop" scoped="" ref="0x7f579dcaead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f579dca3380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f579dca3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dca3700"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dca3890"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dca3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dca3bb0"/>
        <function-ref name="get" scoped="" ref="0x7f579dca3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dca1020"/>
        <function-ref name="set" scoped="" ref="0x7f579dca11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f579dca1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f579dc9bb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f579dc9bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f579dc9a020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f579dc9a1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f579dc9a340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f579dc9a4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f579dc9a660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f579dc9a7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f579dc9a980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f579dc9ab10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f579dc9aca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f579dc9ae30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f579dc99020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f579dc991b0"/>
        <function-ref name="sync" scoped="" ref="0x7f579dc99340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f579dc995d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f579dc99760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f579dc849d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f579dc849d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579dc84d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f579dc83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f579dc99d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f579dc99d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579dc97330"/>
        <function-ref name="clear" scoped="" ref="0x7f579dc97a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f579dc98ba0"/>
        <function-ref name="set" scoped="" ref="0x7f579dc95210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f579dca16b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f579dca16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dca1a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dca1bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dca1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dca0020"/>
        <function-ref name="get" scoped="" ref="0x7f579dca01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dca0340"/>
        <function-ref name="set" scoped="" ref="0x7f579dca04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f579dca0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f579dc94cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579dc94cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dc930a0"/>
        <function-ref name="write" scoped="" ref="0x7f579dc93230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f579dc93590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579dc93590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dc93910"/>
        <function-ref name="write" scoped="" ref="0x7f579dc93aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f579dc926d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f579dc926d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dc92a50"/>
        <function-ref name="write" scoped="" ref="0x7f579dc92be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f579dc9c330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc9c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579dc9c6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579dc9c840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579dc9c9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579dc9cb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f579dc9ccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579dc9ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f579dca6550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f579dca6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579dca68d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f579dca6a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f579dca6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f579dc9d3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f579dc9d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dc9d720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f579dca4020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f579dca4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579dca43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579dca4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f579dca46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579dca4850"/>
        <function-ref name="get" scoped="" ref="0x7f579dca49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579dca4b70"/>
        <function-ref name="set" scoped="" ref="0x7f579dca4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f579dca3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f579dc91020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579dc91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dc913a0"/>
        <function-ref name="write" scoped="" ref="0x7f579dc91530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579dca7620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579dca7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579dca79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579dc9b1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc9b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579dc9b560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579dc9b6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579dc9b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579dca5020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579dca5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579dca53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f579dc9f6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f579dc9f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579dc9fa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579dc9fbf0"/>
        <function-ref name="request" scoped="" ref="0x7f579dc9fd80"/>
        <function-ref name="granted" scoped="" ref="0x7f579dc9e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579dc9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f579dc93e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579dc93e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dc921c0"/>
        <function-ref name="write" scoped="" ref="0x7f579dc92350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f579dc9e530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f579dc9e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579dc9e8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579dc9ea40"/>
        <function-ref name="write" scoped="" ref="0x7f579dc9ebd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579dc9ed60"/>
        <function-ref name="readDone" scoped="" ref="0x7f579dc9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f579dc918b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579dc918b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dc91e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f579dca57c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f579dca57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f579dca5b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579dc90150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579dc90150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579dc904d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579dc90660"/>
        <function-ref name="led1On" scoped="" ref="0x7f579dc907f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579dc90980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579dc90b10"/>
        <function-ref name="get" scoped="" ref="0x7f579dc90ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579dc90e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579dc8f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f579dc8f020"/>
        <function-ref name="led0On" scoped="" ref="0x7f579dc8f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f579dc8f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f579dc943e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579dc943e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579dc94760"/>
        <function-ref name="write" scoped="" ref="0x7f579dc948f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f579dc95b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f579dc95b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dc94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f579dca0a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f579dca0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579dca0dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f579dc9f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f579dc9f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f579dc9f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f579dc9dad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579dc9dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579dc9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579dca7ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579dca7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579dca60a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579dca6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f579dc23a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579dc23a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f579dc23df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f579dc27670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579dc279f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579dc27b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579dc27d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579dc24020"/>
        <function-ref name="getPower" scoped="" ref="0x7f579dc241b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579dc24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f579dc22550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc22550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579dc21b00"/>
        <function-ref name="clear" scoped="" ref="0x7f579dc202a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f579dc213d0"/>
        <function-ref name="set" scoped="" ref="0x7f579dc209d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f579dc230c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc230c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579dc23440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579dc235d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579dc23760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f579dc1a480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dc1a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dc1a800"/>
        <function-ref name="isSet" scoped="" ref="0x7f579dc1a990"/>
        <function-ref name="cancel" scoped="" ref="0x7f579dc1ab20"/>
        <function-ref name="set" scoped="" ref="0x7f579dc1acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f579dc1e660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579dc1e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579dc1dce0"/>
        <function-ref name="clear" scoped="" ref="0x7f579dc1c460"/>
        <function-ref name="isValid" scoped="" ref="0x7f579dc1d5b0"/>
        <function-ref name="set" scoped="" ref="0x7f579dc1cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f579dc246e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f579dc246e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579dc24a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f579dc24bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579dc24d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f579dc14020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f579dc14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f579dc143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f579dc19d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579dc19d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579dc160e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579dc16270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579dc16400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579dc16590"/>
        <function-ref name="getPower" scoped="" ref="0x7f579dc16720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579dc168b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f579dc0b4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579dc0b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579dc0b820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579dc0b9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579dc0bb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579dc0bcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579dc0be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f579dc14a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f579dc14a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579dc12020"/>
        <function-ref name="clear" scoped="" ref="0x7f579dc12750"/>
        <function-ref name="isValid" scoped="" ref="0x7f579dc138d0"/>
        <function-ref name="set" scoped="" ref="0x7f579dc12e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f579dc15640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579dc15640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579dc159c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579dc15b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579dc15ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f579dc0c8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f579dc0c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dc0cc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f579dc0cdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579dc0b020"/>
        <function-ref name="set" scoped="" ref="0x7f579dc0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f579dc07820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f579dc07820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dc094c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f579dc09b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f579dc09b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dc067d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f579dc10af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f579dc10af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f579dc0e0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f579dc0e800"/>
        <function-ref name="isValid" scoped="" ref="0x7f579dc0f970"/>
        <function-ref name="set" scoped="" ref="0x7f579dc0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f579dc16c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f579dc16c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579dc15020"/>
        <function-ref name="noAck" scoped="" ref="0x7f579dc151b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579dc15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f579dbb7790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f579dbb7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dbb63f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f579dbb6a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579dbb6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dbac890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579dbaa260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579dbacd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f579dbaa720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f579dba51d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f579dba51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579dba1630"/>
        <function-ref name="fired" scoped="" ref="0x7f579dba4c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579dba39d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579dba3550"/>
        <function-ref name="getdt" scoped="" ref="0x7f579dba0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f579dba1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579dba30d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579dba5dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579dba1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579dba42e0"/>
        <function-ref name="stop" scoped="" ref="0x7f579dba47b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f579dba0610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f579dba0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579db9e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579dba63a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579dba63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579dba6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579db71870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579db71870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579db6e090"/>
        <function-ref name="fired" scoped="" ref="0x7f579db6f090"/>
        <function-ref name="startAt" scoped="" ref="0x7f579db6fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579db6f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579db6e550"/>
        <function-ref name="start" scoped="" ref="0x7f579db706a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579db70bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579db71020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579db71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579db713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579cc29260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579cc29260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579cc26b30"/>
        <function-ref name="fired" scoped="" ref="0x7f579cc27a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f579cc264e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579cc26020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579cc25020"/>
        <function-ref name="start" scoped="" ref="0x7f579cc27090"/>
        <function-ref name="stop" scoped="" ref="0x7f579cc275a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579cc2a9d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579cc2a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579cc2ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f579cc10a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f579cc10a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579cc10e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579cc0f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579cc0f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579cc0f340"/>
        <function-ref name="fired" scoped="" ref="0x7f579cc0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f579cc12020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579cc12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579cc123a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579cc12530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579cc126c0"/>
        <function-ref name="get" scoped="" ref="0x7f579cc12850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579cc129e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579cc12b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f579cc12d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579cc11020"/>
        <function-ref name="overflow" scoped="" ref="0x7f579cc111b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f579cc11340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579cc114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f579cc11760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579cc11760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579cc11ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579cc11c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579cc11e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579cc10020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579cc101b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579cc10340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579cc104d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579cc10660"/>
        <function-ref name="setControl" scoped="" ref="0x7f579cc107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f579cc04760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f579cc04760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f579cc04ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f579cc04c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f579cc04e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f579cc03020"/>
        <function-ref name="fired" scoped="" ref="0x7f579cc031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f579cc0add0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f579cc0add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579cc08180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f579cc08310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579cc084a0"/>
        <function-ref name="get" scoped="" ref="0x7f579cc08630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579cc087c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579cc08950"/>
        <function-ref name="getMode" scoped="" ref="0x7f579cc08ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579cc08c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f579cc08e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f579cc07020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f579cc071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579cc0dbf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579cc0dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579cc0a4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f579cc0b4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f579cc0be60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579cc0b9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579cc0a9a0"/>
        <function-ref name="start" scoped="" ref="0x7f579cc0ca80"/>
        <function-ref name="stop" scoped="" ref="0x7f579cc0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579cc0d360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579cc0d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579cc0d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f579cc07440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f579cc07440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f579cc077c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f579cc07950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f579cc07ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f579cc07c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f579cc07e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f579cc04020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f579cc041b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f579cc04340"/>
        <function-ref name="setControl" scoped="" ref="0x7f579cc044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579db90b70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579db90b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579db8d9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579db8c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579db8de70"/>
        <function-ref name="overflow" scoped="" ref="0x7f579db8c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f579db86b90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f579db86b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579db849d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579db834e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579db83020"/>
        <function-ref name="overflow" scoped="" ref="0x7f579db839a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579db88610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579db88610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579db875b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579db86020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579db87a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f579db864e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f579cc235f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579cc235f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579cc21e50"/>
        <function-ref name="fired" scoped="" ref="0x7f579cc22e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f579cc21800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579cc21340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579cc1f340"/>
        <function-ref name="start" scoped="" ref="0x7f579cc22430"/>
        <function-ref name="stop" scoped="" ref="0x7f579cc22940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f579cc1dd20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f579cc1dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579cc19670"/>
        <function-ref name="fired" scoped="" ref="0x7f579cc1b550"/>
        <function-ref name="startAt" scoped="" ref="0x7f579cc19020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579cc1ba10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579cc19b30"/>
        <function-ref name="start" scoped="" ref="0x7f579cc1cb60"/>
        <function-ref name="stop" scoped="" ref="0x7f579cc1b090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f579cc1f9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579cc1f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579cc1e7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579cc1d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579cc1eca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579cc1d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f579db3b9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f579db3b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579db3bd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f579db3a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f579db3f850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f579db3f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579db3b090"/>
        <function-ref name="fired" scoped="" ref="0x7f579db3c090"/>
        <function-ref name="startAt" scoped="" ref="0x7f579db3ca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579db3c550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f579db3b550"/>
        <function-ref name="start" scoped="" ref="0x7f579db3e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579db3ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579db442f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579db442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579db40870"/>
        <function-ref name="fired" scoped="" ref="0x7f579db43e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579db41c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579db41780"/>
        <function-ref name="getdt" scoped="" ref="0x7f579db3f1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f579db40cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579db41300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579db43020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579db40260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579db434f0"/>
        <function-ref name="stop" scoped="" ref="0x7f579db439c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f579dabc020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f579dabc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579dab8630"/>
        <function-ref name="fired" scoped="" ref="0x7f579dabba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579daba920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579daba4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f579dab7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f579dab8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579daba020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579dabcc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579dab8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579dabb110"/>
        <function-ref name="stop" scoped="" ref="0x7f579dabb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f579dab7450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f579dab7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f579dab77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579dac38e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579dac38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579dabe020"/>
        <function-ref name="fired" scoped="" ref="0x7f579dac14c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579dabf300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579dac1e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f579dabe960"/>
        <function-ref name="gett0" scoped="" ref="0x7f579dabe4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579dac1960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579dac2560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579dabf930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579dac2a50"/>
        <function-ref name="stop" scoped="" ref="0x7f579dac1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f579cbaa020" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f579cbaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579cbaa3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579cbaa530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f579cbb2180" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f579cbb2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579cbae630"/>
        <function-ref name="fired" scoped="" ref="0x7f579cbb1bf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579cbaf990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579cbaf510"/>
        <function-ref name="getdt" scoped="" ref="0x7f579cbad020"/>
        <function-ref name="gett0" scoped="" ref="0x7f579cbaeab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579cbaf090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579cbb2d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579cbae020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579cbb12a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579cbb1770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f579cbac8b0" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f579cbac8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f579cbacc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f579cbad410" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f579cbad410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f579cbac4d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f579cbac660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f579cbadab0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f579cbadc40"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f579cbaddd0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f579cbac020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f579cbac1b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f579cbac340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f579cbad790"/>
        <function-ref name="node_id" scoped="" ref="0x7f579cbad920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579cbb9bc0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579cbb9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579cbb3220"/>
        <function-ref name="fired" scoped="" ref="0x7f579cbb6740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579cbb5570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579cbb50d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f579cbb3b60"/>
        <function-ref name="gett0" scoped="" ref="0x7f579cbb36c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579cbb6be0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579cbb8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579cbb5ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579cbb8d50"/>
        <function-ref name="stop" scoped="" ref="0x7f579cbb62a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f579dab5a20" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f579dab5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dab46b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f579dab4d20" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579dab4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579dab2b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579dab1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579dab1090"/>
        <function-ref name="overflow" scoped="" ref="0x7f579dab1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579daabce0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579daabce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579da96220"/>
        <function-ref name="fired" scoped="" ref="0x7f579da987c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579da97590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579da97110"/>
        <function-ref name="getdt" scoped="" ref="0x7f579da96b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f579da966a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579da98c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579da99940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579da97ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579da99e10"/>
        <function-ref name="stop" scoped="" ref="0x7f579da98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f579daa2610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f579daa2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579da9ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f579da9f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579da9e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579da9fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f579da9d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f579da9d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579da9f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579daa1390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579da9e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579daa1860"/>
        <function-ref name="stop" scoped="" ref="0x7f579daa1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f579da842f0" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f579da842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da84870"/>
        <function-ref name="write" scoped="" ref="0x7f579da84a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f579da8f670" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f579da8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f579da882f0" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f579da882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da88670"/>
        <function-ref name="write" scoped="" ref="0x7f579da88800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f579da83ce0" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f579da83ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da820a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da82230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f579da7b500" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f579da7b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7b880"/>
        <function-ref name="write" scoped="" ref="0x7f579da7ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f579da82500" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f579da82500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da82880"/>
        <function-ref name="write" scoped="" ref="0x7f579da82a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f579da6f900" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f579da6f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da6fc80"/>
        <function-ref name="write" scoped="" ref="0x7f579da6fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f579da72900" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f579da72900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da72c80"/>
        <function-ref name="write" scoped="" ref="0x7f579da72e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f579da8e9c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f579da8e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f579da77ce0" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f579da77ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da760a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da76230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f579da73900" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f579da73900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da73c80"/>
        <function-ref name="write" scoped="" ref="0x7f579da73e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f579da872f0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f579da872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da87670"/>
        <function-ref name="write" scoped="" ref="0x7f579da87800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f579da852f0" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f579da852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da85670"/>
        <function-ref name="write" scoped="" ref="0x7f579da85800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f579da7dce0" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f579da7dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da7c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f579da7e500" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f579da7e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7e880"/>
        <function-ref name="write" scoped="" ref="0x7f579da7ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f579da82ce0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f579da82ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da810a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da81230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f579da90020" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f579da90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f579da903a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f579da90530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f579da906c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f579da8b370" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f579da8b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f579da8b9c0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f579da8b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f579da75120" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f579da75120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da754a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da75630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f579da8a160" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f579da8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f579da72120" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f579da72120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da724a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f579da8d6b0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f579da8d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f579da77500" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f579da77500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da77880"/>
        <function-ref name="write" scoped="" ref="0x7f579da77a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f579da87ad0" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f579da87ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da87e50"/>
        <function-ref name="write" scoped="" ref="0x7f579da85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f579da88ad0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f579da88ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da88e50"/>
        <function-ref name="write" scoped="" ref="0x7f579da87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f579da8f020" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f579da8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f579da79500" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f579da79500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da79880"/>
        <function-ref name="write" scoped="" ref="0x7f579da79a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f579da7bce0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f579da7bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da7a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f579da79ce0" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f579da79ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da770a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da77230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f579da6f120" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f579da6f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da6f4a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da6f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f579da70120" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f579da70120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da704a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da70630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f579da7ece0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f579da7ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da7d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f579da7a500" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f579da7a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7a880"/>
        <function-ref name="write" scoped="" ref="0x7f579da7aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f579da73120" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f579da73120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da734a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da73630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f579da81ce0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f579da81ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da800a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da80230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f579da6e120" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f579da6e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579da6e4a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579da6e630"/>
        <function-ref name="write" scoped="" ref="0x7f579da6e7c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579da6e950"/>
        <function-ref name="readDone" scoped="" ref="0x7f579da6eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f579da90990" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f579da90990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da90d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f579da89ae0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f579da89ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da89e60"/>
        <function-ref name="write" scoped="" ref="0x7f579da88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f579da85ad0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f579da85ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da85e50"/>
        <function-ref name="write" scoped="" ref="0x7f579da84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f579da7c500" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f579da7c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7c880"/>
        <function-ref name="write" scoped="" ref="0x7f579da7ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f579da81500" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f579da81500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da81880"/>
        <function-ref name="write" scoped="" ref="0x7f579da81a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f579da7cce0" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f579da7cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da7b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f579da84cd0" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f579da84cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da830a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da83230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f579da8fcc0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f579da8fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f579da83500" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f579da83500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da83880"/>
        <function-ref name="write" scoped="" ref="0x7f579da83a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579da91250" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579da91250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579da915d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579da91760"/>
        <function-ref name="request" scoped="" ref="0x7f579da918f0"/>
        <function-ref name="granted" scoped="" ref="0x7f579da91a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579da91c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f579da8a7b0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f579da8a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f579da89490" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f579da89490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da89810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f579da74900" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f579da74900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da74c80"/>
        <function-ref name="write" scoped="" ref="0x7f579da74e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f579da74120" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f579da74120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da744a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da74630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f579da8dd00" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f579da8dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f579da75900" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f579da75900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da75c80"/>
        <function-ref name="write" scoped="" ref="0x7f579da75e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f579da70900" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f579da70900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da70c80"/>
        <function-ref name="write" scoped="" ref="0x7f579da70e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f579da7d500" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f579da7d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7d880"/>
        <function-ref name="write" scoped="" ref="0x7f579da7da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f579da7ace0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f579da7ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da790a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da79230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f579da8e370" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f579da8e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f579da8d060" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f579da8d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da8d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f579da80500" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f579da80500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da80880"/>
        <function-ref name="write" scoped="" ref="0x7f579da80a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f579da8ae00" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f579da8ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f579da891c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f579da80ce0" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f579da80ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da7e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f579da7e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f579da76500" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f579da76500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f579da76c80"/>
        <function-ref name="write" scoped="" ref="0x7f579da76e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f579da6edb0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f579da6edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f579da6d180"/>
        <function-ref name="writeDone" scoped="" ref="0x7f579da6d310"/>
        <function-ref name="write" scoped="" ref="0x7f579da6d4a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f579da6d630"/>
        <function-ref name="readDone" scoped="" ref="0x7f579da6d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f579da43a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f579da43a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f579da43da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f579da42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f579da41920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f579da41920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579da43560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579da47990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579da47990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579da47d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f579da3da20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f579da3da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f579da3dda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f579da3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f579da3e940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f579da3e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579da3d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579da3e080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579da3e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579da3e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f579da45aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579da45aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579da45e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579da2b020"/>
        <function-ref name="isState" scoped="" ref="0x7f579da2b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579da2b340"/>
        <function-ref name="requestState" scoped="" ref="0x7f579da2b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f579da2b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579da21020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579da21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579da213a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579da21530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579da216c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579da21850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579da219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579da22220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579da22220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579da225a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579da22730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579da228c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579da22a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579da22be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579da1de60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579da1de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579da1c210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579da1c3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579da1c530"/>
        <function-ref name="cancel" scoped="" ref="0x7f579da1c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579da1c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579da20a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579da20a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579da20d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579da1d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579da1d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579da1d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579da1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f579da1b8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f579da1b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f579da1bc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f579da1be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579da1d750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579da1d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579da1dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579da1a170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579da1a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579da1a4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579da1a680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579da1a810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f579da1cae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579da1cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579da1ce60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579da1b020"/>
        <function-ref name="isState" scoped="" ref="0x7f579da1b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579da1b340"/>
        <function-ref name="requestState" scoped="" ref="0x7f579da1b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f579da1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f579da1e690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579da1e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579da1ea10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579da1eba0"/>
        <function-ref name="isState" scoped="" ref="0x7f579da1ed30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579da09020"/>
        <function-ref name="requestState" scoped="" ref="0x7f579da091b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f579da09340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579da03950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579da03950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579da03cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579da06aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579da06aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579da06e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f579da03200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f579da03200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579da03580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579d9fd3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579d9fd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9fd770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d9feb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d9feb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d9fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579da01e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579da01e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9fe1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579d9fda70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579d9fda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9fddf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579d9fc020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579d9fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f579d9fe570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f579d9fe570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9fe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579d9cf020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579d9cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579d9cf6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579d9cf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9cfa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9cfbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9cfd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9ce020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d9d38e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d9d38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9d3c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9d3df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9d2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9d21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f579d9d2c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f579d9d2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9d10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9d1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9d13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9d1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9d16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d9d25e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d9d25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9d2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d9d4be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d9d4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d9d3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d9d31b0"/>
        <function-ref name="request" scoped="" ref="0x7f579d9d3340"/>
        <function-ref name="granted" scoped="" ref="0x7f579d9d34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d9d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f579d9d1a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f579d9d1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9d1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f579d9d0170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f579d9d0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d9d04f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d9d0680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9d0810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9d09a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d9d0b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579d9c5d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579d9c5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9c4180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9c4310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9c44a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9c4630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9c47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579d9c4b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579d9c4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f579d996db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f579d996db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d994180"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d994310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f579d9c32f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579d9c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579d9c3670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579d9c3800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579d9c3990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579d9c3b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f579d9c3cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579d9c3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f579d9c7a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f579d9c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9c7da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9c6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9c61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9c6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9c64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f579d9c2b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f579d9c2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f579d9c1020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f579d9c11b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f579d9c1340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f579d9c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579d9c2170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579d9c2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9c24f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579d9c2680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579d9c2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f579d9c7370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f579d9c7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9c76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d9c97b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d9c97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d9c9b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d9c9cc0"/>
        <function-ref name="request" scoped="" ref="0x7f579d9c9e50"/>
        <function-ref name="granted" scoped="" ref="0x7f579d9c8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d9c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f579d9c84d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f579d9c84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9c8850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9c89e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9c8b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9c8d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f579d9c6840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f579d9c6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9c6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f579d9c5020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f579d9c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d9c53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d9c5530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9c56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9c5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d9c59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d976dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d976dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d975180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f579d975410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f579d975410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f579d975790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f579d975920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f579d975ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f579d975c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579d969b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579d969b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579d968020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579d9681b0"/>
        <function-ref name="start" scoped="" ref="0x7f579d968340"/>
        <function-ref name="stop" scoped="" ref="0x7f579d9684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579d967860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579d967860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d967be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d967d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d966020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9661b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d966340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579d966690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579d966690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d966a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d96dce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d96dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d96a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d96a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d96a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d96a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d96a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f579d969080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f579d969080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f579d969400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f579d969590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f579d969720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f579d9698b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f579d968800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f579d968800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579d968b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579d968d10"/>
        <function-ref name="isState" scoped="" ref="0x7f579d967020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579d9671b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f579d967340"/>
        <function-ref name="forceState" scoped="" ref="0x7f579d9674d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f579d966d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f579d966d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579d965180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579d965310"/>
        <function-ref name="start" scoped="" ref="0x7f579d9654a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579d965630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d96a980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d96a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d96ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f579d9622d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f579d9622d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f579d962650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f579d9627e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f579d962970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f579d962b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f579d964580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f579d964580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f579d964900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f579d964a90"/>
        <function-ref name="isState" scoped="" ref="0x7f579d964c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f579d964db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f579d963020"/>
        <function-ref name="forceState" scoped="" ref="0x7f579d9631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579d955d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579d955d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d953180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d953310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9534a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d953630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d958350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d958350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9586d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d958860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9589f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d958b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d958d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f579d955020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f579d955020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f579d9553a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f579d955530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f579d9556c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f579d955850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f579d9559e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f579d94f1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579d94f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579d94f540"/>
        <function-ref name="noAck" scoped="" ref="0x7f579d94f6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579d94f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f579d952410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f579d952410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f579d952790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f579d952920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f579d952ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f579d952c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f579d952dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579d930690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579d930690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d930a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579d931860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579d931860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d931be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d931d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d930020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d9301b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d930340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f579d92e610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f579d92e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f579d92e990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f579d92eb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f579d92ecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f579d92ee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f579d92c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f579d92c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f579d92c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f579d92c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f579d92c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f579d92c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f579d92c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f579d92cb10"/>
        <function-ref name="sync" scoped="" ref="0x7f579d92cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f579d92b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f579d92b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f579d9328b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f579d9328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579d932c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579d932dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579d931020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579d9311b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f579d931340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579d9314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f579d933ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f579d933ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f579d9320a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f579d92a1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f579d92a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f579d92a570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f579d92a700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f579d92a890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f579d92aa20"/>
        <function-ref name="setCca" scoped="" ref="0x7f579d92abb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f579d92ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579d934a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579d934a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d934e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d933020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d9331b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d933340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d9334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579d938020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579d938020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d9383a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d938530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d9386c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d938850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d9389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f579d936df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f579d936df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d9351c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f579d930ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f579d930ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f579d92f0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f579d92f230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f579d92f3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f579d92f550"/>
        <function-ref name="getPower" scoped="" ref="0x7f579d92f6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f579d92f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f579d92b4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f579d92b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f579d92b950"/>
        <function-ref name="changed" scoped="" ref="0x7f579d92bae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f579d92bc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f579d92be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f579d92fb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f579d92fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f579d92e020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f579d92e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f579d92e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d936210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d936210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d936590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d929d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d929d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d9280e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d928270"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d928400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d928590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d928720"/>
        <function-ref name="get" scoped="" ref="0x7f579d9288b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d928a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d9271b0"/>
        <function-ref name="set" scoped="" ref="0x7f579d928bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d928d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d927020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579d935470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579d935470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579d9357f0"/>
        <function-ref name="source" scoped="" ref="0x7f579d935980"/>
        <function-ref name="address" scoped="" ref="0x7f579d935b10"/>
        <function-ref name="destination" scoped="" ref="0x7f579d935ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f579d935e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579d934020"/>
        <function-ref name="type" scoped="" ref="0x7f579d9341b0"/>
        <function-ref name="setType" scoped="" ref="0x7f579d934340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579d9344d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579d934660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579d9347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f579d9290f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f579d9290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d929470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d929600"/>
        <function-ref name="request" scoped="" ref="0x7f579d929790"/>
        <function-ref name="granted" scoped="" ref="0x7f579d929920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d929ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579d8a05c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579d8a05c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579d8a0940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579d8a0ad0"/>
        <function-ref name="start" scoped="" ref="0x7f579d8a0c60"/>
        <function-ref name="stop" scoped="" ref="0x7f579d8a0df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579d89d600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579d89d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d89d980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d89db10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d89dca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d89de30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d89c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579d89ce10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579d89ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d89a1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d89a350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d89a4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d89a670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d89a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d89c800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d89c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d89cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d898b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d898b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d897020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d8971b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d897340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d8974d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d897660"/>
        <function-ref name="get" scoped="" ref="0x7f579d8977f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d897980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d896020"/>
        <function-ref name="set" scoped="" ref="0x7f579d897b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d897ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d897e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f579d8981a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579d8981a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579d898520"/>
        <function-ref name="noAck" scoped="" ref="0x7f579d8986b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579d898840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579d89aab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579d89aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579d89ae30"/>
        <function-ref name="source" scoped="" ref="0x7f579d899020"/>
        <function-ref name="address" scoped="" ref="0x7f579d8991b0"/>
        <function-ref name="destination" scoped="" ref="0x7f579d899340"/>
        <function-ref name="setSource" scoped="" ref="0x7f579d8994d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579d899660"/>
        <function-ref name="type" scoped="" ref="0x7f579d8997f0"/>
        <function-ref name="setType" scoped="" ref="0x7f579d899980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579d899b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579d899ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579d899e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f579d839120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f579d839120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d8394a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d839630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d8397c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d839950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d839ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f579d839d70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f579d839d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d838180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579d83e110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579d83e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d83e4b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d83e640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d83e7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d83e960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d83eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579d83ca40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579d83ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d83cdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d83a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d83a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d83a340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d83a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d83ee70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d83ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d83d240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f579d83a720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f579d83a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579d83aaa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f579d83ac30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579d83adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579d83d490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579d83d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579d83d810"/>
        <function-ref name="source" scoped="" ref="0x7f579d83d9a0"/>
        <function-ref name="address" scoped="" ref="0x7f579d83db30"/>
        <function-ref name="destination" scoped="" ref="0x7f579d83dcc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f579d83de50"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579d83c020"/>
        <function-ref name="type" scoped="" ref="0x7f579d83c1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f579d83c340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579d83c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579d83c660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579d83c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579d8348d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579d8348d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579d834c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579d834de0"/>
        <function-ref name="start" scoped="" ref="0x7f579d833020"/>
        <function-ref name="stop" scoped="" ref="0x7f579d8331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d832480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d832480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f579ecea960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d832800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d832990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d832b20"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d832cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d832e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d834280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d834280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d834600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d833940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d833940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f579ecea960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d833cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d830dc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d830dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d82e180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d82e310"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d82e4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d82e630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d82e7c0"/>
        <function-ref name="get" scoped="" ref="0x7f579d82e950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d82eae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d82a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579d82ec70"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d82ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d82a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f579d8304a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f579d8304a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f579ecea960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f579d830820"/>
        <function-ref name="offset" scoped="" ref="0x7f579d8309b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f579d830b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f579d8272f0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f579d8272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f579d827670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f579d827800"/>
        <function-ref name="start" scoped="" ref="0x7f579d827990"/>
        <function-ref name="stop" scoped="" ref="0x7f579d827b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f579d7c0e40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f579d7c0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d7bf1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d7bf370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f579d815060" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f579d815060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579d8153e0"/>
        <function-ref name="stop" scoped="" ref="0x7f579d815570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f579d7f7d10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f579d7f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d7f60e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d7f6270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579d82ac70" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579d82ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579d827020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f579d812c50" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f579d812c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f579d814020"/>
        <function-ref name="flush" scoped="" ref="0x7f579d8141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f579d7c2400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f579d7c2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d7c2780"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d7c2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f579d8178e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f579d8178e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f579d817c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f579d817df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f579d81c020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f579d81c1b0"/>
        <function-ref name="putData" scoped="" ref="0x7f579d81c340"/>
        <function-ref name="putDone" scoped="" ref="0x7f579d81c4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f579d81c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d81c8e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d81c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d81cc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d81cdf0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d81b020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d81b1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d81b340"/>
        <function-ref name="get" scoped="" ref="0x7f579d81b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d81b660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d81bca0"/>
        <function-ref name="set" scoped="" ref="0x7f579d81b7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d81b980"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d81bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f579d7bb0c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f579d7bb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d7bb440"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d7bb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f579d820130" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f579d820130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f579d8204b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f579d820640"/>
        <function-ref name="startSend" scoped="" ref="0x7f579d8207d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f579d820960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f579d81d5c0" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f579d81d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f579d81d940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f579d81dad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f579d81dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f579d6f1c50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f579d6f1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d6f0020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d6f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d6f6830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d6f6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f579ecea960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d6f6bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d6f6d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d6f4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d6f41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d6f4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f579d6f0480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f579d6f0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d6f0800"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d6f0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d6f6110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d6f6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f579ecea960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d6f64b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f579d6f4760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f579d6f4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f579ecea960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f579d6f4b00"/>
        <function-ref name="offset" scoped="" ref="0x7f579d6f4c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f579d6f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d6f2590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d6f2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d6f2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d6f2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d6f2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d6f2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d6f1020"/>
        <function-ref name="get" scoped="" ref="0x7f579d6f11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d6f1340"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d6f1980"/>
        <function-ref name="set" scoped="" ref="0x7f579d6f1660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d6f14d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d6f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f579d6f39d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f579d6f39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f579d6f3d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f579d6f2020"/>
        <function-ref name="startSend" scoped="" ref="0x7f579d6f21b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f579d6f2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f579d6f30e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f579d6f30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f579d6f3460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f579d6f35f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f579d6f3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f579d6e0d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f579d6e0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d6ea0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f579d6ea270"/>
        <function-ref name="receive" scoped="" ref="0x7f579d6ea400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f579d6ea590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f579d6ea720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f579d6ea8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d6eaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f579d6eeb60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f579d6eeb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f579d6eb020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f579d6eb1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f579d6eb340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f579d6eb4d0"/>
        <function-ref name="putData" scoped="" ref="0x7f579d6eb660"/>
        <function-ref name="putDone" scoped="" ref="0x7f579d6eb7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f579d6eb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d6eacc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d6eacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d6de0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d6de230"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d6de3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d6de550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d6de6e0"/>
        <function-ref name="get" scoped="" ref="0x7f579d6de870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d6dea00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d6dd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f579d6deb90"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d6ded20"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d6dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f579d6c1020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f579d6c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d6c13a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f579d6c1530"/>
        <function-ref name="receive" scoped="" ref="0x7f579d6c16c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f579d6c1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f579d6c4890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f579d6c4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d6c4c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f579d6c4da0"/>
        <function-ref name="receive" scoped="" ref="0x7f579d6c2020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f579d6c21b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f579d6c2340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f579d6c24d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d6c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579d6c4080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579d6c4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579d6c4400"/>
        <function-ref name="stop" scoped="" ref="0x7f579d6c4590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579d530c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d530c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579d52e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579d52e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f579d52d440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f579d52d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d52d7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f579d52d950"/>
        <function-ref name="receive" scoped="" ref="0x7f579d52dae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f579d52dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f579d52c020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d52c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579d52c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f579d52e440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f579d52e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d52e7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f579d52e950"/>
        <function-ref name="receive" scoped="" ref="0x7f579d52eae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f579d52ec70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f579d52ee00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f579d52d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d52d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d530020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d530020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d5303a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d530530"/>
        <function-ref name="request" scoped="" ref="0x7f579d5306c0"/>
        <function-ref name="granted" scoped="" ref="0x7f579d530850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d5309e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f579d6b1a30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d6b1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579d6b1db0"/>
        <function-ref name="configure" scoped="" ref="0x7f579d6b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f579d6ad020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f579d6ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d6ad3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f579d6ad530"/>
        <function-ref name="receive" scoped="" ref="0x7f579d6ad6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f579d6ad850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f579d6ab450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d6ab450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579d6ab7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f579d6b0860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f579d6b0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d6b0be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f579d6b0d70"/>
        <function-ref name="receive" scoped="" ref="0x7f579d6ae020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f579d6ae1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f579d6ae340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f579d6ae4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d6ae660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f579d6ac1d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f579d6ac1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d6ac550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d6ac6e0"/>
        <function-ref name="request" scoped="" ref="0x7f579d6ac870"/>
        <function-ref name="granted" scoped="" ref="0x7f579d6aca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d6acb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d6b27a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d6b27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d6b2b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d6b2cb0"/>
        <function-ref name="request" scoped="" ref="0x7f579d6b2e40"/>
        <function-ref name="granted" scoped="" ref="0x7f579d6b1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d6b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f579d6a91d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579d6a91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d6a9550"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d6a96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f579d63edc0" loc="47:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d63edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579d63d180"/>
        <function-ref name="configure" scoped="" ref="0x7f579d63d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f579d63c890" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f579d63c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d63cc30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f579d63cdc0"/>
        <function-ref name="receive" scoped="" ref="0x7f579d63b020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f579d63b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f579d63a3e0" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d63a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579d63a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f579d63aa50" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f579d63aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579d63add0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579d639020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579d6391b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579d639340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579d6394d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579d639660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579d6397f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579d639980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579d639b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579d639ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579d639e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579d638020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579d6381b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579d638440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579d6385d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579d638760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579d6388f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f579d638a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579d638c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579d638da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579d637020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579d6371b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579d637340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579d6374d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579d637660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579d6379f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579d637b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579d637d10"/>
        <function-ref name="tx" scoped="" ref="0x7f579d636020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579d6361b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579d636340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579d6364d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579d636660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579d6367f0"/>
        <function-ref name="rx" scoped="" ref="0x7f579d636980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579d636b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579d636ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579d636e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579d635020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579d6351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f579d63d6d0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f579d63d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d63da70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f579d63dc00"/>
        <function-ref name="receive" scoped="" ref="0x7f579d63dd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f579d63c020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f579d63c1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f579d63c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d63c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f579d634020" loc="55:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579d634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579d634e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579d632800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579d632340"/>
        <function-ref name="overflow" scoped="" ref="0x7f579d632cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f579d63b5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f579d63b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d63b950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d63bae0"/>
        <function-ref name="request" scoped="" ref="0x7f579d63bc70"/>
        <function-ref name="granted" scoped="" ref="0x7f579d63be00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d63a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d63e020" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d63e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d63e3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d63e550"/>
        <function-ref name="request" scoped="" ref="0x7f579d63e6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f579d63e870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d63ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f579d6355b0" loc="54:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f579d6355b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d635950"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d635ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579d631120" loc="56:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579d631120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579d6314a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579d631630"/>
        <function-ref name="led1On" scoped="" ref="0x7f579d6317c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579d631950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579d631ae0"/>
        <function-ref name="get" scoped="" ref="0x7f579d631c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579d631e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f579d6304d0"/>
        <function-ref name="set" scoped="" ref="0x7f579d6301b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579d630020"/>
        <function-ref name="led0On" scoped="" ref="0x7f579d630340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f579d622860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579d622860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d622be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d622d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f579d625500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d625500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579d625880"/>
        <function-ref name="stop" scoped="" ref="0x7f579d625a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f579d625d30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579d625d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579d6280e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579d628270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579d628400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579d628590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579d628720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579d6288b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579d628a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579d628bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579d628d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579d627020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579d6271b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579d627340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579d6274d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579d627760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579d6278f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579d627a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579d627c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f579d627da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579d624020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579d6241b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579d624340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579d6244d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579d624660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579d6247f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579d624980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579d624d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579d623020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579d6231b0"/>
        <function-ref name="tx" scoped="" ref="0x7f579d623340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579d6234d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579d623660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579d6237f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579d623980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579d623b10"/>
        <function-ref name="rx" scoped="" ref="0x7f579d623ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579d623e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579d622020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579d6221b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579d622340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579d6224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f579d613890" loc="66:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f579d613890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579d613c10"/>
        <function-ref name="isInput" scoped="" ref="0x7f579d613da0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579d612020"/>
        <function-ref name="clr" scoped="" ref="0x7f579d611c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579d612340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579d6124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579d612660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579d6127f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579d612980"/>
        <function-ref name="get" scoped="" ref="0x7f579d612b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579d612ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579d612e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579d611020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579d6112b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579d611440"/>
        <function-ref name="set" scoped="" ref="0x7f579d6115d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579d611760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579d6121b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579d6118f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579d611a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f579d618020" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f579d618020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d6183a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d618530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f579d610020" loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f579d610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579d6103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579d610530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579d6106c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579d60e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579d6109e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579d610b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579d610d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579d60f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579d60f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f579d60f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579d60f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579d60f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579d60f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579d60fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579d60fc10"/>
        <function-ref name="set" scoped="" ref="0x7f579d60fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579d60e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579d610850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579d60e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579d60e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f579d60e890" loc="68:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f579d60e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579d60ec10"/>
        <function-ref name="isInput" scoped="" ref="0x7f579d60eda0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579d60d020"/>
        <function-ref name="clr" scoped="" ref="0x7f579d60cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579d60d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579d60d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579d60d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579d60d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579d60d980"/>
        <function-ref name="get" scoped="" ref="0x7f579d60db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579d60dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579d60de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579d60c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579d60c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579d60c440"/>
        <function-ref name="set" scoped="" ref="0x7f579d60c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579d60c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579d60d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579d60c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579d60ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f579d61e3c0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f579d61e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579d61e740"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579d61e8d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579d61ea60"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579d61ebf0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579d61ed80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579d61d020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579d61d1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579d61d340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579d61d4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579d61d660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579d61d7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579d61d980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579d61db10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579d61dda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579d61c020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579d61c1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579d61c340"/>
        <function-ref name="isUart" scoped="" ref="0x7f579d61c4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579d61c660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579d61c7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579d61c980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579d61cb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579d61cca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579d61ce30"/>
        <function-ref name="getMode" scoped="" ref="0x7f579d61b020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579d61b3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579d61b540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579d61b6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f579d61b860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579d61b9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579d61bb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579d61bd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579d61a020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579d61a1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f579d61a340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579d61a4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579d61a660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579d61a7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579d61a980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579d61ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f579d6219c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d6219c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579d621d40"/>
        <function-ref name="stop" scoped="" ref="0x7f579d61e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f579d615020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f579d615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579d6153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f579d615530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579d6156c0"/>
        <function-ref name="clr" scoped="" ref="0x7f579d6134d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f579d6159e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579d615b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579d615d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579d614020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579d6141b0"/>
        <function-ref name="get" scoped="" ref="0x7f579d614340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579d6144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579d614660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579d6147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579d614a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579d614c10"/>
        <function-ref name="set" scoped="" ref="0x7f579d614da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579d613020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579d615850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579d6131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579d613340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f579d6188f0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f579d6188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f579d618c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f579d618e00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f579d617020"/>
        <function-ref name="clr" scoped="" ref="0x7f579d616c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f579d617340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f579d6174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f579d617660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f579d6177f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f579d617980"/>
        <function-ref name="get" scoped="" ref="0x7f579d617b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f579d617ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f579d617e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f579d616020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f579d6162b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f579d616440"/>
        <function-ref name="set" scoped="" ref="0x7f579d6165d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f579d616760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f579d6171b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f579d6168f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f579d616a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f579d58f7c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f579d58f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec66c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f579ec65020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f579d58c620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f579d58b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f579d58cae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f579d58b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579caaba90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579caaba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579caabe10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579caa9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579caa4be0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579caa4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579caa3020"/>
        <function-ref name="configure" scoped="" ref="0x7f579caa31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f579caa4440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f579caa4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579caa47c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f579caa4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579caace00" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579caace00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579caab1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579caab350"/>
        <function-ref name="request" scoped="" ref="0x7f579caab4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f579caab670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579caab800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f579caa9a50" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f579caa9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f579caa9dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f579caa8020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f579caa81b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f579caa8340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f579caa84d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f579caa8660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f579caa87f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f579caa8980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f579caa8b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f579caa8ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f579caa8e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f579caa7020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f579caa71b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f579caa7440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f579caa75d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f579caa7760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f579caa78f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f579caa7a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f579caa7c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f579caa7da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f579caa6020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f579caa61b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f579caa6340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f579caa64d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f579caa6660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f579caa69f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f579caa6b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f579caa6d10"/>
        <function-ref name="tx" scoped="" ref="0x7f579caa5020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f579caa51b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f579caa5340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f579caa54d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f579caa5660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f579caa57f0"/>
        <function-ref name="rx" scoped="" ref="0x7f579caa5980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f579caa5b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f579caa5ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f579caa5e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f579caa4020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f579caa41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579caa92b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579caa92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579caa9630"/>
        <function-ref name="userId" scoped="" ref="0x7f579caa97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579d572510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d572510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579d572890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579d572a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579d571af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d571af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579d571e70"/>
        <function-ref name="configure" scoped="" ref="0x7f579d56f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f579d574510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f579d574510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d574890"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d574a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d573280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d573280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d573600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d573790"/>
        <function-ref name="request" scoped="" ref="0x7f579d573920"/>
        <function-ref name="granted" scoped="" ref="0x7f579d573ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d573c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579d572d20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d572d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579d5710e0"/>
        <function-ref name="userId" scoped="" ref="0x7f579d571270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f579d56c120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d56c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579d56c4a0"/>
        <function-ref name="userId" scoped="" ref="0x7f579d56c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f579d56e230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f579d56e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d56e5d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d56e760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f579d56dad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f579d56dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579d56de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f579d56eb60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f579d56eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f579d56d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f579d56d2f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f579d56d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f579d56d670"/>
        <function-ref name="txDone" scoped="" ref="0x7f579d56d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579d569bd0" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579d569bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579d568020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579d5681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579d566950" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579d566950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579d566cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f579d566e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f579d568400" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579d568400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d568780"/>
        <function-ref name="requested" scoped="" ref="0x7f579d568910"/>
        <function-ref name="granted" scoped="" ref="0x7f579d568aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d568c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579d568dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579d56ae30" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d56ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d569210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d5693a0"/>
        <function-ref name="request" scoped="" ref="0x7f579d569530"/>
        <function-ref name="granted" scoped="" ref="0x7f579d5696c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d569850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f579d5630f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579d5630f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579d563470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579d566060" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d566060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579d5663e0"/>
        <function-ref name="userId" scoped="" ref="0x7f579d566570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f579ca3f020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f579ca3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f579ca3f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f579ca3f630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f579ca3f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f579ca3f9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f579ca3fb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f579ca3fcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f579ca3fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f579ca3b6c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f579ca3b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f579ca3ba60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579ca3bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f579ca399d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f579ca399d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f579ca39d70"/>
        <function-ref name="configure" scoped="" ref="0x7f579ca38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f579ca382b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f579ca382b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f579ca38630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f579ca387c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f579ca38950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f579ca38ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f579ca3be40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579ca3be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579ca3a1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f579ca3a370"/>
        <function-ref name="granted" scoped="" ref="0x7f579ca3a500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579ca3a690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579ca3a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f579ca38d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f579ca38d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f579ca360e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f579ca36270"/>
        <function-ref name="led1On" scoped="" ref="0x7f579ca36400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f579ca36590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f579ca36720"/>
        <function-ref name="get" scoped="" ref="0x7f579ca368b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f579ca36a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f579ca351b0"/>
        <function-ref name="set" scoped="" ref="0x7f579ca36d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f579ca36bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f579ca35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f579ca3c850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579ca3c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579ca3cbf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579ca3cd80"/>
        <function-ref name="request" scoped="" ref="0x7f579ca3b020"/>
        <function-ref name="granted" scoped="" ref="0x7f579ca3b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579ca3b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f579ca392d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f579ca392d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579ca39650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f579ca3aa70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579ca3aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579ca3adf0"/>
        <function-ref name="userId" scoped="" ref="0x7f579ca39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f579ca35480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f579ca35480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579ca35800"/>
        <function-ref name="runTask" scoped="" ref="0x7f579ca35990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f579d55f780" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f579d55f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f579d55fb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f579d55fd50" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579d55fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d549100"/>
        <function-ref name="requested" scoped="" ref="0x7f579d549290"/>
        <function-ref name="granted" scoped="" ref="0x7f579d549420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d5495b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579d549740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f579d55f020" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579d55f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579d55f3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f579d55f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f579d549990" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579d549990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579d549d10"/>
        <function-ref name="userId" scoped="" ref="0x7f579d547020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f579ca01e00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f579ca01e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f579ca001c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f579ca00410" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f579ca00410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579ca00790"/>
        <function-ref name="requested" scoped="" ref="0x7f579ca00920"/>
        <function-ref name="granted" scoped="" ref="0x7f579ca00ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579ca00c40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f579ca00dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f579ca016a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f579ca016a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579ca01a20"/>
        <function-ref name="stop" scoped="" ref="0x7f579ca01bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f579c9ff060" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f579c9ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f579c9ff3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f579c9ff570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f579d5288e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f579d5288e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f579d528c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f579d527020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f579d527020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f579d5273a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f579d527530"/>
        <function-ref name="request" scoped="" ref="0x7f579d5276c0"/>
        <function-ref name="granted" scoped="" ref="0x7f579d527850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f579d5279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f579d528080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f579d528080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f579d528400"/>
        <function-ref name="stop" scoped="" ref="0x7f579d528590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f579d516a30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f579d516a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f579d516db0"/>
        <function-ref name="offset" scoped="" ref="0x7f579d512020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f579d5121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579d503060" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerTramaTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579d503060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d500630"/>
        <function-ref name="fired" scoped="" ref="0x7f579d502ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579d501920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579d5014a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f579d4fe020"/>
        <function-ref name="gett0" scoped="" ref="0x7f579d500ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d501020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579d503c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579d500020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579d502170"/>
        <function-ref name="stop" scoped="" ref="0x7f579d502640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f579d4fdb00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f579d4fdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f579ec664d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f579ec66840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f579d4f9110"/>
        <function-ref name="fired" scoped="" ref="0x7f579d4fb5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f579d4fa4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f579d4fa020"/>
        <function-ref name="getdt" scoped="" ref="0x7f579d4f9a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f579d4f9590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f579d4fba30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f579d4fc750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f579d4faab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f579d4fcc20"/>
        <function-ref name="stop" scoped="" ref="0x7f579d4fb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579d46b020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579d46b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d46b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d46b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d46b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d46b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d46b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579d46bc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579d46bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d46a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d46a1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d46a340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d46a4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d46a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579d46a8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579d46a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579d46ac30"/>
        <function-ref name="source" scoped="" ref="0x7f579d46adc0"/>
        <function-ref name="address" scoped="" ref="0x7f579d469020"/>
        <function-ref name="destination" scoped="" ref="0x7f579d4691b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f579d469340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579d4694d0"/>
        <function-ref name="type" scoped="" ref="0x7f579d469660"/>
        <function-ref name="setType" scoped="" ref="0x7f579d4697f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579d469980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579d469b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579d469ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f579d468020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f579d468020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579d4683a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f579d468530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579d4686c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579c9ec920" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579c9ec920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579c9ecca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579c9ece30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579c9eb020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579c9eb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579c9eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579c9eb590" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579c9eb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579c9eb910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579c9ebaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579c9ebc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579c9ebdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579c9ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579c9ea270" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579c9ea270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579c9ea5f0"/>
        <function-ref name="source" scoped="" ref="0x7f579c9ea780"/>
        <function-ref name="address" scoped="" ref="0x7f579c9ea910"/>
        <function-ref name="destination" scoped="" ref="0x7f579c9eaaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f579c9eac30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579c9eadc0"/>
        <function-ref name="type" scoped="" ref="0x7f579c9e9020"/>
        <function-ref name="setType" scoped="" ref="0x7f579c9e91b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579c9e9340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579c9e94d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579c9e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f579c9e98f0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f579c9e98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f579c9e9c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f579c9e9e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f579c9e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f579c9df390" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579c9df390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579c9df710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579c9df8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579c9dfa30"/>
        <function-ref name="cancel" scoped="" ref="0x7f579c9dfbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579c9dfd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f579c9de060" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579c9de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579c9de3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579c9de570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579c9de700"/>
        <function-ref name="cancel" scoped="" ref="0x7f579c9de890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579c9dea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f579c9dec70" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579c9dec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579c9dc020"/>
        <function-ref name="source" scoped="" ref="0x7f579c9dc1b0"/>
        <function-ref name="address" scoped="" ref="0x7f579c9dc340"/>
        <function-ref name="destination" scoped="" ref="0x7f579c9dc4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f579c9dc660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579c9dc7f0"/>
        <function-ref name="type" scoped="" ref="0x7f579c9dc980"/>
        <function-ref name="setType" scoped="" ref="0x7f579c9dcb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579c9dcca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579c9dce30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579c9db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d4d2930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d4d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d4d2cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d4d2e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d4cf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d4cf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d4cf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f579d480400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f579d480400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d4807a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d480930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d480ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d480c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d480de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f579d482df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f579d482df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f579d4811c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d481350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d4814e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f579d481670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f579d481800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f579d47d720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579d47d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d47daa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d47dc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d47ddc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d47c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d47c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f579d481b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f579d481b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f579d480020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f579d47c480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f579d47c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d47c800"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d47c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f579d47cc60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f579d47cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f579d47b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f579d47b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f579d47e060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579d47e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579d47e3e0"/>
        <function-ref name="source" scoped="" ref="0x7f579d47e570"/>
        <function-ref name="address" scoped="" ref="0x7f579d47e700"/>
        <function-ref name="destination" scoped="" ref="0x7f579d47e890"/>
        <function-ref name="setSource" scoped="" ref="0x7f579d47ea20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579d47ebb0"/>
        <function-ref name="type" scoped="" ref="0x7f579d47ed40"/>
        <function-ref name="setType" scoped="" ref="0x7f579d47d020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579d47d1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579d47d340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579d47d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f579d45e020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f579d45e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f579d45e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f579d45e530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f579d45e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f579d45e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f579d45e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f579d464910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f579d464910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f579d464c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f579d45ec30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f579d45ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f579d45d020"/>
        <function-ref name="source" scoped="" ref="0x7f579d45d1b0"/>
        <function-ref name="address" scoped="" ref="0x7f579d45d340"/>
        <function-ref name="destination" scoped="" ref="0x7f579d45d4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f579d45d660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f579d45d7f0"/>
        <function-ref name="type" scoped="" ref="0x7f579d45d980"/>
        <function-ref name="setType" scoped="" ref="0x7f579d45db10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f579d45dca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f579d45de30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f579d45c020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f579ed97c60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f579ed98770" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f579ed8cd50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f579ed88c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f579ed88940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f579ed8d030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f579ed8e870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f579ed8ab40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f579ed8a550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f579ed8a8b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f579ed88020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f579ed89cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f579ed895a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f579ed89320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f579ed8c5b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f579ed8e0e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f579ed8ddd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f579ed8d7e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f579ed8db40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f579ed4ab40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f579ed4dde0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f579ed4a420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f579ed4d700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f579ed4b5a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f579ed508f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f579ed4d020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f579ed4bcc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f579eeb87e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f579f180700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f579eddea80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f579eddc1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f579edde2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f579ef56020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f579f8f6e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f579f23ee20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f579f23e610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f579f232770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f579f230020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f579ecdb5c0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f579ecdb340" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f579ecdaab0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f579ecda830" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f579ecdc920" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f579ecdbe10" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f579ec88060" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
              <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec8a6e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f579ec8aa30" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579ec8ad60" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f579ec85110" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ecd7e20" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f579ec832a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec83020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f579ec81620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec81020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579ec81350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f579ec806d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f579ec82730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec82170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579ec824a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f579ec932c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f579ec957e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f579ec95b60" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579ec93020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f579ec8f970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec8f370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579ec8f6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f579ec8ea60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f579ec92630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec923b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f579ec90b80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579ec905a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f579ec908f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579ec65dd0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579ec65dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f579ec5dc10" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f579ec61420" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f579ec5f2b0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f579ec60bd0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f579ec5f020" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f579ec60420" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f579ec5cc60" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f579ec5c3e0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f579ec61c00" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f579ec64970" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f579ec646f0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f579ec5d2b0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f579ec5fc50" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f579ec5d020" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f579ec624d0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f579ec62250" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f579ec62cd0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f579ec4d570" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f579ec4dd20" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f579ec4b540" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f579ec4a4d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f579ec49c20" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f579ec48480" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f579ec4bcd0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f579ec46020" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f579ec48d70" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f579ec4edb0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f579ec4acb0" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f579ec49470" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f579ec6f2a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec6f020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f579ec79d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec79ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f579ec7c1f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f579ec7ccb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec7ca30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f579ec767a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec761c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f579ec76510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f579ec782b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec7ac40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f579ec78020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f579ec73bf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec73970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f579ec75020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec719a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f579ec71cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f579ececde0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f579ec749f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec74770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f579ec6e730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f579ec6e150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f579ec6e4a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f579ec6d580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f579ebb7270" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f579ebb79a0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f579ebb8420" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f579ebb6820" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f579ebb8b20" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f579ebb60e0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f579ebba610" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f579ebbace0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f579eb8c070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f579eb8c7c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f579eb872e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f579eb87060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f579eb86d30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f579eb8f870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f579eb8b780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f579eb84520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f579eb83020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f579eb84d70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f579eb8b020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f579eb8d870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f579eb83910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f579eb88020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f579eb865f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f579eb8d070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f579eb87b80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f579eb929c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f579eb89020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f579eb887c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f579eb897e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f579eb8f120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f579e8dd020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579e8dd020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f579e8dd260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e8dd260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f579e8db0b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e8dd260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8dce00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f579e8d92a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8d9020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f579e8dde20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8ddba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f579e8d8610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e8dd260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8d8020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f579e8d8380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e8dd260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f579e8cc680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8cc060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f579e8cc3f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f579e8cb850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8cb5d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f579e8cd810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f579e8d0d60" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f579e8d0ae0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f579e8e22e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8e2060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f579e8e1510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8e1290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f579e8e0680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8e0400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f579e8a2520" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8a22a0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f579e8a5780" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8a5500" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f579e8a7e70" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f579e8a7bf0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f579e8a7350" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f579e8a70d0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f579e8a68d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f579e8a6650" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f579e8a3690" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8a3410" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f579e897e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f579e897850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f579e897bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f579e8b1120" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e8b2ae0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f579e8b2e30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f579e8ad710" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e8ad110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f579e8ad480" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f579e8b1c00" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f579f8ea110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e8b1980" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f579e8ae620" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e8ae3a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f579e8b22e0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e8b2060" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f579e8b0760" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e8b04e0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f579e89b6c0" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e89b440" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f579e89e790" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e89e170" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f579e89e500" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f579e89c680" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e89c400" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f579e89db90" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e89d570" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f579e89d900" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f579e8996c0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e899440" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f579e8aa2a0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8aa020" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f579e8892b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e890c40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579e889020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f579e883890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e883290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579e8835c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f579e8849b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f579e8885f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e888370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f579e886ac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e8864e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f579e886830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f579e88c120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f579e88e120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f579e88f770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f579e88e910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f579e88cb70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f579e8633a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e868dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f579e863110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f579e8626a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f579e860e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f579e860060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f579e8608a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579e860bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f579e861840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f579e861260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f579e8615b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f579e863e30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f579e863bb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f579e85b0e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f579e865870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f579e86ea40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f579e866270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f579e8552e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e855020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f579e857710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f579ecd5de0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f579ecd37d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e857410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f579e854620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f579ecd13b0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f579ecd0c60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579e854320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f579e86c6e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f579e869840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f579e869070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f579e870e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f579e86de80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f579e86a020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f579e86a840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f579e86d6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f579e84fd00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f579e850350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f579e84f530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f579e84f2b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f579e850ac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f579e851020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f579e859c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f579e851ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f579e851850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f579e7f3870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f579e7f3290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f579e7f35e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f579e7f41f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f579e7f5880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f579e7f5210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f579e7f55f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f579e7fbc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f579e7fb990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f579e7f4a70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f579e7f8730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f579e7f84b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f579e7fad30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f579e7faab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f579e7f1ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f579e7f69c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f579e7f6740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f579e7f12b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f579e7f94d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f579e8cfac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f579e8c6240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f579e7f9cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f579e7fb1f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f579e7fa390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f579e7f6020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f579e7ef4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f579e7ef4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f579e7efd60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f579e7ecac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f579e7ef4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f579e7ec510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f579e7ec830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f579e7ef4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f579e7c2c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e7c2990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f579e7c1710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e7c1490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f579e7e2c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f579e8cfac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f579e8c6240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579e7de020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579e7de020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f579e7de260" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f579e7dae00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f579e7dce40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f579e7da460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f579e7dbe60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f579e7da1d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f579e7db640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f579e7d9620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f579e7dedc0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f579e7deb40" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e7de260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f579e7dc680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f579e7cb560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f579e7c94f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f579e7cbd40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f579e7cccd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f579e7cc6f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f579eceb210"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f579e7cca40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f579eceb5f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f579e7bee40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f579e7c7e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f579e7c7020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f579e7c7890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e7c7be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f579e7c4610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f579e7c6770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f579e7c4020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e7c4370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f579e7cec30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f579e7ce470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f579e7cfce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f579e7cf420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f579e703560" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f579e702020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f579e703c60" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f579e702a00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f579e702780" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f579e701410" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f579e701190" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f579e701b00" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f579e7113e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f579e70fc60" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f579e70f9e0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f579e711b10" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f579e714650" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f579e70f270" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f579e713570" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f579e712cc0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f579e714de0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f579e713c80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f579e7125c0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f579e712340" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f579e70e6a0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f579e70e420" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f579e708bc0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f579e7085f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f579e708930" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f579e715b60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f579ed41550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f579ed3f020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f579e7075c0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f579e7064d0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f579e709d30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f579e707d00" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f579e70b350" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f579e70bae0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f579e7095a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f579ed41550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f579ed3f020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f579e709320" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f579ed41550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f579ed3f020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f579e6ee020" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f579e6ec6a0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f579e6ec420" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f579e6ea2a0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f579e6ea020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f579e6edc10" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f579e6ed350" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f579e6ee9d0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f579e6ee750" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f579e6c11f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579e571e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579e571e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f579e56c070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e56c070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f579e56c990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579e56c070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f579e56bad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f579e56b270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f579e569270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f579e49e190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f579e49d350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f579e49eb30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f579e49e8b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f579e4a18f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f579e4745a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f579e470020" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f579e475dc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f579e4716d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f579e471450" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f579e472d30" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f579e475620" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f579e4725d0" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f579e474da0" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f579e31e810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f579e31d0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f579e31d920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f579e2f6420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e2f7e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e2f6190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f579e2f1700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e2f2d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e2f1110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f579e2f1460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f579e2f2020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e2f3970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e2f3cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f579e2f7020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f579ecd6020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e2f89d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e2f8d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f579e2f4b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e2f4250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f579e2f45a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f579e2f48f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f579e2d5a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f579e2d50d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f579e2d5460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579e2d57a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f579e2d1020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f579e2d42a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f579e2d4630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579e2d4970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f579e2d4ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f579e2d88f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f579e2d8670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f579e1f7b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f579e1f44e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f579e1f3aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f579e2292b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f579e22ae00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f579e1f26f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e1f2470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f579e1f1b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e1f18b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f579e1f1020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f579e1ef5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e1ef370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f579e1e5020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f579e1e7750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f579e1de740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e1de4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f579e1e1cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f579e1ba7c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f579e1c52d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f579e1d2020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e245020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f579e245860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f579e1d5cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e245020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f579e245860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f579e1c83b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f579e1cf530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e240020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f579e240860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f579e1cf2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e240020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f579e240860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f579e1bf9e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f579e1bb020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f579e1d1a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e244ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f579e243680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f579e1cfd20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e240020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f579e240860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f579e1cbb90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f579e1cb910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f579e1cb1f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f579e1bf2b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f579e1d12a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e244ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f579e243680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f579e1d1020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e244ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f579e243680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f579e1cd020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f579e1be190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f579e1cda00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f579e1cd780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f579e1c9480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f579e1c9c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f579e1c0420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f579e1c3190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f579e1c6350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f579e1c0b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f579e1c5ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f579e1be8b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f579e1ca390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f579e24bd80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f579e2474d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f579e1bc070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f579e1ba020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f579e1ce700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f579e1ce480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f579e1b82a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e1b8020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f579e1d2800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f579e245020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f579e245860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f579e1c8b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f579e1c4270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f579e1c1ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f579e214b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f579e214730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f579e1c1920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f579e214b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f579e214730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f579e1c3ca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f579e2292b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f579e22ae00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f579e1c3a20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f579e2292b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f579e22ae00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f579e1b8ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f579e1bc860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f579e1caba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f579e1bb780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f579e1c49e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f579e1c6b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f579e151020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f579e12a9d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f579e13c020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f579e130620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f579e1303a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f579e1455b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f579e12ec50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f579e1355e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f579e13d070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f579e13a020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f579e13e020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f579e140d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f579e1414b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f579e138020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f579e12f550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f579e12a270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f579e132c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f579e125350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f579e1219d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f579e143420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f579e139740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f579e1371f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f579e13e8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f579e146350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f579e132460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f579e1321e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f579e14ac00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f579e12e4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f579e129190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f579e124b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f579e121270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f579e12db90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f579e1298c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f579e130db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f579e126390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f579e143b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f579e1347e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f579e1277b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f579e12bac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f579e137de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f579e137b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f579e1222d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f579e133a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f579e12d420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f579e146e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f579e2014a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f579e201080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f579e146b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f579e2014a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f579e201080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f579e139020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f579e142cb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f579e142a30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f579e138980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579e138700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f579e126b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f579e140620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f579e142350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f579e1332a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f579e133020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f579e145ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f579e127020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f579e12b350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f579e12fcc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f579e134020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f579e135d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f579e13a740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f579e13d7b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f579e122a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f579e141e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f579e141bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f579e125b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f579e13c750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f579e124350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f579e07c020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f579e07c880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f579e047dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f579e045020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f579e047530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f579e0466d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f579e045950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f579e043b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f579e0394c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f579e041490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f579e039240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f579e041490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f579e03b420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f579e03a020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f579e041490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f579e03bca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f579e041490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f579e03a930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f579e041490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f579de305e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f579de30360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f579de1cb00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f579de1c1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f579de1c530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579de1c860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f579de1b880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f579de1b2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579de1b5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579de02530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579de02530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f579de02770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579de02770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f579de012e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579de02770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f579de01060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f579de02770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f579dd9e580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f579dd6c9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f579dd6c020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f579dd6c750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f579dd6d7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f579dd6d020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f579dd70d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f579dd813d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579dd81150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f579dd833d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579dd83150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f579dd7f350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579dd7f0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f579dd80390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579dd80110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f579dc0a910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f579dc0a910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f579dc07270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f579f8e9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f579db29e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f579f8ea930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f579db29c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f579f8ea930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f579da445e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f579da445e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f579da412a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f579da445e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f579da41020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f579da445e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f579d82bb00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579d82b4f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f579d82b870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f579d831c70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f579d82db60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f579d82d560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f579ec98940"/>
                <typename><typedef-ref name="message_t" ref="0x7f579ec95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f579d82d8d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f579d812960" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f579d8121f0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f579d824c20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f579d8190e0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f579d818d00" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579d818a80" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f579d819960" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f579d81a7e0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579d81a560" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f579d8175b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f579d818270" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f579d822780" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f579d8210e0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f579d826d80" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f579d826b00" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f579d821c60" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f579d8219e0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f579d81f8f0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f579d81e5b0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f579d81e330" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f579d81d0b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f579d81ee00" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f579d6e8c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f579d6e8670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579d6e89b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f579d6e3a70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f579d6e37f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f579d6e1890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f579d6e12c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579d6e1600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f579d6e4610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f579d6e02c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f579d6df820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579d6dfb60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f579d6e0020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f579d6e3020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f579d6e7610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f579d6e6bd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f579d6e7020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f579f8e9520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f579d6e7370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f579d6bf5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f579d6bf330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f579d6bfdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f579d6becf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f579d6be700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f579d6bea60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f579f8e9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f579d6bcb50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <short>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f579d6b44c0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f579e214b50"/></typename>
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f579e214730"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f579d626860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f579d6250e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f579f23c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f579f2371b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f579d55dce0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f579d4c61f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f579f242090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
