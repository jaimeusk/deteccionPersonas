<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f442363d1c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f44236f6de0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f44236f6de0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f44236f1aa0"/></to>
    </wire>
    <wire loc="19:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f4423637a80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f44221f75c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f44221f75c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f442218c8d0"/></to>
    </wire>
    <wire loc="21:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f44235e9ba0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f44221f4600"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f44221f4600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4422195110"/></to>
    </wire>
    <wire loc="22:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f44235e4bc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f44221f3800"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f44221f3800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4422195e70"/></to>
    </wire>
    <wire loc="23:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f44235db6c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f44221f3e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f44221f3e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4422193a40"/></to>
    </wire>
    <wire loc="24:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f44235cb8c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f44221f2ab0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f44221f2ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4422194490"/></to>
    </wire>
    <wire loc="34:BaseStationC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f44235dc020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4421dc2c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4421dc2c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4421343590"/></to>
    </wire>
    <wire loc="35:BaseStationC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f44235dcc90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4421dc18b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4421dc18b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4421341270"/></to>
    </wire>
    <wire loc="36:BaseStationC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f442363c6b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4423245760"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4423245760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4423214cc0"/></to>
    </wire>
    <wire loc="37:BaseStationC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f44235c8440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4421dc2020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4421dc2020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4421344920"/></to>
    </wire>
    <wire loc="38:BaseStationC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f44235c70c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4421dbc910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4421dbc910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4423241b20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:BaseStationC.nc">
      <from><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f44235c6270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4421e5b060"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4421e5b060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f44223f9610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:BaseStationC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f44235b6650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4421e55b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4421e55b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f44223f9610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f44235a4500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4423515400"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4421396020"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f442218c280"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44222cddd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4422356b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4422375750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4422391080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44224fe3a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44225fe620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44226ecc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f442308fc70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44216ba020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4422bbf020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44231404a0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4423656140"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4423b9d1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4423b9d1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4423742140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4423656b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44236f4280"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44236f4280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44236e34e0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236553a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f44236e53a0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f44236e3b50"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f44236e1220"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f44236e4be0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f44236e4be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44236b2b60"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f44236e1900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44236eea10"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f44236e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44234eddd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44236b2b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4423698820"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f44236a82c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4423695020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4423818c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4423694320"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423741040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f442373c490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f44239759a0"/></to>
    </wire>
    <wire loc="110:BaseStationP.nc">
      <from><interface-ref name="RadioSendTask" scoped="" ref="0x7f4423590610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f4423591720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44234eddd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4423518db0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f442350da90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f4423516590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4423516590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f44232709e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4423513ca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f44234f0830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f44234f0830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f442325a020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f442350c020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f44234eeb50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f44234eeb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4423255630"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f442325fc50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f4423480020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f4423480020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442332a540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f44232592f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f442347e8a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f442347e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423325b90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f44232547a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f442347b020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f442347b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442331f060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f44234d3d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233d9b90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f44234b9e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233a2060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f442342f3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423391060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f44234343e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232f3b90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f442345d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442338c540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f44234b4e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423397b90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f442349a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423360060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f442346c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232fe060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f44234573f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423381060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f44234433e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423314b90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f44234253f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232ed060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f44234ca580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233c9b90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f4423455bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442337c540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f44234c5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233bd540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f44234ac710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423387b90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f44234928a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423350060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f44234798a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423319540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f44234658a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232ed060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f44234d8d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233e3060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f44234bed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233ad6d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f44234a5e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423377b90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f4423460bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423391060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f442343cbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423304b90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f4423428bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232ed060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f442344bbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442332f060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f44234a0e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442336b740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f4423485020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423335b90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f4423471020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423309540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f44234393e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232fe060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f44234523e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442333f060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f44234cf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233d3060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f44234b6710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442339d540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f4423476020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423314b90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f44234b1710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423391060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f44234988a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442335b540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f442346a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232f9540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f442344d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423335b90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f44234dbcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233ee540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f44234c3d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233b8b90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f44234aae50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423381060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f442348f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442334b540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f44234483f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423377b90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f4423441bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442330e060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f4423432bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232ed060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f442348a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442333f060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f4423446bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423370060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f44234d5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233de540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f44234bb710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233a8b90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f44234a2710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423370060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f4423450bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442333a540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f4423437bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232f9540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f442349d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423366b90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f44234838a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442332f060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f442346f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423304b90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f44234cdd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233ce540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f44234748a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442330e060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f44234c8d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233c2060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f44234afe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442338c540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f4423494020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423356b90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f4423467020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232f3b90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f44234da580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233e9b90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f44234c0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44233b2060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f44234a7710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442337c540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f442348d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423345b90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f442343e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423309540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f442342dba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423387b90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f442345abc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423387b90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f44234888a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f442333a540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f442342a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f44232f3b90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f4423423bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423319540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f4423462060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4423397b90"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4423214cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f44231e9020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f44232427f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4423213d20"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4423213d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f442228f020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4423240880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4423210c00"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4423210c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f442228edf0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f442323f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f442320e8f0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f442320e8f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f442228ca80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442323b310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442257a550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442257a550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442256ca80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4423221130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4423202cb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4423202cb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f44231d5080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4423241b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4423210020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4423210020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f442228e210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f442323c080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f442320c990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f442320c990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44231d6020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f442323fc90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f442320f2d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f442320f2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f442228d470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f442322c3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4422576660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4422576660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4422568af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f44231e9020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f44222c1b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231fae30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f442228a8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f44231edd20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f442228bce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f44232059b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f44231d7020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f44231d7020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f44231d5080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f44222c1080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44231d6020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f442257c6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f44231f8020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f44231d5b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f44231d5b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f44222ac020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4423201c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f44231d69d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f44231d69d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f442257ba70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f44222810f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44231e8530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4422289860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f44231e1a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f44231e1a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f442232ac90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4422287690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f44231da840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f44231da840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4422329a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f44222834d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f44227a6b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4422287ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4422571d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422286b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442256d640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4422285610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4423149b80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4423149b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f442313f970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f44222821f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231cf330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231cf330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231ca7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4422281d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f44222c1b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f44222bed90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f442257ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f442256c020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f44222ac020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f44222aa410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f442232ac90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f442231fa20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f44222c1080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f44222b92d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f44231e2690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f442232a5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f442232a5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f442231f370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f442257c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f442256ec50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f44231e8530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f442232cbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f442232cbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44223217b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f44231d9940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f442232b8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f442232b8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f44223204d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f44231e2d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4422327170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4422327170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f442231d020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4422329a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f442231e840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f44222bed90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f44231d1390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f44231d1390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f44231cee70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f44223266b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f442237a220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f442237a220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4422378a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4422379020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f44222af350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f44222af350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f44222acd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f44222acd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f44222c5ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f44222c5ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f44222bf860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f44222bf860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f44231d1e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f44231d1e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f44231cb990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4422326020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f44222c2980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f44222c2980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f44222be690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f44222be690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f442235daa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f442235daa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4422359e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f442235a950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f44231d0b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f44231d0b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f44226037c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f44226037c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f44225fc020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f44231c9640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f442315a720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f442315a720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4423140b10"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f44231c1b00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4423154a60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4423154a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f442313d740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f44231bd610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f44226fc6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f44231bd610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f44226065c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f44226065c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f44225feca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f44226fc6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f44226eb320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f44231b6260"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f44226f9020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f44226f9020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f44226ebbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f44231c0020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f44226f9cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f44226f9cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f44226e9970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f44231b4330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f44231ac920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f44231b33b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f442239ba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f442239ba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4422390a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f44231af020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f442239daa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f442239daa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422bc31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f44231b3b80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f44231a29e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f44231a3a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f44231a4a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f4423147020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f442313cb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f4423130d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f442308c690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f442308c690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f44230865f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f442312d060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4422e3c690"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4422e3c690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e2d020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f442312c380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f4422e38020"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4422e38020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e1d020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f442312b6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f4422e366a0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4422e366a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e12b00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f44231290e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f4422df3400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4422df3400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4422c96680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f44231131d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422831e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4422831e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f44231122b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f442282e7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f442282e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f44231129c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f442282dae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f442282dae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4423114a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f442282fad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f442282fad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4423114120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f442282b160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f442282b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4423119b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f4422823870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4422823870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f44231203d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f4422821880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4422821880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4423120c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f44228200a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f44228200a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f442311b5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4422828e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4422828e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4423117020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4422827670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4422827670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4423124520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f4422813500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4422813500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f442311ca90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f4422814ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4422814ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f44231178e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f4422824e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4422824e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f44231161c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f4422827e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4422827e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4423116a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4422825e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4422825e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f4423111d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44227ffa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f44227ffa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f4423111020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44227d29e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f44227d29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4423121810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f44227a6b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4423138020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f44227a5d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f44227a5d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f442278a310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f4423105820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f4423106940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f442308fc70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4423087d40"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4423087d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44219c2340"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f44230865f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f44219c2b90"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44219c2340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44219bb3d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f44219c2b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f44219b4020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44219bb3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f442199fca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f44219ae780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f44219bbc20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f44219bbc20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f442199e5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f44219b03d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4422ec18c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4422ec18c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4422ea4cf0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4421989710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f44219a49d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f44219a49d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4421988da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f44219a2120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f44219a2120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44219860c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f44219a1440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44219a1440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f442303b5a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f442303b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f846d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f442303aa20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f442303aa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f83ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f4423034d40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f4423034d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f74220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f4423032160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f4423032160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f73610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f4423030020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f4423030020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f6c6d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f442302f570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f442302f570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f6bac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f442302d410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f442302d410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f65b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f442302c890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f442302c890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f63020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f442302a8c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f442302a8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f5d220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f4423029d40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f4423029d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f5b610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f4423027a50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f4423027a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f556d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f4423025020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f4423025020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f54ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f4423040a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f8b220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f4423041a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f92cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f442302e3e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f6a7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f4423047bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f92020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f4423025da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f537a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f442304b280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422fe06d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f4423035da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f7acb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f4423035020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f7a020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f4423037a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f7cb30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f442303eda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f892f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f442302b890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f63cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f442303e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f8a610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f442304fa30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fee3e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f4423048730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4422f94b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f4423042690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f997a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f4423031020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f722f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f442304a700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4422f9aac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f4423028ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f5a2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f4423038a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422f827a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4422fec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fedbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4422fec940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4422f4c3f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4422fea020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4422f4cb80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f98610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fee3e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f97c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fedbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f91b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fee3e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f8f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fedbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f88160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fee3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f877a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fedbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4422fe4100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4422fe4750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4422f4a430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4422fe4da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4422f4abc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f81610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f80c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f79b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f772f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f71160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f707a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f69610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f68c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f62b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f602f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f59160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f587a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422f52610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4422f51c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4422e870f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4422ebf8e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4422ebf8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4422eb9b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4422eaac50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4422e3b9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e28630"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4422e3acf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e23b00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4422e3d3e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e33a20"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4422e37370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e17630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e32c50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f44234d3d50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e2c2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f442349a020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e277a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f44234d5580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e22c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f44234dbcb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e1b2f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f442348f020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e167a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f442349d8a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e11c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f44234928a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4422def700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4422decc20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4422df2060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4422c87b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4422dda760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f4423037a50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f4422dd9a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f4423035da0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4422dd8930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f442349d8a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4422c952f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4422dc4020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4422dc4020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4422dad3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4422c867a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4422dc73d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4422dc73d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4422db57a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4422db83f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f4422da13f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4422dc1a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f4422daad50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4422dbe020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f4422da73f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4422dcda30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f4422db1d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4422dbba30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4422da4d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4422dc33f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f4422dac710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4422db7710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4422da0710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4422dbd3f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f4422da6710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4422dc6d50"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4422dae020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4422db9020"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f4422da2100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4422dc2710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f4422daba30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4422dc0d50"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f4422da8020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4422dce710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f4422db2a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4422dbc710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f4422da5a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f442282e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4422822880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f442281a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f44228210a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f442280e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4422810500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f442282d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4422816880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4422811500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f442281c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f442281d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422830a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c3b660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f442282be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f442282a490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4422815c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f442282abe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4422811ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f44228160a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4422825670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f44228170a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f442281a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4422817880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f442280fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4422810ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f442281d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f44228190a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4422813ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4422820880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f442280ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f442282f480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4422828670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4422824670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f442281b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f442281b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f44228220a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f44228292f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4422828020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f442282b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4422814500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f442280f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f442281c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4422819880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f442282ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f442281e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4422829940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f442281e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f44228150a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f442280d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c38890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c37ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c36a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422c39510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c358b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f4422c27b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422bc8770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4422bc8770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422bc31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4422c33060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422ba6c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4422ba6c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f442173ba00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4422c2fc70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4422ba58f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4422ba58f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4421739020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4422c272e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4422857020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4422857020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4421738120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4422c30a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f4422c23bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4422bc31d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422bbfb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4421738120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4422b3f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4421739020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4422b40110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f442173ba00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422b44d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f442173a760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f44217302c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f44217302c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f44229c02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4422b40110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4422ac4a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4421739630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4422b40790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4422b40790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4422ac3060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4422b3aa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f44217388c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421720760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422b3d8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4422b3b690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421731640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4421731640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44229c1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4422b36b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f442172ac10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f442172ac10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f44229c44d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422b3d8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422ac4250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4422b3f850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4422ac3c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4422b44d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422ac5470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4422ac13e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4422b3aa40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4422ac25b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4422b3b690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4422abb480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4422b36b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4422ac1a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4422ab1020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4422ab1020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4422aa8700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4422abbc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f4422ab92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4422aa92c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4422aa3c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4422aadd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4422aa32d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4422a74bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4423460bc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4422a713e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f442345d3f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4422a6ebb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f442345abc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4422a6b3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f4423455bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4422a69bb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f44234573f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f4422a79d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4422917d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4421729440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f44229c23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4421729a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f442291e020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f442291e020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4422917d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f442172f2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4422ab1020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421730a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44229c0ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44229c0ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4422929e80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44229bf8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421720760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f44229c02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f442292aa60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f442292aa60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f44216b66c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f44229c44d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f44229bdd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f44229c1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f442292cca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f442292cca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44216b7850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f44229c23f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f44229bc710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4422929e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44216b5a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422928790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44229bf8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44229aabf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4422929e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f44229bcd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4422aadd10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f44229aa5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4422aa92c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4422929270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f44216b6e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44216b49d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422928790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f44216b42d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4422927020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f44216b32b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f44216ba630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f44216b1480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f442290ebb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4422aa8700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4422909700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4423460bc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4422906e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f442345abc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f44227f2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f44227fcda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f44227f5b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f44227ef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f44227e8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f44227efe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f44227db2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f44227de2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f44227fa120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f44227e4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44227df2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f44227f4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f44227f3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f44227e9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f44227ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f44227ee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44227fe760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44227f9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f44227f8120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f44227e2a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f44227f8870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44227dfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f44227fadc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f44227e5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f44227f3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44227f4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f44227fc750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f44227e6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f44227e7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f44227e5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f44227ddad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f44227dead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f44227eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f44227e7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f44227e0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f44227ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f44227dbad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f44227fc100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f44227f5370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f44227f2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f44227e9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f44227eee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f44227e8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f44227f0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f44227fb450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f44227f0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f44227f6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f44227f6cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f44227e02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f44227e1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44227f9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44227e12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f44227dd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f44227ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f44227e6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f44227fbaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f44227fa770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f44227ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f44227f6670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f44227ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f44227e4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f44227da7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f44227c5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f44227d0da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f44227c9b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f44227c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f44227bce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f44227c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f44227af2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f44227b12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f44227ce120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f44227b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44227b22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f44227c7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f44227c6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f44227bd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f44227bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f44227c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44227d1760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44227ccaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f44227cb120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f44227b6a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f44227cb870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44227b2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f44227cedc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f44227b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f44227c6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44227c7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f44227d0750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f44227b9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f44227bb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f44227b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f44227b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f44227b1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f44227be670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f44227bbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f44227b4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f44227c0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f44227afad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f44227d0100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f44227c9370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f44227c5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f44227bde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f44227c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f44227bc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f44227c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f44227cf450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f44227c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f44227ca020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f44227cacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f44227b42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f44227b5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44227cc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44227b52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f44227b02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f44227bee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f44227b9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f44227cfaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f44227ce770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f44227c0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f44227ca670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f44227bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f44227b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f44227ae7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f4422787880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f442277c020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f442277c020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f4422777140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f4422773bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f442277bc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f442277bc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f442275e150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f4422776530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f44227081b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f4422762540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f4422763590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f4422763590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f44227129e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4422759950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4422760ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4422760ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4422736a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f442275e9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f4422762540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4422726020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4422720530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4422720530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f442271de50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4422719020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f442304fa30"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422711c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f44234bed50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f44226f5990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f44226e8900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f44226f7150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f44226e70f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f44226e7ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f442308c690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f44226db500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f4422e3d3e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f44226d5820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4422e3c690"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f44226d3b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f4422e37370"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f44226dc880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f4422def700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f44226d1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422636c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4422636c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44226d1d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44226358f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44226358f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f44226ce6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f44226342f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f44226342f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f44226cede0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f4422633cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4422633cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f44226cd530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f4422632370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4422632370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44226cdc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4422630d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4422630d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f44226cfe00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f442262ac60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f442262ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f44226d0780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f44226127a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f44226127a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44226cf550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44226162f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44226162f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44226cc3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f442262b480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f442262b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f44226cb5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4422628e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4422628e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f44226ca020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4422627670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4422627670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f44226cce80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f442262e7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f442262e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f44226c99c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f4422614ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4422614ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f44226ca890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f44226152f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f44226152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f44226c9130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4422615ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4422615ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f44226c3d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4422606df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4422606df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f44225fd550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f44226e4d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f44226e2bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f44226e1950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442257a550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f44226d6be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4422572480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4422572480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f44225648b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f44226c76c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4422629c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4422633020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f442262dc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4422620e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4422627e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f44226132f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f442261b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f442262bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4422621670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4422623e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4422626670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f442262f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f442261aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f442262fac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4422616ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4422630060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f442261ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f442262a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4422634940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f442261de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f442261f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f442261c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4422622670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f442261fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4422618ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4422624670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4422613ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f442262d490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4422629480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4422621e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4422626e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4422620670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4422628670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4422633670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f442262e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f442262ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f44226182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4422619ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44226306b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44226192f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f44226142f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4422622e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f442261d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f44226329c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4422624e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4422623670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f442261be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f4422601020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f44225fc7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f44225e7150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f44225fb020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4422e3c690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f44225fa380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f4422e3b9c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f44225f96b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f4422e3acf0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f44225f8a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4422df2060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f44225f76e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f44223e9250"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f44223e9250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f44225f6530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f44223c6120"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f44223c6120"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44225f5ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44223e4d00"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44223e4d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f44225f53a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f44223e39c0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f44223e39c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f44225f4330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f44225f31e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f44225f1d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442257a550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f44225f3b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4423149b80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f44225ec3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f44223db500"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f44223db500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f44225eccb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f44223dbce0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f44223dbce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f44225edb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f44223e27b0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f44223e27b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f44225e96d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f44223c7900"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f44223c7900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f44225eb590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f44223c9900"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f44223c9900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f44225ebe00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f44223c8120"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f44223c8120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44225e8020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44223c9120"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44223c9120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f44225e88b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f44223e8990"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f44223e8990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f44225dc9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f442250da60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4422ec18c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f442255e820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f442250e790"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4422560b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f44224f8610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f44224f8610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f442240ca20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f44224fd1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f442241b8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f442241b8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4421511bc0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44224fe3a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44224c9020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44224c9020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f44215819d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4422414020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f442249c2f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4422496850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f44224c9870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f44224c9870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f442157a5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f442240bd20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f44224e8b70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f44224e8b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f44224e0610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f44215819d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4421563360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4421575d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4421580260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4421580260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4421563bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f44215779b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f44224e8b70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442155fdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f442156a020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f442156a020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f442155d440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4421569760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4421569760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f442155c760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4421568a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4421568a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f44224ddb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4422ebf8e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f44224939c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4421509180"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f4422414020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f44215038b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f442240f450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f4421504410"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f44236e53a0"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f4421502020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4422402ce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f44223f9610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f44223f9610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f44224fd1d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f44223dc2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f44223e7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f44223df2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f44223d3500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f44223da500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f44223e59c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f44223cfce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44223ca900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f44223de2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f44223dd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f44223d5ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f44223d6500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f44223dace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44223e8020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44223e3370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f44223cd120"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f44223e2160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f44223e46b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f44223cf500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f44223dead0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44223dfad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f44223e7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f44223d0500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f44223d3ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f44223d0ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f44223c7120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f44223d6ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f44223d1500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f44223ca120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f44223d8ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f44223e1ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f44223ddad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f44223d4500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f44223d8500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f44223d4ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f44223dccd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f44223e7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f44223e1490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f44223cc900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f44223cc120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44223cd900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f44223c8900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f44223d5500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f44223d1ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f44223e5370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f44223e4060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f44223d7500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f44223e2e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f44223d7ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f44223ce500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f44223c6db0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f4422399920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f4422391940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f442239f990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4422391080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4422375e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4422379020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4422374ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422361690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4422361690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422bc31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f44223738f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f442239ba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422371170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f442235a200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4422356570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f44223553f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f442235a950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422355a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f442231dd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f44223266b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f442231cb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4422326020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f442231b2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422319170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4422319b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f44222cc410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f44222eddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f44222c0800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f44222bb580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f44222bb580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4422bc31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44222a71c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44231d6020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f442218c8d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f442217e2f0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44221f01a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4422192720"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f442218c280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4422181c70"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4422187dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f44221f0b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4422191120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f442218a480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4422191d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f442218b940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f44221874a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f4421e6da30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f442218a480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f442204d830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f442218b940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f442204d110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f442204c760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f44221874a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f442217b8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4422187dc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f442204a590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4422187dc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4422041cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4422187dc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f442204b0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f44221745c0"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f442204b9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f4422178130"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f442216e8e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f4422045b60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f442216d060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f442201b080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f442201b080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4421e80080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4422036d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f442201b890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f442201b890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4421e86440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f4422117e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f442214fd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f442211a400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f44221130c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f4422049c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f4422048480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4422019020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4421e85440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4421e85440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4422005020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4421e86440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4422007860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421e84020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421e808e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4421e7f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421e87020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4421e87020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f442200a7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421e87c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421402a90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421402a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421ec9510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4422002450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421e84020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44213fcbe0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422009a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f44220031d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421403e00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4421403e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421ecb280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f44220011d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f44213fc440"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f44213fc440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4421ecc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422009a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421f96dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4422005020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4421f94890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4422007860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4421f956d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f442200a7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421f96020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421f913e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4422002450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4421f925b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f44220031d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4421f8c5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f44220011d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4421f91a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4421f7cd30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4421f7cd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4421f753c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4421f8b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4421ee77c0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4421ee77c0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4422ebf8e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4421f89120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4421f79860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4421f70020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421f7c500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421f789c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4421f708f0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f4423450bc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4421f6d020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f442344d3f0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4421f6b890"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f442344bbc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4421f68020"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f4423446bc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4421f66890"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f44234483f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4421401a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4421f7cd30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44214012b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ec9d20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ec9d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ebc060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421ec8af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44213fcbe0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421ec9510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421ebebd0"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421ebebd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f44213936c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4421ecc510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4421ec6230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4421ecb280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421ebfe30"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4421ebfe30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4421394850"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ebc060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421391a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4421ec32f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4421f79860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421ebc950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421ec8af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ec2120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ebc060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421eb7d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421ebd400"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421ebd400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421393e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421eb7020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421f7c500"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44213909d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421ebc950"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f44213902d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4421ebb0f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f442138f2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4421396630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f442138d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f44213586a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421eb7020"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4421358e00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4421eb7780"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421357410"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421eb7d50"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421356060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ea0990"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4421344920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4421336390"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4421343590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f442323f020"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4421341270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f442323fc90"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4421dbf020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f44213408f0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f44213408f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f442323c080"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4421335060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4421e2a930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4421335c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f442323fc90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4421e2a930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4421dd9df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4421dd7400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f44232427f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4421dd6060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f442323fc90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4421dd5720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f442323f020"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f4421dd4480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f4421dd4c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4421db6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f442323f020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4421db6c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f442323fc90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="15:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f442248d530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="44(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
        <short>&#10; An HPL abstraction of USART1 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART1 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="56(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="96(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.TimerTramaTDMA" loc="44(BaseStationC.TimerTramaTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.TimerLeds" loc="44(BaseStationC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC" loc="47(BaseStationC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC" loc="47(BaseStationC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BaseStationC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseStationC.AMReceiverC" loc="43(BaseStationC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f442341c810" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f442341cbc0" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f442341b020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f442341b3d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f442341b740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f4423020930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f4423020cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f442301f0d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f442301f450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f442301f7d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f442301fb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f442301d020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f442301d3b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f442301d780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f4422fe2c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f4422fdf0d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4422efacb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4422efacb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4422ebaa40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4422ebaa40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4422ea3570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4422ea3570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4422ea3d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4422ea3d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4422ea2160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4422ea2160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4422ea2940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4422ea2940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4422ea2d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f4422ea1540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f4422ea1540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4422e81620" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4422e81620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4422e81df0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4422e81df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4422e80220" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4422e80220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4422e80a00" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4422e80a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4422e80dd0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f44229a55e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f44229999b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f442297ecc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4422734020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4422734020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f44227347b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f44227347b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f442250fd00" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f442250fd00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f44224c4cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f44224c4cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f442248d530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f442248d530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f442248d880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f442247f980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f442247f980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f442247fcd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4421e4c360" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4421e45140" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4421e3d020" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f4421e25c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4421dbb330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f44236f2320" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236f2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236f26a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f44236f6de0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f44236f6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f44236f5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44236f4280" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44236f4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236f4600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f44236e53a0" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f44236e53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f44236ef4d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f44236ef660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f44236e5a40"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f44236e5bd0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f44236e5d60"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f44236ef020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f44236ef1b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f44236ef340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f44236e5720"/>
        <function-ref name="node_id" scoped="" ref="0x7f44236e58b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f44236e1900" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f44236e1900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236e1c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44236e34e0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44236e34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236e3860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f44236e1220" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f44236e1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236e15a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f44236e0020" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f44236e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f44236e3b50" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f44236e3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f44236e2ca0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f44236e2e30"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f44236e2340"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f44236e24d0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f44236e2660"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f44236e27f0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f44236e2980"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f44236e2b10"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f44236e2020"/>
        <function-ref name="node_id" scoped="" ref="0x7f44236e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44236eea10" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44236eea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236eed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f44236e4be0" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f44236e4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f44236a82c0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f44236a82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f44236ae1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f44236a87d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f44236a8960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f44236a8af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f44236a8640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f44236a8c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f44236a8e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7f44236ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44236b2b60" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44236b2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4423695020" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4423695020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4423694020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4423695530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f44236956c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4423695850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f44236953a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f44236959e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4423695b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4423695d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4423694320" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4423694320"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f44236946a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4423698820" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4423698820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4423698ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4423818c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4423818c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f44239f30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f44239759a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f44239759a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4423975d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4423a90020"/>
        <function-ref name="sleep" scoped="" ref="0x7f4423a901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f44238b63d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f44238b63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f44238b6750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f4423663240" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4423663240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f44236621b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4423663750"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f44236638e0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4423663a70"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f44236635c0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4423663c00"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4423663d90"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4423662020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f44236553a0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f44236553a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4423655720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f44236f1aa0" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f44236f1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f44236f1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4423656b60" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f4423656b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4423655020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4423656140" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4423656140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44236564c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4423656650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f44236567e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4423b90940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4423b90940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4423b90cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4423b90e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4423b9d1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4423b9d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4423b9d560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4423b9d6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4423b9d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4423741040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4423741040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44237413c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4423741550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f442373c490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f442373c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f442373c810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f442373c9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f442373cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4423742140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4423742140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44237424c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4423742650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f44237427e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f442363c6b0" loc="19:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f442363c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f442363ca30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f442363cbc0"/>
        <function-ref name="start" scoped="" ref="0x7f442363cd50"/>
        <function-ref name="stop" scoped="" ref="0x7f442363b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSendTask" ref="0x7f4423590610" loc="110:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSendTask" scoped="" ref="0x7f4423590610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4423590990"/>
        <function-ref name="runTask" scoped="" ref="0x7f4423590b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f442363d1c0" loc="17:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f442363d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f442363d540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f4423637a80" loc="18:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f4423637a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4423637e00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f442363c020"/>
        <function-ref name="start" scoped="" ref="0x7f442363c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f442363c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f44235e4bc0" loc="22:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7f44235e4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44235ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f44235dc020" loc="29:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f44235dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44235dc3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f44235dc530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44235dc6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44235dc850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f44235dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f44235c8440" loc="31:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f44235c8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44235c87c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44235c8950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44235c8ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44235c8c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44235c8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTramaTDMA" ref="0x7f44235c6270" loc="34:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f44235c6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44235b76e0"/>
        <function-ref name="fired" scoped="" ref="0x7f44235c5cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f44235b8a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f44235b85f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f44235b6020"/>
        <function-ref name="gett0" scoped="" ref="0x7f44235b7b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44235b8170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f44235c6e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f44235b70d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f44235c5360"/>
        <function-ref name="stop" scoped="" ref="0x7f44235c5830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f4423591720" loc="109:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7f4423591720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4423591aa0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4423591c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f44235c70c0" loc="32:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f44235c70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44235c7440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f44235a4500" loc="36:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f44235a4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44235a4880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f44235a4a10"/>
        <function-ref name="led1On" scoped="" ref="0x7f44235a4ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44235a4d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44235b0020"/>
        <function-ref name="get" scoped="" ref="0x7f44235b01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44235b0340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44235b0980"/>
        <function-ref name="set" scoped="" ref="0x7f44235b04d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f44235b0660"/>
        <function-ref name="led2On" scoped="" ref="0x7f44235b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f44235db6c0" loc="23:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7f44235db6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44235dba40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f44235dbbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44235dbd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44235e8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f44235e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f44235e9ba0" loc="21:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7f44235e9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4423636020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44236361b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4423636340"/>
        <function-ref name="cancel" scoped="" ref="0x7f44236364d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4423636660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f44235cb8c0" loc="24:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7f44235cb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f44235cbc40"/>
        <function-ref name="source" scoped="" ref="0x7f44235cbdd0"/>
        <function-ref name="address" scoped="" ref="0x7f44235e5020"/>
        <function-ref name="destination" scoped="" ref="0x7f44235e51b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f44235e5340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f44235e54d0"/>
        <function-ref name="type" scoped="" ref="0x7f44235e5660"/>
        <function-ref name="setType" scoped="" ref="0x7f44235e57f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f44235e5980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f44235e5b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f44235e5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f44235dcc90" loc="30:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f44235dcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f44235c90a0"/>
        <function-ref name="source" scoped="" ref="0x7f44235c9230"/>
        <function-ref name="address" scoped="" ref="0x7f44235c93c0"/>
        <function-ref name="destination" scoped="" ref="0x7f44235c9550"/>
        <function-ref name="setSource" scoped="" ref="0x7f44235c96e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f44235c9870"/>
        <function-ref name="type" scoped="" ref="0x7f44235c9a00"/>
        <function-ref name="setType" scoped="" ref="0x7f44235c9b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f44235c9d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f44235c8020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f44235c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f44235b6650" loc="35:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f44235b6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44235b2c40"/>
        <function-ref name="fired" scoped="" ref="0x7f44235b31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f44235b2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f44235b3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f44235b1590"/>
        <function-ref name="gett0" scoped="" ref="0x7f44235b1110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44235b3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f44235b5390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f44235b2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f44235b5860"/>
        <function-ref name="stop" scoped="" ref="0x7f44235b5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f442351c9f0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f442351c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f442351cd70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4423519020"/>
        <function-ref name="led1On" scoped="" ref="0x7f44235191b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4423519340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44235194d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423519660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44235197f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4423519e30"/>
        <function-ref name="set" scoped="" ref="0x7f4423519980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4423519b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4423519ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f442350da90" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f442350da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442350de10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423513020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44235131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423513340"/>
        <function-ref name="get" scoped="" ref="0x7f44235134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423513660"/>
        <function-ref name="set" scoped="" ref="0x7f44235137f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4423513980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4423518db0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4423518db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4423515180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f4423513ca0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4423513ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44235120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423512230"/>
        <function-ref name="toggle" scoped="" ref="0x7f44235123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423512550"/>
        <function-ref name="get" scoped="" ref="0x7f44235126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423512870"/>
        <function-ref name="set" scoped="" ref="0x7f4423512a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4423512b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4423515400" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4423515400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4423515780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4423515910"/>
        <function-ref name="led1On" scoped="" ref="0x7f4423515aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4423515c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4423515dc0"/>
        <function-ref name="get" scoped="" ref="0x7f4423514020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44235141b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44235147f0"/>
        <function-ref name="set" scoped="" ref="0x7f4423514340"/>
        <function-ref name="led0On" scoped="" ref="0x7f44235144d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4423514660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f442350c020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f442350c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442350c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442350c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f442350c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442350c850"/>
        <function-ref name="get" scoped="" ref="0x7f442350c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442350cb70"/>
        <function-ref name="set" scoped="" ref="0x7f442350cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f442350b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f4423516590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4423516590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423516910"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423516aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423516c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423516dc0"/>
        <function-ref name="get" scoped="" ref="0x7f44234f0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234f01b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234f0340"/>
        <function-ref name="clr" scoped="" ref="0x7f44234f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f44234f0830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f44234f0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234f0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234f0d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234ee1b0"/>
        <function-ref name="get" scoped="" ref="0x7f44234ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ee4d0"/>
        <function-ref name="set" scoped="" ref="0x7f44234ee660"/>
        <function-ref name="clr" scoped="" ref="0x7f44234ee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f44234eddd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44234eddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44234ec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f44234eeb50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f44234eeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234ed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234ed4d0"/>
        <function-ref name="get" scoped="" ref="0x7f44234ed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ed7f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234ed980"/>
        <function-ref name="clr" scoped="" ref="0x7f44234edb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f44234d3d50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f44234d3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234d1100"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234d1290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234d1420"/>
        <function-ref name="clr" scoped="" ref="0x7f44234cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234d1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234d18d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234d1a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234d1bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234d1d80"/>
        <function-ref name="get" scoped="" ref="0x7f44234d0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234d01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234d0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234d04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234d0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234d08f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234d0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234d0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234d15b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234d0da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f44234b9e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f44234b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234b8210"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234b83a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234b8530"/>
        <function-ref name="clr" scoped="" ref="0x7f44234b6340"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234b8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234b89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234b8b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234b8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234b7020"/>
        <function-ref name="get" scoped="" ref="0x7f44234b71b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234b7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234b74d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234b7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234b78f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234b7a80"/>
        <function-ref name="set" scoped="" ref="0x7f44234b7c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234b7da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234b86c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234b6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f442342f3d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f442342f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442342f750"/>
        <function-ref name="isInput" scoped="" ref="0x7f442342f8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442342fa70"/>
        <function-ref name="clr" scoped="" ref="0x7f442342d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442342fd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442342e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442342e1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442342e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442342e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f442342e660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442342e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442342e980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442342eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442342eda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442342d020"/>
        <function-ref name="set" scoped="" ref="0x7f442342d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442342d340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442342fc00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442342d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442342d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f44234343e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f44234343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423434760"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234348f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423434a80"/>
        <function-ref name="clr" scoped="" ref="0x7f44234327f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423434da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423433020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234331b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423433340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234334d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423433660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234337f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423433980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423433b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423433da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423432020"/>
        <function-ref name="set" scoped="" ref="0x7f44234321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423432340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423434c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423432660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f442345d3f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f442345d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442345d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f442345d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442345da90"/>
        <function-ref name="clr" scoped="" ref="0x7f442345a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442345ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442345b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442345b1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442345b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442345b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f442345b660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442345b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442345b980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442345bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442345bda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442345a020"/>
        <function-ref name="set" scoped="" ref="0x7f442345a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442345a340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442345dc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442345a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442345a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f44234b4e50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f44234b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234b3210"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234b33a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234b3530"/>
        <function-ref name="clr" scoped="" ref="0x7f44234b1340"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234b3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234b39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234b3b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234b3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234b2020"/>
        <function-ref name="get" scoped="" ref="0x7f44234b21b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234b2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234b24d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234b2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234b28f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234b2a80"/>
        <function-ref name="set" scoped="" ref="0x7f44234b2c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234b2da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234b36c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234b1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f442349a020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f442349a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442349a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442349a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442349a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234984d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442349a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442349ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442349ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423499020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234991b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423499340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234994d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423499660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423499a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423499c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423499da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423498020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442349a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234981b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423498340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f4423480020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f4423480020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423480530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234806c0"/>
        <function-ref name="clr" scoped="" ref="0x7f442347e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234809e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423480b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423480d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442347f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442347f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442347f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442347f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442347f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442347f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442347fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442347fc10"/>
        <function-ref name="set" scoped="" ref="0x7f442347fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442347e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423480850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442347e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442347e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f442346c020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f442346c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442346c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442346c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442346c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f442346a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442346c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442346cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442346cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442346b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442346b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442346b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442346b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442346b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442346b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442346ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442346bc10"/>
        <function-ref name="set" scoped="" ref="0x7f442346bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442346a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442346c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442346a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442346a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f44234573f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f44234573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423457770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423457900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423457a90"/>
        <function-ref name="clr" scoped="" ref="0x7f44234557f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423457db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423456020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234561b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423456340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234564d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423456660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423456980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423456b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423456da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423455020"/>
        <function-ref name="set" scoped="" ref="0x7f44234551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423455340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423457c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423455660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f44234433e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f44234433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423443760"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234438f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423443a80"/>
        <function-ref name="clr" scoped="" ref="0x7f44234417f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423443da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423442020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234421b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423442340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234424d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423442660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234427f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423442980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423442b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423442da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423441020"/>
        <function-ref name="set" scoped="" ref="0x7f44234411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423441340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423443c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423441660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f44234253f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f44234253f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423425770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423425900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423425a90"/>
        <function-ref name="clr" scoped="" ref="0x7f44234237f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423425db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423424020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234241b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423424340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234244d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423424660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423424980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423424b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423424da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423423020"/>
        <function-ref name="set" scoped="" ref="0x7f44234231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423423340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423425c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423423660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f44234ca580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f44234ca580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234ca900"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234caa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234cac20"/>
        <function-ref name="clr" scoped="" ref="0x7f44234c8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234c91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234c9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234c9660"/>
        <function-ref name="get" scoped="" ref="0x7f44234c97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234c9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234c9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234c9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234c8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234c81b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234c8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234c84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234cadb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234c8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234c87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f4423455bc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f4423455bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423454020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234541b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423454340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423452020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423454660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234547f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423454980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423454b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423454ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423454e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423453020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234531b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423453340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234535d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423453760"/>
        <function-ref name="set" scoped="" ref="0x7f44234538f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423453a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234544d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423453c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423453da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f44234c5580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f44234c5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234c5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234c5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234c5c20"/>
        <function-ref name="clr" scoped="" ref="0x7f44234c3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234c4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234c4660"/>
        <function-ref name="get" scoped="" ref="0x7f44234c47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234c4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234c4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234c4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234c3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234c31b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234c3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234c34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234c5db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234c3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f44234ac710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f44234ac710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234aca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234acc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234acdb0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234aaa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234ab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234ab340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234ab4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234ab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ab7f0"/>
        <function-ref name="get" scoped="" ref="0x7f44234ab980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234abb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234abca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234abe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234aa120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234aa2b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234aa440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234aa5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234ab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234aa760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f44234928a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f44234928a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423492c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423492db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423491020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423490c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423491340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234914d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423491660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234917f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423491980"/>
        <function-ref name="get" scoped="" ref="0x7f4423491b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423491ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423491e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423490020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234902b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423490440"/>
        <function-ref name="set" scoped="" ref="0x7f44234905d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423490760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234911b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234908f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423490a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f44234798a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f44234798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423479c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423479db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423478020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423477c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423478340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234784d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423478660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234787f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423478980"/>
        <function-ref name="get" scoped="" ref="0x7f4423478b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423478ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423478e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423477020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234772b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423477440"/>
        <function-ref name="set" scoped="" ref="0x7f44234775d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423477760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234781b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234778f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423477a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f44234658a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f44234658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423465c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423465db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423464020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423463c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423464340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234644d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423464660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234647f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423464980"/>
        <function-ref name="get" scoped="" ref="0x7f4423464b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423464ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423464e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423463020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234632b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423463440"/>
        <function-ref name="set" scoped="" ref="0x7f44234635d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423463760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234641b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234638f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423463a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f44234d8d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f44234d8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234d7100"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234d7290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234d7420"/>
        <function-ref name="clr" scoped="" ref="0x7f44234d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234d7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234d78d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234d7a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234d7bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234d7d80"/>
        <function-ref name="get" scoped="" ref="0x7f44234d6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234d61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234d6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234d64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234d6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234d68f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234d6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234d6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234d75b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234d6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f44234bed50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f44234bed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234bd210"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234bd3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234bd530"/>
        <function-ref name="clr" scoped="" ref="0x7f44234bb340"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234bd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234bd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234bdb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234bdd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234bc020"/>
        <function-ref name="get" scoped="" ref="0x7f44234bc1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234bc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234bc4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234bc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234bc8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234bca80"/>
        <function-ref name="set" scoped="" ref="0x7f44234bcc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234bcda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234bd6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234bb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f44234a5e50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f44234a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234a4210"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234a43a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234a4530"/>
        <function-ref name="clr" scoped="" ref="0x7f44234a2340"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234a4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234a49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234a4b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234a4d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234a3020"/>
        <function-ref name="get" scoped="" ref="0x7f44234a31b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234a3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234a34d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234a3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234a38f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234a3a80"/>
        <function-ref name="set" scoped="" ref="0x7f44234a3c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234a3da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234a46c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234a2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f4423460bc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f4423460bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442345f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442345f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442345f340"/>
        <function-ref name="clr" scoped="" ref="0x7f442345d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442345f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442345f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442345f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442345fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442345fca0"/>
        <function-ref name="get" scoped="" ref="0x7f442345fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442345e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442345e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442345e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442345e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442345e760"/>
        <function-ref name="set" scoped="" ref="0x7f442345e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442345ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442345f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442345ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442345eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f442343cbb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f442343cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442343b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442343b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442343b340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423439020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442343b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442343b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442343b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442343bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442343bca0"/>
        <function-ref name="get" scoped="" ref="0x7f442343be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442343a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442343a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442343a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442343a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442343a760"/>
        <function-ref name="set" scoped="" ref="0x7f442343a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442343aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442343b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442343ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442343ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f4423428bb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f4423428bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423427020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234271b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423427340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423425020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423427660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234277f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423427980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423427b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423427ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423427e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423426020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234261b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423426340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234265d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423426760"/>
        <function-ref name="set" scoped="" ref="0x7f44234268f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423426a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234274d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423426c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423426da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f442344bbc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f442344bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442344a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442344a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442344a340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423448020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442344a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442344a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442344a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442344ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442344aca0"/>
        <function-ref name="get" scoped="" ref="0x7f442344ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423449020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234491b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423449340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234495d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423449760"/>
        <function-ref name="set" scoped="" ref="0x7f44234498f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423449a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442344a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423449c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423449da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f44234a0e50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f44234a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442349f410"/>
        <function-ref name="isInput" scoped="" ref="0x7f442349f5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442349f730"/>
        <function-ref name="clr" scoped="" ref="0x7f442349d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442349fa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442349fbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442349fd70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442349e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442349e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442349e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442349e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442349e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442349e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442349ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442349ec10"/>
        <function-ref name="set" scoped="" ref="0x7f442349eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442349d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442349f8c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442349d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442349d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f4423485020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f4423485020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423485530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234856c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234834d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234859e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423485b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423485d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423484020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234841b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423484340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423484660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423484a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423484c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423484da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423483020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423485850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234831b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423483340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f4423471020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f4423471020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423471530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234716c0"/>
        <function-ref name="clr" scoped="" ref="0x7f442346f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234719e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423471b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423471d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423470020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234701b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423470340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234704d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423470660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234707f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423470a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423470c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423470da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442346f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423471850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442346f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442346f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f44234393e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f44234393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423439760"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234398f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423439a80"/>
        <function-ref name="clr" scoped="" ref="0x7f44234377f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423439da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423438020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234381b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423438340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234384d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423438660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234387f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423438980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423438b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423438da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423437020"/>
        <function-ref name="set" scoped="" ref="0x7f44234371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423437340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423439c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423437660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f44234523e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f44234523e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423452760"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234528f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423452a80"/>
        <function-ref name="clr" scoped="" ref="0x7f44234507f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423452da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423451020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234511b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423451340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234514d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423451660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234517f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423451980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423451b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423451da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423450020"/>
        <function-ref name="set" scoped="" ref="0x7f44234501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423450340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423452c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423450660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f44234cf580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f44234cf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234cf900"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234cfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234cfc20"/>
        <function-ref name="clr" scoped="" ref="0x7f44234cd980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234ce1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234ce340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ce660"/>
        <function-ref name="get" scoped="" ref="0x7f44234ce7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234ce980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234ceb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234ceca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234cd020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234cd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234cd340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234cd4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234cfdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234cd660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f44234b6710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f44234b6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234b6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234b6c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234b6db0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234b4a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234b5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234b54d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234b5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234b57f0"/>
        <function-ref name="get" scoped="" ref="0x7f44234b5980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234b5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234b5ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234b5e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234b4120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234b42b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234b4440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234b45d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234b5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234b4760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f4423476020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f4423476020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423476530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234766c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234744d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234769e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423476b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423476d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423475020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234751b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423475340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234754d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423475660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423475a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423475c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423475da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423474020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423476850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234741b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423474340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f44234b1710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f44234b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234b1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234b1c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234b1db0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234afa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234b0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234b04d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234b0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234b07f0"/>
        <function-ref name="get" scoped="" ref="0x7f44234b0980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234b0b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234b0ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234b0e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234af120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234af2b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234af440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234af5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234b0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234af760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f44234988a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f44234988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423498c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423498db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423496020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423495c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423496340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234964d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423496660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234967f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423496980"/>
        <function-ref name="get" scoped="" ref="0x7f4423496b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423496ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423496e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423495020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234952b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423495440"/>
        <function-ref name="set" scoped="" ref="0x7f44234955d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423495760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234961b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234958f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423495a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f442347e8a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f442347e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442347ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f442347edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442347d020"/>
        <function-ref name="clr" scoped="" ref="0x7f442347cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f442347d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442347d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442347d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442347d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442347d980"/>
        <function-ref name="get" scoped="" ref="0x7f442347db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442347dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442347de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442347c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442347c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442347c440"/>
        <function-ref name="set" scoped="" ref="0x7f442347c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442347c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442347d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442347c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442347ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f442346a8a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f442346a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442346ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f442346adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423469020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423468c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423469340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234694d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423469660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234697f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423469980"/>
        <function-ref name="get" scoped="" ref="0x7f4423469b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423469ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423469e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423468020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234682b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423468440"/>
        <function-ref name="set" scoped="" ref="0x7f44234685d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423468760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234691b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234688f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423468a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f442344d3f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f442344d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442344d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f442344d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442344da90"/>
        <function-ref name="clr" scoped="" ref="0x7f442344b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442344ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442344c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442344c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442344c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442344c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f442344c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442344c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442344c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442344cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442344cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442344b020"/>
        <function-ref name="set" scoped="" ref="0x7f442344b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442344b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442344dc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442344b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442344b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f44234dbcb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f44234dbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234e8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234e83c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234e86e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234e8870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234e8a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234e8b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234e8d20"/>
        <function-ref name="get" scoped="" ref="0x7f44234e7020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234e71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234e7340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234e74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234e7760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234e78f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234e7a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234e7c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234e8550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234e7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f44234c3d50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f44234c3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234c2100"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234c2290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234c2420"/>
        <function-ref name="clr" scoped="" ref="0x7f44234c01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234c2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234c28d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234c2a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234c2bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234c2d80"/>
        <function-ref name="get" scoped="" ref="0x7f44234c1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234c11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234c1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234c14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234c1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234c18f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234c1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234c1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234c25b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234c1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f44234aae50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f44234aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234a9210"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234a93a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234a9530"/>
        <function-ref name="clr" scoped="" ref="0x7f44234a7340"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234a9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234a99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234a9b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234a9d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234a8020"/>
        <function-ref name="get" scoped="" ref="0x7f44234a81b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234a8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234a84d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234a8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234a88f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234a8a80"/>
        <function-ref name="set" scoped="" ref="0x7f44234a8c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234a8da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234a96c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234a7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f442348f020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f442348f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442348f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442348f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442348f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f442348d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442348f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442348fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442348fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442348e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442348e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442348e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442348e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442348e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442348e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442348ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442348ec10"/>
        <function-ref name="set" scoped="" ref="0x7f442348eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442348d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442348f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442348d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442348d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f44234483f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f44234483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423448770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423448900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423448a90"/>
        <function-ref name="clr" scoped="" ref="0x7f44234467f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423448db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423447020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234471b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423447340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234474d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423447660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234477f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423447980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423447b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423447da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423446020"/>
        <function-ref name="set" scoped="" ref="0x7f44234461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423446340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423448c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423446660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f4423441bb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f4423441bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423440020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234401b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423440340"/>
        <function-ref name="clr" scoped="" ref="0x7f442343e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423440660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234407f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423440980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423440b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423440ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423440e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442343f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442343f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442343f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442343f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442343f760"/>
        <function-ref name="set" scoped="" ref="0x7f442343f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442343fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234404d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442343fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442343fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f4423432bb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f4423432bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423431020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234311b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423431340"/>
        <function-ref name="clr" scoped="" ref="0x7f442342f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423431660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234317f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423431980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423431b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423431ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423431e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423430020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234301b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423430340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234305d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423430760"/>
        <function-ref name="set" scoped="" ref="0x7f44234308f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423430a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234314d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423430c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423430da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f442348a020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f442348a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442348a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442348a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442348a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234884d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442348a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442348ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442348ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423489020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234891b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423489340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423489660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423489a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423489c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423489da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423488020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442348a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234881b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423488340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f4423446bc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f4423446bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423445020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234451b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423445340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423443020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423445660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234457f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423445980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423445b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423445ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423445e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423444020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234441b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423444340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234445d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423444760"/>
        <function-ref name="set" scoped="" ref="0x7f44234448f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423444a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234454d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423444c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423444da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f44234d5580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f44234d5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234d5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234d5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234d5c20"/>
        <function-ref name="clr" scoped="" ref="0x7f44234d3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234d41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234d4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234d4660"/>
        <function-ref name="get" scoped="" ref="0x7f44234d47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234d4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234d4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234d3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234d31b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234d3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234d34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234d5db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234d3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f44234bb710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f44234bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234bba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234bbc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234bbdb0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234b9a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234ba340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234ba4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ba7f0"/>
        <function-ref name="get" scoped="" ref="0x7f44234ba980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234bab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234baca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234bae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234b9120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234b92b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234b9440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234b95d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234ba020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234b9760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f44234a2710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f44234a2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234a2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234a2c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234a2db0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234a0a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234a11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234a1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234a14d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234a17f0"/>
        <function-ref name="get" scoped="" ref="0x7f44234a1980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234a1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234a1ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234a1e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234a0120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234a02b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234a0440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234a05d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234a1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234a0760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f4423450bc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f4423450bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442344f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442344f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442344f340"/>
        <function-ref name="clr" scoped="" ref="0x7f442344d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442344f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442344f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442344f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442344fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442344fca0"/>
        <function-ref name="get" scoped="" ref="0x7f442344fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442344e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442344e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442344e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442344e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442344e760"/>
        <function-ref name="set" scoped="" ref="0x7f442344e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442344ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442344f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442344ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442344eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f4423437bb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f4423437bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423436020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234361b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423436340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423434020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423436660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234367f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423436980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423436b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423436ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423436e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423435020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234351b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423435340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234355d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423435760"/>
        <function-ref name="set" scoped="" ref="0x7f44234358f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423435a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234364d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423435c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423435da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f442349d8a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f442349d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442349dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f442349ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442349c020"/>
        <function-ref name="clr" scoped="" ref="0x7f442349bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f442349c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442349c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442349c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442349c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442349c980"/>
        <function-ref name="get" scoped="" ref="0x7f442349cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442349cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442349ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442349b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442349b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442349b440"/>
        <function-ref name="set" scoped="" ref="0x7f442349b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442349b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442349c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442349b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442349ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f44234838a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f44234838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423483c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423483db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423482020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423481c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423482340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234824d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423482660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234827f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423482980"/>
        <function-ref name="get" scoped="" ref="0x7f4423482b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423482ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423482e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423481020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234812b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423481440"/>
        <function-ref name="set" scoped="" ref="0x7f44234815d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423481760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234821b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234818f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423481a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f442346f8a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f442346f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442346fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f442346fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442346e020"/>
        <function-ref name="clr" scoped="" ref="0x7f442346dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f442346e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442346e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442346e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442346e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442346e980"/>
        <function-ref name="get" scoped="" ref="0x7f442346eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442346eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442346ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442346d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442346d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442346d440"/>
        <function-ref name="set" scoped="" ref="0x7f442346d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442346d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442346e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442346d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442346da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f44234cdd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f44234cdd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234cc100"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234cc290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234cc420"/>
        <function-ref name="clr" scoped="" ref="0x7f44234ca1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234cc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234cc8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234cca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234ccbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ccd80"/>
        <function-ref name="get" scoped="" ref="0x7f44234cb020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234cb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234cb340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234cb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234cb760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234cb8f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234cba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234cbc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234cc5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234cbda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f44234748a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f44234748a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423474c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423474db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423473020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423472c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423473340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234734d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423473660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234737f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423473980"/>
        <function-ref name="get" scoped="" ref="0x7f4423473b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423473ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423473e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423472020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234722b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423472440"/>
        <function-ref name="set" scoped="" ref="0x7f44234725d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423472760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234731b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234728f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423472a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f44234c8d50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f44234c8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234c7100"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234c7290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234c7420"/>
        <function-ref name="clr" scoped="" ref="0x7f44234c51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234c7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234c78d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234c7a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234c7bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234c7d80"/>
        <function-ref name="get" scoped="" ref="0x7f44234c6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234c61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234c6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234c64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234c6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234c68f0"/>
        <function-ref name="set" scoped="" ref="0x7f44234c6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234c6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234c75b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234c6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f44234afe50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f44234afe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234ae210"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234ae3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234ae530"/>
        <function-ref name="clr" scoped="" ref="0x7f44234ac340"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234ae850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234ae9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234aeb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234aed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234ad020"/>
        <function-ref name="get" scoped="" ref="0x7f44234ad1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234ad340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234ad4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234ad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234ad8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234ada80"/>
        <function-ref name="set" scoped="" ref="0x7f44234adc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234adda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234ae6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234ac020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f4423494020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f4423494020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423494530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234946c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234924d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234949e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423494b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423494d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423493020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234931b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423493340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234934d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423493660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234937f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423493a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423493c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423493da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423492020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423494850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234921b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423492340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f442347b020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f442347b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442347b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442347b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442347b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234794d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442347b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442347bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442347bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442347a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442347a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442347a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442347a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442347a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442347a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442347aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442347ac10"/>
        <function-ref name="set" scoped="" ref="0x7f442347ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423479020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442347b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234791b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423479340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f4423467020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f4423467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423467530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234676c0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234654d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234679e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423467b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423467d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423466020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234661b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423466340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234664d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423466660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234667f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423466a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423466c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423466da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423465020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423467850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234651b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423465340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f44234da580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f44234da580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234da900"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234daa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234dac20"/>
        <function-ref name="clr" scoped="" ref="0x7f44234d8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234d9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234d9660"/>
        <function-ref name="get" scoped="" ref="0x7f44234d97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234d9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234d9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234d9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234d8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234d81b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234d8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234d84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234dadb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234d8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f44234c0580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f44234c0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234c0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234c0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234c0c20"/>
        <function-ref name="clr" scoped="" ref="0x7f44234be980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234bf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234bf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234bf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234bf660"/>
        <function-ref name="get" scoped="" ref="0x7f44234bf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234bf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234bfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234bfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234be020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234be1b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234be340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234be4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234c0db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234be660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234be7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f44234a7710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f44234a7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234a7a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234a7c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44234a7db0"/>
        <function-ref name="clr" scoped="" ref="0x7f44234a5a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44234a61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234a6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234a64d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234a67f0"/>
        <function-ref name="get" scoped="" ref="0x7f44234a6980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234a6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234a6ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44234a6e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234a5120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44234a52b0"/>
        <function-ref name="set" scoped="" ref="0x7f44234a5440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44234a55d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234a6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234a5760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44234a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f442348d8a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f442348d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442348dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f442348ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442348c020"/>
        <function-ref name="clr" scoped="" ref="0x7f442348bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f442348c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442348c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442348c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442348c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442348c980"/>
        <function-ref name="get" scoped="" ref="0x7f442348cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442348cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442348ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442348b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442348b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442348b440"/>
        <function-ref name="set" scoped="" ref="0x7f442348b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442348b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442348c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442348b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442348ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f442343e3e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f442343e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442343e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f442343e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442343ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f442343c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442343eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442343d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442343d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442343d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442343d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f442343d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442343d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442343d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442343db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442343dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442343c020"/>
        <function-ref name="set" scoped="" ref="0x7f442343c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442343c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442343ec10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442343c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442343c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f442342dba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f442342dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442342c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442342c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442342c340"/>
        <function-ref name="clr" scoped="" ref="0x7f442342a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442342c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442342c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442342c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442342cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442342cca0"/>
        <function-ref name="get" scoped="" ref="0x7f442342ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442342b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442342b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442342b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442342b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442342b760"/>
        <function-ref name="set" scoped="" ref="0x7f442342b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442342ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442342c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442342bc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442342bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f442345abc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f442345abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423459020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234591b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423459340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423457020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423459660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234597f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423459980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423459b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423459ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423459e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423458020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234581b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423458340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234585d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423458760"/>
        <function-ref name="set" scoped="" ref="0x7f44234588f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423458a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234594d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423458c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423458da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f44234888a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f44234888a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423488c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423488db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423487020"/>
        <function-ref name="clr" scoped="" ref="0x7f4423486c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423487340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234874d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423487660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44234877f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423487980"/>
        <function-ref name="get" scoped="" ref="0x7f4423487b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423487ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423487e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423486020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234862b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423486440"/>
        <function-ref name="set" scoped="" ref="0x7f44234865d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423486760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234871b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234868f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423486a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f442342a3e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f442342a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442342a760"/>
        <function-ref name="isInput" scoped="" ref="0x7f442342a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442342aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f44234287f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442342ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423429020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234291b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423429340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234294d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423429660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423429980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423429b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423429da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423428020"/>
        <function-ref name="set" scoped="" ref="0x7f44234281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423428340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442342ac10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423428660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f4423423bc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f4423423bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423421020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44234211b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423421340"/>
        <function-ref name="clr" scoped="" ref="0x7f442341f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423421660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44234217f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423421980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423421b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423421ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423421e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423420020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44234201b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423420340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44234205d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423420760"/>
        <function-ref name="set" scoped="" ref="0x7f44234208f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423420a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44234214d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423420c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423420da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f4423462060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f4423462060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44234627e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423462970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423462b00"/>
        <function-ref name="clr" scoped="" ref="0x7f44234607f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423462e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423461020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44234611b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423461340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44234614d0"/>
        <function-ref name="get" scoped="" ref="0x7f4423461660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44234617f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423461980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423461b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423461da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423460020"/>
        <function-ref name="set" scoped="" ref="0x7f44234601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423460340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423462c90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44234604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423460660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233ee540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233ee540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233ee8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233eea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233eebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233ec980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233ed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233ed340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233ed660"/>
        <function-ref name="get" scoped="" ref="0x7f44233ed7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233edb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233edca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233ec020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233ec1b0"/>
        <function-ref name="set" scoped="" ref="0x7f44233ec340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233ec4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233ec660"/>
        <function-ref name="clr" scoped="" ref="0x7f44233eed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233e9b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233e9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233e8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233e81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233e8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233e6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233e8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233e87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233e8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233e8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233e8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f44233e8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233e7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233e71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233e7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233e75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233e7760"/>
        <function-ref name="set" scoped="" ref="0x7f44233e78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233e7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233e7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233e84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233e7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233e3060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233e3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233e33e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233e3570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233e3700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233e14d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233e3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233e3bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233e3d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233e21b0"/>
        <function-ref name="get" scoped="" ref="0x7f44233e2340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233e24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233e2660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233e27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233e2a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233e2c10"/>
        <function-ref name="set" scoped="" ref="0x7f44233e2da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233e1020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233e11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44233e3890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233de540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233de540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233de8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233dea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233debe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233dc980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233dd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233dd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233dd660"/>
        <function-ref name="get" scoped="" ref="0x7f44233dd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233dd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233ddb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233ddca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233dc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233dc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f44233dc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233dc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233dc660"/>
        <function-ref name="clr" scoped="" ref="0x7f44233ded70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233d9b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233d9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233d8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233d81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233d8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233d8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233d87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233d8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233d8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233d8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f44233d8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233d7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233d71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233d7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233d75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233d7760"/>
        <function-ref name="set" scoped="" ref="0x7f44233d78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233d7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233d7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233d84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233d7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233d3060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233d3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233d33e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233d3570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233d3700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233d14d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233d3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233d3bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233d3d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233d2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233d21b0"/>
        <function-ref name="get" scoped="" ref="0x7f44233d2340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233d24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233d2660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233d2a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233d2c10"/>
        <function-ref name="set" scoped="" ref="0x7f44233d2da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233d1020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233d11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44233d3890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233ce540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233ce540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233ce8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233cea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233cebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233cc980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233cd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233cd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233cd660"/>
        <function-ref name="get" scoped="" ref="0x7f44233cd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233cd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233cdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233cdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233cc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233cc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f44233cc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233cc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233cc660"/>
        <function-ref name="clr" scoped="" ref="0x7f44233ced70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233cc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233c9b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233c9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233c7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233c71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233c7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233c5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233c7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233c77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233c7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233c7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233c7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f44233c7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233c61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233c6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233c65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233c6760"/>
        <function-ref name="set" scoped="" ref="0x7f44233c68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233c6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233c6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233c74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233c6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233c2060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233c2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233c23e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233c2570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233c2700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233c04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233c2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233c2bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233c2d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233c1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233c11b0"/>
        <function-ref name="get" scoped="" ref="0x7f44233c1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233c14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233c1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233c17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233c1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233c1c10"/>
        <function-ref name="set" scoped="" ref="0x7f44233c1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233c0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44233c2890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233bd540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233bd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233bd8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233bda50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233bdbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233bb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233bc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233bc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233bc660"/>
        <function-ref name="get" scoped="" ref="0x7f44233bc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233bc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233bcb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233bcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233bb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233bb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f44233bb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233bb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233bb660"/>
        <function-ref name="clr" scoped="" ref="0x7f44233bdd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233b8b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233b8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233b7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233b71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233b7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233b7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233b77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233b7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233b7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233b7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f44233b7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233b6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233b61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233b6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233b65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233b6760"/>
        <function-ref name="set" scoped="" ref="0x7f44233b68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233b6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233b6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233b74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233b2060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233b2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233b23e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233b2570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233b2700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233b04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233b2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233b2bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233b2d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233b11b0"/>
        <function-ref name="get" scoped="" ref="0x7f44233b1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233b14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233b1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233b17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233b1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233b1c10"/>
        <function-ref name="set" scoped="" ref="0x7f44233b1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233b0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44233b2890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233ad6d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233ad6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233ada50"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233adbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233add70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233aba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233ac340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233ac4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233ac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233ac7f0"/>
        <function-ref name="get" scoped="" ref="0x7f44233ac980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233acb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233acca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233ace30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233ab120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233ab2b0"/>
        <function-ref name="set" scoped="" ref="0x7f44233ab440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233ab5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233ab760"/>
        <function-ref name="clr" scoped="" ref="0x7f44233ac020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233a8b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233a8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233a7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233a71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233a7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233a5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233a7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233a77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233a7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233a7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233a7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f44233a7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233a6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233a61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233a6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233a65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233a6760"/>
        <function-ref name="set" scoped="" ref="0x7f44233a68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233a6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233a6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233a74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233a6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44233a2060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44233a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233a23e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233a2570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44233a2700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44233a04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44233a2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233a2bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44233a2d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233a11b0"/>
        <function-ref name="get" scoped="" ref="0x7f44233a1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233a14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233a1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233a17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233a1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233a1c10"/>
        <function-ref name="set" scoped="" ref="0x7f44233a1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233a0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44233a01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44233a2890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442339d540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442339d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442339d8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442339da50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442339dbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442339a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f442339b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442339b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442339b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442339b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442339b660"/>
        <function-ref name="get" scoped="" ref="0x7f442339b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442339b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442339bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442339bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442339a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442339a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f442339a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442339a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442339a660"/>
        <function-ref name="clr" scoped="" ref="0x7f442339dd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442339a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423397b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423397b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423396020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233961b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423396340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423394020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423396660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233967f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423396980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423396b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423396ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423396e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423395020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233951b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423395340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233955d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423395760"/>
        <function-ref name="set" scoped="" ref="0x7f44233958f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423395a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423395c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233964d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423395da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423391060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423391060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233913e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423391570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423391700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442338f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423391a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423391bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423391d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423390020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233901b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423390340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233904d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423390660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233907f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423390a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423390c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423390da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442338f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442338f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4423391890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442338f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442338c540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442338c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442338c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442338ca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442338cbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442338a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f442338b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442338b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442338b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442338b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442338b660"/>
        <function-ref name="get" scoped="" ref="0x7f442338b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442338b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442338bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442338bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442338a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442338a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f442338a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442338a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442338a660"/>
        <function-ref name="clr" scoped="" ref="0x7f442338cd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442338a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423387b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423387b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423386020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233861b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423386340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423384020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423386660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233867f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423386980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423386b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423386ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423386e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423385020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233851b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423385340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233855d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423385760"/>
        <function-ref name="set" scoped="" ref="0x7f44233858f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423385a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423385c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233864d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423385da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423381060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423381060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233813e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423381570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423381700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442337f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423381a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423381bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423381d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423380020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44233801b0"/>
        <function-ref name="get" scoped="" ref="0x7f4423380340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44233804d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423380660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44233807f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423380a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423380c10"/>
        <function-ref name="set" scoped="" ref="0x7f4423380da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442337f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442337f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4423381890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442337f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442337c540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442337c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442337c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442337ca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442337cbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442337a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f442337b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442337b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442337b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442337b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442337b660"/>
        <function-ref name="get" scoped="" ref="0x7f442337b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442337b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442337bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442337bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442337a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442337a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f442337a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442337a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442337a660"/>
        <function-ref name="clr" scoped="" ref="0x7f442337cd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442337a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423377b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423377b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423376020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233761b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423376340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423374020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423376660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233767f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423376980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423376b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423376ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423376e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423375020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233751b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423375340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233755d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423375760"/>
        <function-ref name="set" scoped="" ref="0x7f44233758f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423375a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423375c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233764d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423375da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423370060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423370060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233703e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423370570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423370700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442336e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423370a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423370bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423370d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442336f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442336f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442336f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442336f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442336f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442336f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442336fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442336fc10"/>
        <function-ref name="set" scoped="" ref="0x7f442336fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442336e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442336e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4423370890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442336e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442336b740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442336b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442336bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442336bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442336bde0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423369a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f442336a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442336a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442336a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442336a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442336a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f442336a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442336ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442336aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442336ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423369120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233692b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423369440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233695d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423369760"/>
        <function-ref name="clr" scoped="" ref="0x7f442336a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423366b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423366b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423365020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233651b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423365340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423363020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423365660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233657f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423365980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423365b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423365ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423365e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423364020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233641b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423364340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233645d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423364760"/>
        <function-ref name="set" scoped="" ref="0x7f44233648f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423364a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423364c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233654d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423364da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423360060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423360060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233603e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423360570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423360700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442335e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423360a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423360bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423360d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442335f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442335f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442335f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442335f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442335f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442335f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442335fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442335fc10"/>
        <function-ref name="set" scoped="" ref="0x7f442335fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442335e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442335e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4423360890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442335e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442335b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442335b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442335b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442335ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442335bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423359980"/>
        <function-ref name="toggle" scoped="" ref="0x7f442335a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442335a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442335a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442335a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442335a660"/>
        <function-ref name="get" scoped="" ref="0x7f442335a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442335a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442335ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442335aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423359020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233591b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423359340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233594d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423359660"/>
        <function-ref name="clr" scoped="" ref="0x7f442335bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423356b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423356b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423355020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233551b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423355340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423353020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423355660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233557f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423355980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423355b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423355ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423355e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423354020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233541b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423354340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233545d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423354760"/>
        <function-ref name="set" scoped="" ref="0x7f44233548f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423354a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423354c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233554d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423354da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423350060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423350060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233503e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423350570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423350700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442334e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423350a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423350bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423350d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442334f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442334f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442334f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442334f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442334f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442334f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442334fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442334fc10"/>
        <function-ref name="set" scoped="" ref="0x7f442334fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442334e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442334e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4423350890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442334e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442334b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442334b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442334b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442334ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442334bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423348980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423349020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423349340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423349660"/>
        <function-ref name="get" scoped="" ref="0x7f44233497f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423349980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423349b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423349ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423348020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233481b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423348340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233484d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423348660"/>
        <function-ref name="clr" scoped="" ref="0x7f442334bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423345b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423345b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423344020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233441b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423344340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423342020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423344660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233447f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423344980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423344b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423344ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423344e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423343020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233431b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423343340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233435d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423343760"/>
        <function-ref name="set" scoped="" ref="0x7f44233438f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423343a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423343c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233444d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423343da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442333f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442333f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442333f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442333f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442333f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442333d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442333fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442333fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442333fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442333e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442333e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442333e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442333e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442333e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442333e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442333ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442333ec10"/>
        <function-ref name="set" scoped="" ref="0x7f442333eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442333d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442333d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f442333f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442333d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442333a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442333a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442333a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442333aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442333abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423338980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423339020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233391b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423339340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423339660"/>
        <function-ref name="get" scoped="" ref="0x7f44233397f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423339980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423339b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423339ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423338020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233381b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423338340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233384d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423338660"/>
        <function-ref name="clr" scoped="" ref="0x7f442333ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423335b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423335b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423334020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233341b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423334340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423332020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423334660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233347f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423334980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423334b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423334ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423334e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423333020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233331b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423333340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233335d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423333760"/>
        <function-ref name="set" scoped="" ref="0x7f44233338f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423333a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423333c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233344d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423333da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442332f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442332f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442332f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442332f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442332f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442332d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442332fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442332fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442332fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442332e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442332e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442332e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442332e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442332e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442332e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442332ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442332ec10"/>
        <function-ref name="set" scoped="" ref="0x7f442332eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442332d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442332d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f442332f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442332d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442332a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442332a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442332a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442332aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442332abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423328980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423329020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423329340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423329660"/>
        <function-ref name="get" scoped="" ref="0x7f44233297f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423329980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423329b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423329ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423328020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233281b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423328340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233284d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423328660"/>
        <function-ref name="clr" scoped="" ref="0x7f442332ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423325b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423325b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423324020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233241b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423324340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423322020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423324660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233247f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423324980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423324b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423324ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423324e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423323020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233231b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423323340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233235d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423323760"/>
        <function-ref name="set" scoped="" ref="0x7f44233238f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423323a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423323c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233244d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423323da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442331f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442331f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442331f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442331f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442331f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442331c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442331fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442331fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442331fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442331d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442331d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442331d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442331d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442331d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442331d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442331da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442331dc10"/>
        <function-ref name="set" scoped="" ref="0x7f442331dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442331c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442331c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f442331f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442331c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423319540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423319540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233198c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423319a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423319be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423317980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423318020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423318340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423318660"/>
        <function-ref name="get" scoped="" ref="0x7f44233187f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423318980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423318b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423318ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423317020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233171b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423317340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233174d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423317660"/>
        <function-ref name="clr" scoped="" ref="0x7f4423319d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423314b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423314b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423313020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233131b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423313340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423311020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423313660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233137f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423313980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423313b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423313ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423313e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423312020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233121b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423312340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233125d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423312760"/>
        <function-ref name="set" scoped="" ref="0x7f44233128f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423312a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423312c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233134d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423312da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f442330e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f442330e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442330e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442330e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442330e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442330c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442330ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442330ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442330ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442330d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442330d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442330d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442330d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442330d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442330d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442330da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442330dc10"/>
        <function-ref name="set" scoped="" ref="0x7f442330dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442330c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442330c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f442330e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442330c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423309540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423309540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44233098c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423309a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423309be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423307980"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423308020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423308340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44233084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423308660"/>
        <function-ref name="get" scoped="" ref="0x7f44233087f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423308980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423308b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423308ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423307020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44233071b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423307340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44233074d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423307660"/>
        <function-ref name="clr" scoped="" ref="0x7f4423309d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44233077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4423304b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4423304b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423303020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44233031b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423303340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423301020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423303660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44233037f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423303980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423303b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423303ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4423303e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423302020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44233021b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423302340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44233025d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423302760"/>
        <function-ref name="set" scoped="" ref="0x7f44233028f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4423302a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423302c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44233034d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4423302da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44232fe060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44232fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44232fe3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44232fe570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44232fe700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44232fc4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44232fea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44232febb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44232fed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44232fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44232fd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f44232fd340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44232fd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44232fd660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44232fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44232fda80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44232fdc10"/>
        <function-ref name="set" scoped="" ref="0x7f44232fdda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44232fc020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44232fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44232fe890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44232fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44232f9540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44232f9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44232f98c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44232f9a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44232f9be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44232f7980"/>
        <function-ref name="toggle" scoped="" ref="0x7f44232f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44232f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44232f8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44232f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44232f8660"/>
        <function-ref name="get" scoped="" ref="0x7f44232f87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44232f8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44232f8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44232f8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44232f7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44232f71b0"/>
        <function-ref name="set" scoped="" ref="0x7f44232f7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44232f74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44232f7660"/>
        <function-ref name="clr" scoped="" ref="0x7f44232f9d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44232f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44232f3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44232f3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44232f2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44232f21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44232f2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44232f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44232f2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44232f27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44232f2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44232f2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44232f2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f44232f2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44232f1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44232f11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44232f1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44232f15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44232f1760"/>
        <function-ref name="set" scoped="" ref="0x7f44232f18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44232f1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44232f1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f44232f24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44232f1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f44232ed060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f44232ed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44232ed3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44232ed570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f44232ed700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44232eb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44232eda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44232edbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44232edd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44232ec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44232ec1b0"/>
        <function-ref name="get" scoped="" ref="0x7f44232ec340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44232ec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44232ec660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44232ec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f44232eca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44232ecc10"/>
        <function-ref name="set" scoped="" ref="0x7f44232ecda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44232eb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f44232eb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44232ed890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44232eb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f442325fc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f442325fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442325e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442325e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442325e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442325c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442325e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442325e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442325e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442325eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442325eca0"/>
        <function-ref name="get" scoped="" ref="0x7f442325ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442325d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442325d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442325d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442325d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442325d760"/>
        <function-ref name="set" scoped="" ref="0x7f442325d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442325da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442325dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f442325e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442325dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f44232709e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f44232709e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423270d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f442325f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442325f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442325f340"/>
        <function-ref name="get" scoped="" ref="0x7f442325f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442325f660"/>
        <function-ref name="set" scoped="" ref="0x7f442325f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f442325f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f44232592f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f44232592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423259670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423259800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423259990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423257660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423259cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423259e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4423258020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f44232581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4423258340"/>
        <function-ref name="get" scoped="" ref="0x7f44232584d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423258660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f44232587f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423258980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423258c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4423258da0"/>
        <function-ref name="set" scoped="" ref="0x7f4423257020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44232571b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423257340"/>
        <function-ref name="clr" scoped="" ref="0x7f4423259b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44232574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f442325a020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f442325a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442325a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442325a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f442325a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442325a850"/>
        <function-ref name="get" scoped="" ref="0x7f442325a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442325ab70"/>
        <function-ref name="set" scoped="" ref="0x7f442325ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f4423259020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f44232547a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f44232547a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4423254b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423254cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4423254e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4423252a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44232531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423253340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44232534d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4423253660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44232537f0"/>
        <function-ref name="get" scoped="" ref="0x7f4423253980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4423253b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4423253ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4423253e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4423252120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44232522b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423252440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44232525d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4423252760"/>
        <function-ref name="clr" scoped="" ref="0x7f4423253020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f44232528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4423255630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4423255630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44232559b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4423255b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4423255cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4423255e60"/>
        <function-ref name="get" scoped="" ref="0x7f4423254020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44232541b0"/>
        <function-ref name="set" scoped="" ref="0x7f4423254340"/>
        <function-ref name="clr" scoped="" ref="0x7f44232544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4423245760" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4423245760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4423245ae0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4423245c70"/>
        <function-ref name="start" scoped="" ref="0x7f4423245e00"/>
        <function-ref name="stop" scoped="" ref="0x7f4423242020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f44232427f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f44232427f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4423242b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4423242d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4423241020"/>
        <function-ref name="cancel" scoped="" ref="0x7f44232411b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4423241340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4423240880" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4423240880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4423240c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f442323f020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f442323f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442323f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f442323f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442323f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442323f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f442323f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f442323b310" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442323b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4423236880"/>
        <function-ref name="clear" scoped="" ref="0x7f442322d020"/>
        <function-ref name="isValid" scoped="" ref="0x7f4423236150"/>
        <function-ref name="set" scoped="" ref="0x7f442322d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4423221130" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4423221130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f44232214b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4423221640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f44232217d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4423221960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4423241b20" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4423241b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4423240020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f442323c080" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f442323c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f442323c400"/>
        <function-ref name="noAck" scoped="" ref="0x7f442323c590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f442323c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f442323fc90" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f442323fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f442323e0a0"/>
        <function-ref name="source" scoped="" ref="0x7f442323e230"/>
        <function-ref name="address" scoped="" ref="0x7f442323e3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f442323e550"/>
        <function-ref name="setSource" scoped="" ref="0x7f442323e6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f442323e870"/>
        <function-ref name="type" scoped="" ref="0x7f442323ea00"/>
        <function-ref name="setType" scoped="" ref="0x7f442323eb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f442323ed20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f442323d020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f442323d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f442322c3f0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f442322c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f442322b970"/>
        <function-ref name="clear" scoped="" ref="0x7f44232290d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f442322b240"/>
        <function-ref name="set" scoped="" ref="0x7f4423229800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4423214cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4423214cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44232130a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4423213230"/>
        <function-ref name="start" scoped="" ref="0x7f44232133c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4423213550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f44231fae30" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231fae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f44232021e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4423202370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4423202500"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4423202690"/>
        <function-ref name="setCca" scoped="" ref="0x7f4423202820"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44232029b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f44231edd20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f44231edd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f44231f71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f442320e8f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f442320e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442320ec70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f442320ee00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442320d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442320d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f442320d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4423213d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4423213d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44232120e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4423212270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4423212400"/>
        <function-ref name="cancel" scoped="" ref="0x7f4423212590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4423212720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4423210c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f4423210c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442320f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f44232059b0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f44232059b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4423205d30"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f442320c020"/>
        <function-ref name="getRssi" scoped="" ref="0x7f442320c1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f442320c340"/>
        <function-ref name="getPower" scoped="" ref="0x7f442320c4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f442320c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4423202cb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4423202cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f44232000a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4423200230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f44232003c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4423200550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4423210020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4423210020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44232103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f442320c990" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f442320c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f442320cd10"/>
        <function-ref name="noAck" scoped="" ref="0x7f442320b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f442320b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f44231f8020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f44231f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f44231f83a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f44231f8530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f44231f86c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f44231f8850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f44231f89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f442320f2d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f442320f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f442320f650"/>
        <function-ref name="source" scoped="" ref="0x7f442320f7e0"/>
        <function-ref name="address" scoped="" ref="0x7f442320f970"/>
        <function-ref name="destination" scoped="" ref="0x7f442320fb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f442320fc90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f442320fe20"/>
        <function-ref name="type" scoped="" ref="0x7f442320e020"/>
        <function-ref name="setType" scoped="" ref="0x7f442320e1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f442320e340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f442320e4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f442320e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4423201c70" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4423201c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4423203020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f44231e9020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f44231e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44231e93a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f44231e9530"/>
        <function-ref name="start" scoped="" ref="0x7f44231e96c0"/>
        <function-ref name="stop" scoped="" ref="0x7f44231e9850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f44231d69d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f44231d69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f44231d6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f44231d5b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f44231d5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f44231d4020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f44231d41b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f44231d4340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f44231d44d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f44231d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f44231d7020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f44231d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f44231d73a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f44231d7530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f44231d76c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f44231d7850"/>
        <function-ref name="getPower" scoped="" ref="0x7f44231d79e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f44231d7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f44231e1a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f44231e1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44231e1df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44231da020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44231da1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44231da340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44231da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f44231d5080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f44231d5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f44231d5400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f44231d5590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f44231d5720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f44231d58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f44231e2690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f44231e2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44231e2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f44231d6020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44231d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f44231d63a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f44231d6530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f44231d66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44231e8530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44231e8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44231e88b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44231e8a40"/>
        <function-ref name="request" scoped="" ref="0x7f44231e8bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f44231e8d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44231e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f44231d9940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f44231d9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44231d9cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44231d9e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44231e2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f44231e21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44231e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f44231e2d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f44231e2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44231e1100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f44231e1290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44231e1420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44231e15b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f44231e1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f44231da840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f44231da840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44231dabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f44231d1390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f44231d1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44231d1710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f44231d18a0"/>
        <function-ref name="start" scoped="" ref="0x7f44231d1a30"/>
        <function-ref name="stop" scoped="" ref="0x7f44231d1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f44231cf330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231cf330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f44231cf6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f44231cf840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f44231cf9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f44231cfb60"/>
        <function-ref name="setCca" scoped="" ref="0x7f44231cfcf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44231cfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f44231d1e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f44231d1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44231d0220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44231d03b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44231d0540"/>
        <function-ref name="cancel" scoped="" ref="0x7f44231d06d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44231d0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f44231d0b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f44231d0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44231cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f44231cee70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f44231cee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44231cb220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f44231cb3b0"/>
        <function-ref name="start" scoped="" ref="0x7f44231cb540"/>
        <function-ref name="stop" scoped="" ref="0x7f44231cb6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f44231ca7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f44231ca7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f44231cab60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f44231cacf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f44231cae80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f44231c9030"/>
        <function-ref name="setCca" scoped="" ref="0x7f44231c91c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44231c9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f44231c0020" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f44231c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f44231c03a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f44231c0530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f44231c06c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f44231c0850"/>
        <function-ref name="setCca" scoped="" ref="0x7f44231c09e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44231c0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f44231b4330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f44231b4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f44231b46b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f44231b4840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f44231b49d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f44231b4b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f44231b4cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f44231b4e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f44231b6260" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f44231b6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44231b65e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44231b6770"/>
        <function-ref name="modify" scoped="" ref="0x7f44231b6900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44231b6a90"/>
        <function-ref name="resend" scoped="" ref="0x7f44231b6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f44231cb990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f44231cb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44231cbd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44231ca020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44231ca1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44231ca340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44231ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f44231b33b0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f44231b33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f44231b3730"/>
        <function-ref name="rand32" scoped="" ref="0x7f44231b38c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f44231bd610" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f44231bd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f44231bd990"/>
        <function-ref name="stop" scoped="" ref="0x7f44231bdb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f44231ac920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f44231ac920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f44231acca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f44231ace30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f44231b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f44231c1b00" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f44231c1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f44231c1e80"/>
        <function-ref name="rfOff" scoped="" ref="0x7f44231c7030"/>
        <function-ref name="rxOn" scoped="" ref="0x7f44231c71c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f44231c7350"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f44231c74e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f44231c7670"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f44231c7800"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f44231c7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f44231b3b80" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f44231b3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44231b5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f44231b51b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f44231b5340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44231b54d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44231b5660"/>
        <function-ref name="get" scoped="" ref="0x7f44231b57f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44231b5980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44231b4020"/>
        <function-ref name="set" scoped="" ref="0x7f44231b5b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f44231b5ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f44231b5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f44231c9640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44231c9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44231c99c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44231c9b50"/>
        <function-ref name="request" scoped="" ref="0x7f44231c9ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f44231c9e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44231c8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f44231af020" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f44231af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f44231af4a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f44231af630"/>
        <function-ref name="isState" scoped="" ref="0x7f44231af7c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f44231af950"/>
        <function-ref name="requestState" scoped="" ref="0x7f44231afae0"/>
        <function-ref name="forceState" scoped="" ref="0x7f44231afc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f44231a29e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f44231a29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44231a2d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f44231a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f44231a3a10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f44231a3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44231a3d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f44231a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f44231a4a00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f44231a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44231a4d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f44231a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4423149b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4423149b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4423155020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f44231551b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4423155340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f44231554d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4423155660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f44231557f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4423155980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4423155b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4423155ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4423155e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4423154020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f44231541b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4423154340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f44231545d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4423154760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4423147020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4423147020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423147c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f44231460d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4423154a60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4423154a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4423154de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4423148020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f44231481b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4423148340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f44231484d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4423148660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f44231487f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4423148980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f442315a720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f442315a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f442315aaa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f442315ac30"/>
        <function-ref name="request" scoped="" ref="0x7f442315adc0"/>
        <function-ref name="granted" scoped="" ref="0x7f4423156020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44231561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f442313f970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f442313f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f442313fcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f442313fe80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f442313e030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f442313e1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f442313e350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f442313e4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f442313e670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f442313e800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f442313e990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f442313eb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f442313ecb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f442313ee40"/>
        <function-ref name="sync" scoped="" ref="0x7f442313d020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f442313d2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f442313d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f44231178e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f44231178e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423117c60"/>
        <function-ref name="write" scoped="" ref="0x7f4423117df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4423138020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4423138020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f44231383a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f4423130d90" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f4423130d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f442312f670"/>
        <function-ref name="fired" scoped="" ref="0x7f44231365d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f442312f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4423136a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f442312fb30"/>
        <function-ref name="start" scoped="" ref="0x7f4423137bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f4423136110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f442311b5f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f442311b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442311b970"/>
        <function-ref name="write" scoped="" ref="0x7f442311bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f442312c380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f442312c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442312c700"/>
        <function-ref name="isInput" scoped="" ref="0x7f442312c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f442312ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442312cbb0"/>
        <function-ref name="get" scoped="" ref="0x7f442312cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442312b020"/>
        <function-ref name="set" scoped="" ref="0x7f442312b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f442312b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f442313cb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f442313cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442313b750"/>
        <function-ref name="readDone" scoped="" ref="0x7f442313bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f4423105820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f4423105820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4423105ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4423105d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f44231161c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f44231161c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423116540"/>
        <function-ref name="write" scoped="" ref="0x7f44231166d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4423116a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4423116a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423116df0"/>
        <function-ref name="write" scoped="" ref="0x7f4423115020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f44231203d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f44231203d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423120750"/>
        <function-ref name="write" scoped="" ref="0x7f44231208e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4423121810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4423121810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4423121b90"/>
        <function-ref name="changed" scoped="" ref="0x7f4423121d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4423128020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f44231281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f442312d060" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f442312d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442312d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f442312d570"/>
        <function-ref name="toggle" scoped="" ref="0x7f442312d700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442312d890"/>
        <function-ref name="get" scoped="" ref="0x7f442312da20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442312dbb0"/>
        <function-ref name="set" scoped="" ref="0x7f442312dd40"/>
        <function-ref name="clr" scoped="" ref="0x7f442312c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f4423114120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4423114120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44231146a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f442312b6a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f442312b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442312ba20"/>
        <function-ref name="isInput" scoped="" ref="0x7f442312bbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f442312bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442312a020"/>
        <function-ref name="get" scoped="" ref="0x7f442312a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442312a340"/>
        <function-ref name="set" scoped="" ref="0x7f442312a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f442312a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44231404a0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44231404a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4423140820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4423117020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4423117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44231173a0"/>
        <function-ref name="write" scoped="" ref="0x7f4423117530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f4423114a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4423114a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4423114dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f44231131d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f44231131d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4423113550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44231136e0"/>
        <function-ref name="request" scoped="" ref="0x7f4423113870"/>
        <function-ref name="granted" scoped="" ref="0x7f4423113a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4423113b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f4423111d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f4423111d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4423110180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4423110310"/>
        <function-ref name="request" scoped="" ref="0x7f44231104a0"/>
        <function-ref name="granted" scoped="" ref="0x7f4423110630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44231107c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f442313d740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f442313d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f442313dac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f442313dc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f442313dde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f442313c020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f442313c1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f442313c340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f442313c4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f442313c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f4423120c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4423120c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442311b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f442311b230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f4423119b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4423119b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423119e80"/>
        <function-ref name="write" scoped="" ref="0x7f4423120030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f44231122b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f44231122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4423112630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4423110a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4423110a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4423110e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f442310f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f442310f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f442310f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f442310f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f442310f660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f442310f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f442310fe30"/>
        <function-ref name="set" scoped="" ref="0x7f442310f980"/>
        <function-ref name="led0On" scoped="" ref="0x7f442310fb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f442310fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f4423106940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f4423106940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4423106cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4423106e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4423140b10" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4423140b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f442313f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f442313f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f442313f340"/>
        <function-ref name="granted" scoped="" ref="0x7f442313f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f442313f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f4423124520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4423124520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44231248a0"/>
        <function-ref name="write" scoped="" ref="0x7f4423124a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f442311ca90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f442311ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4423124020"/>
        <function-ref name="write" scoped="" ref="0x7f44231241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f44231290e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f44231290e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4423129460"/>
        <function-ref name="disable" scoped="" ref="0x7f44231295f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4423129780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4423129910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f4423111020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f4423111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44231113a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4423111530"/>
        <function-ref name="request" scoped="" ref="0x7f44231116c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4423111850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44231119e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f44231129c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f44231129c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4423112d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f442308fc70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f442308fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f442308c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f442308c690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f442308c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4423089020"/>
        <function-ref name="fired" scoped="" ref="0x7f442308a020"/>
        <function-ref name="startAt" scoped="" ref="0x7f442308a9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f442308a4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44230894e0"/>
        <function-ref name="start" scoped="" ref="0x7f442308b5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f442308bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4423087d40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4423087d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44230860e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f44230865f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f44230865f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4422e41e50"/>
        <function-ref name="fired" scoped="" ref="0x7f4422e42e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f4422e41800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4422e41340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4422e40340"/>
        <function-ref name="start" scoped="" ref="0x7f4422e42430"/>
        <function-ref name="stop" scoped="" ref="0x7f4422e42940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f44219c2b90" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f44219c2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44219bf4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f44219c04e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f44219c0e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44219c09a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44219bf9a0"/>
        <function-ref name="start" scoped="" ref="0x7f44219c19d0"/>
        <function-ref name="stop" scoped="" ref="0x7f44219c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44219c2340" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44219c2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44219c26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f44219bbc20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f44219bbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44219b74e0"/>
        <function-ref name="fired" scoped="" ref="0x7f44219b84e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f44219b8e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44219b89a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44219b79a0"/>
        <function-ref name="start" scoped="" ref="0x7f44219b9a80"/>
        <function-ref name="stop" scoped="" ref="0x7f44219b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44219bb3d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44219bb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44219bb750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f44219a1440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f44219a1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f44219a17c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f44219a1950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f44219a1ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f44219a1c70"/>
        <function-ref name="fired" scoped="" ref="0x7f44219a1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f44219a49d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f44219a49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44219a4d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f44219a3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44219a31b0"/>
        <function-ref name="get" scoped="" ref="0x7f44219a3340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44219a34d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f44219a3660"/>
        <function-ref name="getMode" scoped="" ref="0x7f44219a37f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44219a3980"/>
        <function-ref name="overflow" scoped="" ref="0x7f44219a3b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f44219a3ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f44219a3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f44219a2120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f44219a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f44219a24a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f44219a2630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44219a27c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f44219a2950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44219a2ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44219a2c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f44219a2e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f44219a1020"/>
        <function-ref name="setControl" scoped="" ref="0x7f44219a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f44230503f0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f44230503f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423050770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4423050900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4423050a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4423050c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4423050db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f442305ccd0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f442305ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44230540a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4423054230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44230543c0"/>
        <function-ref name="get" scoped="" ref="0x7f4423054550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44230546e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423054870"/>
        <function-ref name="getMode" scoped="" ref="0x7f4423054a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4423054b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f4423054d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f4423053020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f44230531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4423053a40" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4423053a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4423053dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4423052020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44230521b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4423052340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44230524d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4423052660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f44230527f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4423052980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4423052b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f4423040a50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f4423040a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4423040dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f442303f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442303f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f442303f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f442303f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442303f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f442303f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f442303f980"/>
        <function-ref name="setControl" scoped="" ref="0x7f442303fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f442303b5a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f442303b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f442303b920"/>
        <function-ref name="getControl" scoped="" ref="0x7f442303bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442303bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f442303bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f442303a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442303a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f442303a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f442303a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f442303a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f4423041a20" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f4423041a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423041da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423040020"/>
        <function-ref name="captured" scoped="" ref="0x7f44230401b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423040340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230404d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423040660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f442302e3e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f442302e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442302e760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f442302e8f0"/>
        <function-ref name="captured" scoped="" ref="0x7f442302ea80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442302ec10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442302eda0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f442302d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f4423047bb0" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f4423047bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423041020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f44230411b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4423041340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f44230414d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4423041660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f442302f570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f442302f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442302f8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f442302fa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f442302fc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f442302fda0"/>
        <function-ref name="fired" scoped="" ref="0x7f442302e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f4423025da0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f4423025da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423024180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423024310"/>
        <function-ref name="captured" scoped="" ref="0x7f44230244a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423024630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230247c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423024950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f442302d410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f442302d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f442302d790"/>
        <function-ref name="getControl" scoped="" ref="0x7f442302d920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442302dab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f442302dc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f442302ddd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442302c020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f442302c1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f442302c340"/>
        <function-ref name="setControl" scoped="" ref="0x7f442302c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f442304b280" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f442304b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f442304b600"/>
        <function-ref name="getControl" scoped="" ref="0x7f442304b790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442304b920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f442304bab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f442304bc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442304bdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f442304a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f442304a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f442304a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f4423035da0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f4423035da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423034180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423034310"/>
        <function-ref name="captured" scoped="" ref="0x7f44230344a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423034630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230347c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423034950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f4423035020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f4423035020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f44230353a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4423035530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f44230356c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4423035850"/>
        <function-ref name="fired" scoped="" ref="0x7f44230359e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f4423037a50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f4423037a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4423037dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4423036020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44230361b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4423036340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44230364d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4423036660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f44230367f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4423036980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4423036b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f442303eda0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f442303eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442303d180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f442303d310"/>
        <function-ref name="captured" scoped="" ref="0x7f442303d4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442303d630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442303d7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f442303d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f442302b890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f442302b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442302bc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f442302bda0"/>
        <function-ref name="captured" scoped="" ref="0x7f442302a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442302a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442302a340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f442302a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f4423034d40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f4423034d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f44230330e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4423033270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4423033400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4423033590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4423033720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44230338b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4423033a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4423033bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4423033d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f442303e020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f442303e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442303e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f442303e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f442303e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f442303e850"/>
        <function-ref name="fired" scoped="" ref="0x7f442303e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f442304fa30" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f442304fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442304fdb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f442304c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442304c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f442304c340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442304c4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442304c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f442304c7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442304c980"/>
        <function-ref name="overflow" scoped="" ref="0x7f442304cb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f442304cca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f442304ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f442302c890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f442302c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442302ce10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f442302b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f442302b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f442302b340"/>
        <function-ref name="fired" scoped="" ref="0x7f442302b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f4423048730" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f4423048730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4423048ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4423048c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4423048dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4423047020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44230471b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4423047340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f44230474d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4423047660"/>
        <function-ref name="setControl" scoped="" ref="0x7f44230477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f442302a8c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f442302a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f442302ac40"/>
        <function-ref name="getControl" scoped="" ref="0x7f442302add0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4423029020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f44230291b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4423029340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44230294d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4423029660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f44230297f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4423029980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f4423042690" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f4423042690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423042a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423042ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f4423042d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423048020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230481b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423048340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f4423031020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f4423031020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f44230313a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423031530"/>
        <function-ref name="captured" scoped="" ref="0x7f44230316c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423031850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230319e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423031b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f442304a700" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f442304a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442304aa80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f442304ac10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f442304ada0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4423049020"/>
        <function-ref name="fired" scoped="" ref="0x7f44230491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f4423032160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f4423032160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f44230324e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4423032670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4423032800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4423032990"/>
        <function-ref name="fired" scoped="" ref="0x7f4423032b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f4423028ae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f4423028ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423028e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423027020"/>
        <function-ref name="captured" scoped="" ref="0x7f44230271b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423027340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230274d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423027660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f4423030020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f4423030020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f44230303a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4423030530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44230306c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4423030850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44230309e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4423030b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4423030d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f442302f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f442302f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f442303dcd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f442303dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442303c0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f442303c230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442303c3c0"/>
        <function-ref name="get" scoped="" ref="0x7f442303c550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442303c6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442303c870"/>
        <function-ref name="getMode" scoped="" ref="0x7f442303ca00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442303cb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f442303cd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f442303b020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f442303b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f4423038a20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f4423038a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423038da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4423037020"/>
        <function-ref name="captured" scoped="" ref="0x7f44230371b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4423037340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44230374d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4423037660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f4423029d40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f4423029d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f44230280e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4423028270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4423028400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4423028590"/>
        <function-ref name="fired" scoped="" ref="0x7f4423028720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f4423025020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f4423025020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f44230253a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4423025530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f44230256c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4423025850"/>
        <function-ref name="fired" scoped="" ref="0x7f44230259e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f442303aa20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f442303aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4423038020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f44230381b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4423038340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f44230384d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4423038660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f4423027a50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f4423027a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4423027dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4423026020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44230261b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4423026340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44230264d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4423026660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f44230267f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4423026980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4423026b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4422fec940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4422fec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422feccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4422fec2f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4422fec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fec670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4422fea020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4422fea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4422fedbf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422fedbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4422fee3e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422fee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422fee760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422fee8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422feea80"/>
        <function-ref name="get" scoped="" ref="0x7f4422feec10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422feeda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422fed020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422fed1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422fed340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422fed4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422fed660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422fed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4422fe4750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4422fe4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fe4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4422fe4100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4422fe4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fe4480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4422fe4da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4422fe4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fe3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4422fe5a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422fe5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422fe5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4422fe6260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422fe6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422fe65e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422fe6770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422fe6900"/>
        <function-ref name="get" scoped="" ref="0x7f4422fe6a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422fe6c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422fe6db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422fe5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422fe51b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422fe5340"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422fe54d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422fe5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f997a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f99b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f99cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f99e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f98020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f981b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422fe06d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422fe06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422fe0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422fe0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422fe0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f9a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f9a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f9a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f9a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f9a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f97c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f97c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f9aac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f9aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f9ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f99020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f991b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f99340"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f98610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f98610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f98990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f98b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f98cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4422f98e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f97020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f971b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f97340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f974d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f97660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f977f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f97980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f92cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f92cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f910a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f91230"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f913c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f91550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f916e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f91870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f94b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f94b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f93020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f931b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f93340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f934d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f93660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f937f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f93980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f93b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f93ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f8f2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f8f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f8f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f92020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f923a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f92530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f926c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f92850"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f929e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f91b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f91b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f90020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f901b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f90340"/>
        <function-ref name="get" scoped="" ref="0x7f4422f904d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f90660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f907f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f90980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f90b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f90ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f90e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f892f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f89670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f89800"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f89990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f89b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f89cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f89e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f8b220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f8b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f8b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f8b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f8b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f8ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f8bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f8bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f8a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f8a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f8a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f877a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f87b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f8a610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f8a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f8a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f8ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f8acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f8ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f88160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f88160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f884e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f88670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f88800"/>
        <function-ref name="get" scoped="" ref="0x7f4422f88990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f88b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f88cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f88e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f87020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f871b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f87340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f827a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f827a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f82b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f82cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f82e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f81020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f811b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f846d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f846d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f84a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f84be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f84d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f83020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f831b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f83340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f834d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f83660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f837f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f80c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f80c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f83ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f83ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f83e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f82020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f821b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f82340"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f81610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f81610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f81990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f81b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f81cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4422f81e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f80020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f801b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f80340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f804d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f80660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f807f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f80980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f7acb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f7acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f790a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f79230"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f793c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f79550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f796e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f79870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f7cb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f7cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f7b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f7b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f7b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f7b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f7b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f7b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f7b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f7bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f7bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f772f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f77670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f7a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f7a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f7a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f7a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f7a850"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f7a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f79b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f79b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f78020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f781b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f78340"/>
        <function-ref name="get" scoped="" ref="0x7f4422f784d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f78660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f787f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f78980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f78b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f78ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f78e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f722f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f72670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f72800"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f72990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f72b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f72cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f72e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f74220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f74220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f745a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f74730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f748c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f74a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f74be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f74d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f73020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f731b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f707a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f707a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f70b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f73610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f73610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f73990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f73b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f73cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f73e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f72020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f71160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f71160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f714e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f71670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f71800"/>
        <function-ref name="get" scoped="" ref="0x7f4422f71990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f71b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f71cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f71e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f70020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f701b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f70340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f6a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f6a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f6ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f6acb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f6ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f69020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f691b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f6c6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f6c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f6ca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f6cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f6cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f6b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f6b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f6b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f6b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f6b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f6b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f68c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f68c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f6bac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f6bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f6be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f6a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f6a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f6a340"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f6a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f69610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f69610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f69990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f69b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f69cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4422f69e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f68020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f681b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f68340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f684d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f68660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f687f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f68980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f63cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f63cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f620a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f62230"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f623c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f62550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f626e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f62870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f65b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f65b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f64020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f64340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f644d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f64660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f647f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f64980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f64b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f64ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f602f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f60670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f63020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f633a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f63530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f636c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f63850"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f639e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f62b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f62b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f61020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f611b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f61340"/>
        <function-ref name="get" scoped="" ref="0x7f4422f614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f61660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f617f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f61980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f61b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f61ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f61e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f5a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f5a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f5a800"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f5a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f5ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f5acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f5ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f5d220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f5d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f5d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f5d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f5d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f5da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f5dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f5dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f5b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f5b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f5b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f587a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f587a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f58b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f5b610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f5b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f5b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f5bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f5bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f5be40"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f59160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f59160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f594e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f59670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f59800"/>
        <function-ref name="get" scoped="" ref="0x7f4422f59990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f59b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f59cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f59e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f58020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f581b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f58340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422f537a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422f537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f53b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422f53cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4422f53e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f52020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f521b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422f52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4422f556d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4422f556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422f55a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422f55be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f55d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422f54020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422f541b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f54340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422f544d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422f54660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422f547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4422f51c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4422f51c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4422f54ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4422f54ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422f54e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4422f53020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4422f531b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4422f53340"/>
        <function-ref name="fired" scoped="" ref="0x7f4422f534d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4422f52610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422f52610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422f52990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422f52b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422f52cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4422f52e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422f51020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422f511b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422f51340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422f514d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422f51660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422f517f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422f51980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f4422f4abc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4422f4abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f4422f4c3f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4422f4c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f4c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f4422f4cb80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4422f4cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f4422f4a430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4422f4a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422f4a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f44219860c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f44219860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4421986440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f44219865d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4421986760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f44219868f0"/>
        <function-ref name="fired" scoped="" ref="0x7f4421986a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4421989710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4421989710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4421989a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4421989c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4421989db0"/>
        <function-ref name="get" scoped="" ref="0x7f4421988020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44219881b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4421988340"/>
        <function-ref name="getMode" scoped="" ref="0x7f44219884d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4421988660"/>
        <function-ref name="overflow" scoped="" ref="0x7f44219887f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4421988980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4421988b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f442199e5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f442199e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f442199cdf0"/>
        <function-ref name="fired" scoped="" ref="0x7f442199ddf0"/>
        <function-ref name="startAt" scoped="" ref="0x7f442199c7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f442199c2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44219892e0"/>
        <function-ref name="start" scoped="" ref="0x7f442199d420"/>
        <function-ref name="stop" scoped="" ref="0x7f442199d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f442199fca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f442199fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f442199e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4421988da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4421988da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4421987180"/>
        <function-ref name="getControl" scoped="" ref="0x7f4421987310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44219874a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4421987630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44219877c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4421987950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4421987ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4421987c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f4421987e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4422ec18c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4422ec18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422ec6700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422ec50d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422ec6bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422ec5590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f4422ebf8e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4422ebf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422ebc780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422ebb150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422ebcc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422ebb610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4422eaac50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4422eaac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422ea9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422ea91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422ea9340"/>
        <function-ref name="get" scoped="" ref="0x7f4422ea94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422ea9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422ea97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422ea9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422ea9b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422ea9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422ea9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4422ea8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4422eb9b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4422eb9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422eb89b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422eaa360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422eb8e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422eaa820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4422e870f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4422e870f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422e85020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422e859a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422e854e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422e85e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4422ea4cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4422ea4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422e89b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422e88550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422e88090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422e88a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f44219b4020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f44219b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44219b1870"/>
        <function-ref name="fired" scoped="" ref="0x7f44219b3840"/>
        <function-ref name="startAt" scoped="" ref="0x7f44219b1220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44219b3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44219b1d30"/>
        <function-ref name="start" scoped="" ref="0x7f44219b4e30"/>
        <function-ref name="stop" scoped="" ref="0x7f44219b3380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f44219ae780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f44219ae780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44219aa020"/>
        <function-ref name="fired" scoped="" ref="0x7f44219ab020"/>
        <function-ref name="startAt" scoped="" ref="0x7f44219ab9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44219ab4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44219aa4e0"/>
        <function-ref name="start" scoped="" ref="0x7f44219ad5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f44219adae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f44219b03d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f44219b03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44219af240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f44219afbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44219af700"/>
        <function-ref name="overflow" scoped="" ref="0x7f44219ae0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f4422e3b9c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4422e3b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e3bd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e3a340"/>
        <function-ref name="get" scoped="" ref="0x7f4422e3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e3a660"/>
        <function-ref name="set" scoped="" ref="0x7f4422e3a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f4422e3acf0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4422e3acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e39230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e39550"/>
        <function-ref name="get" scoped="" ref="0x7f4422e396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e39870"/>
        <function-ref name="set" scoped="" ref="0x7f4422e39a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f4422e38020" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4422e38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e38530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e38850"/>
        <function-ref name="get" scoped="" ref="0x7f4422e389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e38b70"/>
        <function-ref name="set" scoped="" ref="0x7f4422e38d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f4422e3c690" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4422e3c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e3ca10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e3cba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e3cd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e3b020"/>
        <function-ref name="get" scoped="" ref="0x7f4422e3b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e3b340"/>
        <function-ref name="set" scoped="" ref="0x7f4422e3b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e3b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f4422e366a0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4422e366a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e36a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e36bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e36d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e34020"/>
        <function-ref name="get" scoped="" ref="0x7f4422e341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e34340"/>
        <function-ref name="set" scoped="" ref="0x7f4422e344d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e34660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f4422e3d3e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4422e3d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e3d760"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e3d8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e3da80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e3dc10"/>
        <function-ref name="get" scoped="" ref="0x7f4422e3dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e3c020"/>
        <function-ref name="set" scoped="" ref="0x7f4422e3c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f4422e37370" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4422e37370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e376f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e37880"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e37a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e37ba0"/>
        <function-ref name="get" scoped="" ref="0x7f4422e37d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e36020"/>
        <function-ref name="set" scoped="" ref="0x7f4422e361b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e36340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e32c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e32c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e31020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e311b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e31340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e31660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e317f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e31980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e31b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e31ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4422e31e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e301b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e30340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e305d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e30760"/>
        <function-ref name="set" scoped="" ref="0x7f4422e308f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e30a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e30c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e314d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e33a20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e33a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e33da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e32020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e32340"/>
        <function-ref name="get" scoped="" ref="0x7f4422e324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e32660"/>
        <function-ref name="set" scoped="" ref="0x7f4422e327f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e32980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e2c2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e2c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e2c670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e2c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e2c990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e2a660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e2ccb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e2ce40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e2b020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e2b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e2b340"/>
        <function-ref name="get" scoped="" ref="0x7f4422e2b4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e2b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e2b7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e2b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e2bc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e2bda0"/>
        <function-ref name="set" scoped="" ref="0x7f4422e2a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e2a1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e2a340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e2cb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e2a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e2d020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e2d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e2d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e2d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e2d850"/>
        <function-ref name="get" scoped="" ref="0x7f4422e2d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e2db70"/>
        <function-ref name="set" scoped="" ref="0x7f4422e2dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e277a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e27b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e27cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e27e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e25a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e26340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e264d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e26660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e267f0"/>
        <function-ref name="get" scoped="" ref="0x7f4422e26980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e26b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e26ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e26e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e25120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e252b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422e25440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e255d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e25760"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e26020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e28630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e28630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e289b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e28b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e28cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e28e60"/>
        <function-ref name="get" scoped="" ref="0x7f4422e27020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e271b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422e27340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e22c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e22c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e21020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e211b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e21340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e21660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e217f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e21980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e21b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e21ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4422e21e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e20020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e201b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e20340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e205d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e20760"/>
        <function-ref name="set" scoped="" ref="0x7f4422e208f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e20a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e20c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e214d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e20da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e23b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e23b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e23e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e22030"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e221c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e22350"/>
        <function-ref name="get" scoped="" ref="0x7f4422e224e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e22670"/>
        <function-ref name="set" scoped="" ref="0x7f4422e22800"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e22990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e1b2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e1b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e1b670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e1b800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e1b990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e19660"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e1bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e1be40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e1a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e1a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e1a340"/>
        <function-ref name="get" scoped="" ref="0x7f4422e1a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e1a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e1a7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e1a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e1ac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e1ada0"/>
        <function-ref name="set" scoped="" ref="0x7f4422e19020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e191b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e19340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e1bb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e1d020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e1d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e1d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e1d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e1d850"/>
        <function-ref name="get" scoped="" ref="0x7f4422e1d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e1db70"/>
        <function-ref name="set" scoped="" ref="0x7f4422e1dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e1b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e167a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e167a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e16b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e16cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e16e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e14a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e15340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e154d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e15660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e157f0"/>
        <function-ref name="get" scoped="" ref="0x7f4422e15980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e15b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e15ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e15e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e14120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e142b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422e14440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e145d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e14760"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e15020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e17630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e17630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e179b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e17b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e17cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e17e60"/>
        <function-ref name="get" scoped="" ref="0x7f4422e16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e161b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422e16340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422e11c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422e11c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e10020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e101b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422e10340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422e0e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e10660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e107f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422e10980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422e10b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e10ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4422e10e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422e0f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422e0f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422e0f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422e0f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422e0f760"/>
        <function-ref name="set" scoped="" ref="0x7f4422e0f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422e0fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422e0fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e104d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422e0fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4422e12b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422e12b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422e12e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422e11030"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422e111c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422e11350"/>
        <function-ref name="get" scoped="" ref="0x7f4422e114e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422e11670"/>
        <function-ref name="set" scoped="" ref="0x7f4422e11800"/>
        <function-ref name="clr" scoped="" ref="0x7f4422e11990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f4422def700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4422def700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4422defa80"/>
        <function-ref name="disable" scoped="" ref="0x7f4422defc10"/>
        <function-ref name="captured" scoped="" ref="0x7f4422defda0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4422df3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f4422df3400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4422df3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422df3780"/>
        <function-ref name="disable" scoped="" ref="0x7f4422df3910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4422df3aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4422df3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f4422df2060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4422df2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422df23e0"/>
        <function-ref name="disable" scoped="" ref="0x7f4422df2570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4422df2700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4422df2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f4422dd9a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f4422dd9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4422dd9e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4422dd8020"/>
        <function-ref name="captured" scoped="" ref="0x7f4422dd81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422dd8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422dd84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4422dd8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4422decc20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4422decc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4422dda020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dda1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f4422dda340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4422dda4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4422dda760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4422dda760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4422ddaae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4422ddac70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4422ddae00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4422dd9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4422dd91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4422dd9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4422dd94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4422dd9660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4422dd97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f4422dd8930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4422dd8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422dd8cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422dd8e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422dd6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422dd5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422dd6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422dd64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422dd6660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422dd67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422dd6980"/>
        <function-ref name="get" scoped="" ref="0x7f4422dd6b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422dd6ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422dd6e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422dd5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422dd52b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422dd5440"/>
        <function-ref name="set" scoped="" ref="0x7f4422dd55d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422dd5760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422dd58f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422dd61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422dd5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4422dc4020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4422dc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dc43a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc4530"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc46c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc4850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc49e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dc4b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dc4d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4422db83f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4422db83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422db8770"/>
        <function-ref name="fired" scoped="" ref="0x7f4422db8900"/>
        <function-ref name="disable" scoped="" ref="0x7f4422db8a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4422db8c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422db8db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422db7020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422db71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422db7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4422dc1a30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4422dc1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dc1db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc0020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc01b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc0340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc04d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dc0660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dc07f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dc0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4422dbe020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4422dbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dbe3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dbe530"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dbe6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dbe850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dbe9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dbeb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dbed00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4422dcda30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4422dcda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dcddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc6020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc6340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dc6660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dc67f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dc6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4422dbba30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4422dbba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dba020"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dba1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dba340"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dba4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dba660"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dba7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dba980"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dbab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4422dc33f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4422dc33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dc3770"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc3900"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc3a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc3c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc3db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dc2020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dc21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dc2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4422db7710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4422db7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422db7a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422db7c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422db7db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422db6020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422db61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422db6340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422db64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422db6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4422dc73d0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4422dc73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dc7750"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc78e0"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc7a70"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc7c00"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc7d90"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dce020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dce1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4422dbd3f0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4422dbd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dbd770"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dbd900"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dbda90"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dbdc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dbddb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dbc020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dbc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dbc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4422dc6d50" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4422dc6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dc5100"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc5290"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc5420"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc55b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc5740"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dc58d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dc5a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dc5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4422db9020" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4422db9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422db93a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422db9530"/>
        <function-ref name="disable" scoped="" ref="0x7f4422db96c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422db9850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422db99e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422db9b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422db9d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422db8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4422dc2710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4422dc2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dc2a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dc2c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dc2db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dc1020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dc11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dc1340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dc14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dc1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4422dc0d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4422dc0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dbf100"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dbf290"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dbf420"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dbf5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dbf740"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dbf8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dbfa60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dbfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4422dce710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4422dce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dcea90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dcec20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dcedb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dcd020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dcd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dcd340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dcd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dcd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4422dbc710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4422dbc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dbca90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dbcc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dbcdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dbb020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dbb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dbb340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dbb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dbb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4422dad3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4422dad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dad770"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dad900"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dada90"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dadc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422daddb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dac020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dac1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4422da13f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4422da13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da1770"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da1900"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da1a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da1c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da1db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da0020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4422daad50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4422daad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da9100"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da9290"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da9420"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da95b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da9740"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da98d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da9a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4422da73f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4422da73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da7770"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da7900"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da7a90"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da7c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da7db0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da6020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4422db1d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4422db1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422db0100"/>
        <function-ref name="fired" scoped="" ref="0x7f4422db0290"/>
        <function-ref name="disable" scoped="" ref="0x7f4422db0420"/>
        <function-ref name="edge" scoped="" ref="0x7f4422db05b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422db0740"/>
        <function-ref name="enable" scoped="" ref="0x7f4422db08d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422db0a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422db0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4422da4d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4422da4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da3210"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da33a0"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da3530"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da36c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da3850"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da39e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da3b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4422dac710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4422dac710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422daca90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dacc20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dacdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dab020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dab1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422dab340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422dab4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4422da0710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4422da0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da0a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da0c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da0db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422d9f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422d9f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422d9f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422d9f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422d9f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4422db57a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4422db57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422db5b20"/>
        <function-ref name="fired" scoped="" ref="0x7f4422db5cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4422db5e40"/>
        <function-ref name="edge" scoped="" ref="0x7f4422db2020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422db21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422db2340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422db24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422db2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4422da6710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4422da6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da6a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da6c20"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da6db0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da5020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da5340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4422dae020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4422dae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dae3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422dae530"/>
        <function-ref name="disable" scoped="" ref="0x7f4422dae6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422dae850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422dae9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422daeb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422daed00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422dad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4422da2100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4422da2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da2480"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da2610"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da27a0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da2930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da2ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da2c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da2de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4422daba30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4422daba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422dabdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422daa020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422daa1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422daa340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422daa4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422daa660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422daa7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422daa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4422da8020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4422da8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da83a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da8530"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da86c0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da8850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da89e0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da8b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da8d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4422db2a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4422db2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422db2db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422db1020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422db11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422db1340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422db14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422db1660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422db17f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422db1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4422da5a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4422da5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422da5db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4422da4020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422da41b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4422da4340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422da44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422da4660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422da47f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422da4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4422c952f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4422c952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422c95670"/>
        <function-ref name="fired" scoped="" ref="0x7f4422c95800"/>
        <function-ref name="disable" scoped="" ref="0x7f4422c95990"/>
        <function-ref name="edge" scoped="" ref="0x7f4422c95b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422c95cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422c95e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422c88020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422c881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4422c96680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4422c96680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422c96a00"/>
        <function-ref name="disable" scoped="" ref="0x7f4422c96b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4422c96d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4422c95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4422c867a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4422c867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422c86b20"/>
        <function-ref name="fired" scoped="" ref="0x7f4422c86cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4422c86e40"/>
        <function-ref name="edge" scoped="" ref="0x7f4422c85020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f4422c851b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4422c85340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f4422c854d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4422c85660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4422c87b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4422c87b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422c86020"/>
        <function-ref name="disable" scoped="" ref="0x7f4422c861b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4422c86340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4422c864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4422824e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4422824e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422823410"/>
        <function-ref name="write" scoped="" ref="0x7f44228235a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f442282e160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f442282e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4422828e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4422828e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422827210"/>
        <function-ref name="write" scoped="" ref="0x7f44228273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4422822880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4422822880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422822c00"/>
        <function-ref name="write" scoped="" ref="0x7f4422822d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f442281a0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f442281a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281a420"/>
        <function-ref name="write" scoped="" ref="0x7f442281a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f44228210a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f44228210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422821420"/>
        <function-ref name="write" scoped="" ref="0x7f44228215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f442280e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f442280e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442280e880"/>
        <function-ref name="write" scoped="" ref="0x7f442280ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4422810500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4422810500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422810880"/>
        <function-ref name="write" scoped="" ref="0x7f4422810a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f442282d490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f442282d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4422816880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4422816880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422816c00"/>
        <function-ref name="write" scoped="" ref="0x7f4422816d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4422811500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4422811500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422811880"/>
        <function-ref name="write" scoped="" ref="0x7f4422811a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4422827e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4422827e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422825210"/>
        <function-ref name="write" scoped="" ref="0x7f44228253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4422825e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4422825e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422824210"/>
        <function-ref name="write" scoped="" ref="0x7f44228243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f442281c880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f442281c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281cc00"/>
        <function-ref name="write" scoped="" ref="0x7f442281cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f442281d0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f442281d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281d420"/>
        <function-ref name="write" scoped="" ref="0x7f442281d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4422821880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4422821880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422821c00"/>
        <function-ref name="write" scoped="" ref="0x7f4422821d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4422830a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422830a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4422830e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f442282f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f442282f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f442282be00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f442282be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f442282a490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f442282a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4422815c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4422815c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228140a0"/>
        <function-ref name="write" scoped="" ref="0x7f4422814230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f442282abe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f442282abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422829020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4422811ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4422811ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228100a0"/>
        <function-ref name="write" scoped="" ref="0x7f4422810230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f442282b160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f442282b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f44228160a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f44228160a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422816420"/>
        <function-ref name="write" scoped="" ref="0x7f44228165b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4422825670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4422825670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228259f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422825b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4422827670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4422827670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228279f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422827b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f442282fad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f442282fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f44228170a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f44228170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422817420"/>
        <function-ref name="write" scoped="" ref="0x7f44228175b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f442281a880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f442281a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281ac00"/>
        <function-ref name="write" scoped="" ref="0x7f442281ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4422817880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4422817880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422817c00"/>
        <function-ref name="write" scoped="" ref="0x7f4422817d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f442280fce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f442280fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442280e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f442280e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4422810ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4422810ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442280f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f442280f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f442281d880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f442281d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281dc00"/>
        <function-ref name="write" scoped="" ref="0x7f442281dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f44228190a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f44228190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422819420"/>
        <function-ref name="write" scoped="" ref="0x7f44228195b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4422813ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4422813ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228110a0"/>
        <function-ref name="write" scoped="" ref="0x7f4422811230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4422820880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4422820880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422820c00"/>
        <function-ref name="write" scoped="" ref="0x7f4422820d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f442280ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f442280ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f442280d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f442280d230"/>
        <function-ref name="write" scoped="" ref="0x7f442280d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f442280d550"/>
        <function-ref name="readDone" scoped="" ref="0x7f442280d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f442282f480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f442282f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4422828670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4422828670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228289f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422828b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4422824670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4422824670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228249f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422824b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f442281b0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f442281b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281b420"/>
        <function-ref name="write" scoped="" ref="0x7f442281b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f44228200a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f44228200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422820420"/>
        <function-ref name="write" scoped="" ref="0x7f44228205b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f442281b880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f442281b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281bc00"/>
        <function-ref name="write" scoped="" ref="0x7f442281bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4422823870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4422823870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422823bf0"/>
        <function-ref name="write" scoped="" ref="0x7f4422823d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f442282e7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f442282e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f44228220a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f44228220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422822420"/>
        <function-ref name="write" scoped="" ref="0x7f44228225b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422831e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422831e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44228301c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422830350"/>
        <function-ref name="request" scoped="" ref="0x7f44228304e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4422830670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422830800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f44228292f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f44228292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422829670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4422828020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4422828020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44228283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4422813500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4422813500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422813880"/>
        <function-ref name="write" scoped="" ref="0x7f4422813a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4422814ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4422814ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44228130a0"/>
        <function-ref name="write" scoped="" ref="0x7f4422813230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f442282b7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f442282b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4422814500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4422814500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422814880"/>
        <function-ref name="write" scoped="" ref="0x7f4422814a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f442280f500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f442280f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442280f880"/>
        <function-ref name="write" scoped="" ref="0x7f442280fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f442281c0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f442281c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281c420"/>
        <function-ref name="write" scoped="" ref="0x7f442281c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4422819880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4422819880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422819c00"/>
        <function-ref name="write" scoped="" ref="0x7f4422819d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f442282ee00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f442282ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f442282dae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f442282dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442282de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f442281e0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f442281e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281e420"/>
        <function-ref name="write" scoped="" ref="0x7f442281e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4422829940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4422829940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422829cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f442281e880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f442281e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442281ec00"/>
        <function-ref name="write" scoped="" ref="0x7f442281ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f44228150a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f44228150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422815820"/>
        <function-ref name="write" scoped="" ref="0x7f44228159b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f442280d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f442280d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f442280dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f442280c020"/>
        <function-ref name="write" scoped="" ref="0x7f442280c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f442280c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f442280c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4422c412c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4422c412c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4422c41640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4422c417d0"/>
        <function-ref name="write" scoped="" ref="0x7f4422c41960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4422c41af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4422c41c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4422c43350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c43350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4422c436d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4422c43860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4422c439f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4422c40540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4422c40540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422c408c0"/>
        <function-ref name="write" scoped="" ref="0x7f4422c40a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4422c3f370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4422c3f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422c3f6f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422c3f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422c444d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422c444d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422c44850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422c449e0"/>
        <function-ref name="request" scoped="" ref="0x7f4422c44b70"/>
        <function-ref name="granted" scoped="" ref="0x7f4422c44d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422c43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4422c3e1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4422c3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422c3e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f4422c272e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4422c272e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422c27660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422c277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4422c38890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4422c38890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4422c38c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4422c38da0"/>
        <function-ref name="write" scoped="" ref="0x7f4422c37020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4422c371b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4422c37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4422c3b660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4422c3b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4422c3b9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4422c3bb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4422c3bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f4422c2fc70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4422c2fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4422c32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f4422c27b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f4422c27b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4422c30020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422c301b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4422c30340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422c304d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4422c30660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422c307f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4422c33060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4422c33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422c333e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422c33570"/>
        <function-ref name="request" scoped="" ref="0x7f4422c33700"/>
        <function-ref name="granted" scoped="" ref="0x7f4422c33890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422c33a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4422c37ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4422c37ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422c36020"/>
        <function-ref name="write" scoped="" ref="0x7f4422c361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4422c36a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4422c36a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422c36db0"/>
        <function-ref name="write" scoped="" ref="0x7f4422c35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4422c30a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4422c30a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4422c30df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4422c2e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4422c2e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4422c2e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4422c2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4422c2e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422c2e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4422c2ee30"/>
        <function-ref name="set" scoped="" ref="0x7f4422c2e980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4422c2eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4422c2eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422c39510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422c39510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422c39890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422c39a20"/>
        <function-ref name="request" scoped="" ref="0x7f4422c39bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f4422c39d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422c38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f4422c23bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f4422c23bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4422c22020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4422c221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4422c358b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4422c358b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422c35c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4422bc8770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4422bc8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4422bc8af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422bc8c80"/>
        <function-ref name="isState" scoped="" ref="0x7f4422bc8e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422bc4020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4422bc41b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422bc4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4422bc31d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4422bc31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4422bc3550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422bc36e0"/>
        <function-ref name="isState" scoped="" ref="0x7f4422bc3870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422bc3a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f4422bc3b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422bc3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4422bbf020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4422bbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4422bbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4422bbfb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4422bbfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4422bbe020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422bbe1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4422bbe340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422bbe4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4422bbe660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422bbe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4422857020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4422857020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44228573a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422857530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4422ba58f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4422ba58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4422ba5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422ba6c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422ba6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422ba5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422ba51b0"/>
        <function-ref name="request" scoped="" ref="0x7f4422ba5340"/>
        <function-ref name="granted" scoped="" ref="0x7f4422ba54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422ba5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f442173a760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f442173a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f442173aae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f442173ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4421738120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4421738120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44217384a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421738630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f44217388c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f44217388c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4421738c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4421739020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4421739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f44217393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f442173ba00" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f442173ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f442173bd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f442173a020"/>
        <function-ref name="request" scoped="" ref="0x7f442173a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f442173a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f442173a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4421739630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4421739630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f44217399b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4421739b40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4421739cd0"/>
        <function-ref name="write" scoped="" ref="0x7f4421739e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4422b3d8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422b3d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4422b3dc60"/>
        <function-ref name="configure" scoped="" ref="0x7f4422b3ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4422b3f850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4422b3f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422b3fbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422b3fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4422b3aa40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4422b3aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4422b3adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4422b40110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4422b40110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4422b40490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4422b3b690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4422b3b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422b3ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422b3bba0"/>
        <function-ref name="request" scoped="" ref="0x7f4422b3bd30"/>
        <function-ref name="granted" scoped="" ref="0x7f4422b3a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422b3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422b44d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422b44d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422b41180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422b41310"/>
        <function-ref name="request" scoped="" ref="0x7f4422b414a0"/>
        <function-ref name="granted" scoped="" ref="0x7f4422b41630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422b417c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4422b40790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4422b40790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4422b40b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4422b40ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4422b40e30"/>
        <function-ref name="write" scoped="" ref="0x7f4422b3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4422b36b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4422b36b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4422b38020"/>
        <function-ref name="txDone" scoped="" ref="0x7f4422b381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4422ac4250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422ac4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4422ac45f0"/>
        <function-ref name="configure" scoped="" ref="0x7f4422ac4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4422ac3c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4422ac3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422ac2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422ac21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4422ac13e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4422ac13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4422ac1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4422ac4a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4422ac4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4422ac4d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4422ac1a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4422ac1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4422ac1dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4422abf020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4422abf1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4422abf340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4422abf4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4422abf660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4422abf7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4422abf980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4422abfb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4422abfca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4422abfe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4422abe020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4422abe1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4422abe440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4422abe5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4422abe760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4422abe8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4422abea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4422abec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4422abeda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4422abd020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4422abd1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4422abd340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4422abd4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422abd660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4422abd9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4422abdb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4422abdd10"/>
        <function-ref name="tx" scoped="" ref="0x7f4422abc020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4422abc1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4422abc340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4422abc4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4422abc660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4422abc7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f4422abc980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4422abcb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4422abcca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4422abce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4422abb020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4422abb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4422abbc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4422abbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4422aba020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4422aba1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4422aba340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4422aba4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4422aba660"/>
        <function-ref name="get" scoped="" ref="0x7f4422aba7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422aba980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4422ab9020"/>
        <function-ref name="set" scoped="" ref="0x7f4422abaca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4422abab10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4422abae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4422ac25b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4422ac25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422ac2950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422ac2ae0"/>
        <function-ref name="request" scoped="" ref="0x7f4422ac2c70"/>
        <function-ref name="granted" scoped="" ref="0x7f4422ac2e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422ac1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422ac5470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422ac5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422ac5810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422ac59a0"/>
        <function-ref name="request" scoped="" ref="0x7f4422ac5b30"/>
        <function-ref name="granted" scoped="" ref="0x7f4422ac5cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422ac5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4422ac3060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4422ac3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4422ac33e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4422ac3570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4422ac3700"/>
        <function-ref name="write" scoped="" ref="0x7f4422ac3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4422abb480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4422abb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4422abb800"/>
        <function-ref name="txDone" scoped="" ref="0x7f4422abb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f4422ab92f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f4422ab92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4422ab9670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4422ab9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4422aa92c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4422aa92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422aa9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4422aadd10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4422aadd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4422aac0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4422aac270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4422ab1020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4422ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4422ab13a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4422ab1530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4422ab16c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4422ab1850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4422ab19e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4422ab1b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4422ab1d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4422ab0020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4422ab01b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4422ab0340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4422ab04d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4422ab0660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4422ab07f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4422ab0a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4422ab0c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4422ab0da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4422aaf020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4422aaf1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4422aaf340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4422aaf4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4422aaf660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4422aaf7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4422aaf980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4422aafb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422aafca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4422aae220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4422aae3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4422aae540"/>
        <function-ref name="tx" scoped="" ref="0x7f4422aae6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4422aae860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4422aae9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4422aaeb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4422aaed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4422aad020"/>
        <function-ref name="rx" scoped="" ref="0x7f4422aad1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4422aad340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4422aad4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4422aad660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4422aad7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4422aad980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4422a6ebb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4422a6ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422a6d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422a6d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422a6d340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422a6b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422a6d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422a6d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422a6d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422a6db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422a6dca0"/>
        <function-ref name="get" scoped="" ref="0x7f4422a6de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422a6c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422a6c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422a6c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422a6c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422a6c760"/>
        <function-ref name="set" scoped="" ref="0x7f4422a6c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422a6ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422a6d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422a6cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422a6cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4422aa32d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4422aa32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4422aa3650"/>
        <function-ref name="txDone" scoped="" ref="0x7f4422aa37e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4422a6b3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4422a6b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422a6b760"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422a6b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422a6ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4422a697f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422a6bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422a6a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422a6a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422a6a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422a6a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4422a6a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422a6a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422a6a980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422a6ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422a6ada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422a69020"/>
        <function-ref name="set" scoped="" ref="0x7f4422a691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422a69340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422a6bc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422a694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422a69660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4422a69bb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4422a69bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422a68020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422a681b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422a68340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422a66020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422a68660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422a687f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422a68980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422a68b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422a68ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4422a68e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422a67020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422a671b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422a67340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422a675d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422a67760"/>
        <function-ref name="set" scoped="" ref="0x7f4422a678f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422a67a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422a684d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422a67c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422a67da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4422aa8700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4422aa8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4422aa8a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4422aa8c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4422aa8da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4422aa7020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4422aa71b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4422aa7340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4422aa74d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4422aa7660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4422aa77f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4422aa7980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4422aa7b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4422aa7ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4422aa7e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4422aa6120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4422aa62b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4422aa6440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4422aa65d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4422aa6760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4422aa68f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4422aa6a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4422aa6c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4422aa6da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4422aa5020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4422aa51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422aa5340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4422aa56d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4422aa5860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4422aa59f0"/>
        <function-ref name="tx" scoped="" ref="0x7f4422aa5b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4422aa5d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4422aa4020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4422aa41b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4422aa4340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4422aa44d0"/>
        <function-ref name="rx" scoped="" ref="0x7f4422aa4660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4422aa47f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4422aa4980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4422aa4b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4422aa4ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4422aa4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f4422a79d10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4422a79d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4422aa10e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4422aa1270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4422aa1400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4422aa1590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4422aa1720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4422aa18b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4422aa1a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4422aa1bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422aa1d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4422a9f020"/>
        <function-ref name="getData" scoped="" ref="0x7f4422a9f1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4422a9f340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4422a9f4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4422a9f760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4422a9f8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4422a9fa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4422a9fc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4422a9fda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4422a78020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4422a781b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4422a78340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4422a784d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4422a78660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4422a787f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4422a78980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4422a78d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4422a77020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4422a771b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4422a77340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4422a774d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4422a77660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4422a777f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4422a77980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4422a77b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4422a77ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4422a77e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4422a76020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4422a761b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4422a76340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4422a764d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4422a76660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4422a767f0"/>
        <function-ref name="setData" scoped="" ref="0x7f4422a76980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4422a76b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4422a76ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4422a76e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4422a75020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4422a751b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4422a75340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4422a758d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4422a75a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4422a75bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4422a75d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4422a74020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4422a741b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4422a74340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4422a744d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4422a74660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4422a747f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4422a713e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4422a713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422a71760"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422a718f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422a71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4422a6e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422a71da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422a6f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422a6f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422a6f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422a6f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4422a6f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422a6f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422a6f980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422a6fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422a6fda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422a6e020"/>
        <function-ref name="set" scoped="" ref="0x7f4422a6e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422a6e340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422a71c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422a6e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422a6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4422aa3c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4422aa3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4422aa2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4422a74bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4422a74bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422a73020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422a731b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422a73340"/>
        <function-ref name="clr" scoped="" ref="0x7f4422a71020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422a73660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422a737f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422a73980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422a73b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422a73ca0"/>
        <function-ref name="get" scoped="" ref="0x7f4422a73e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422a72020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422a721b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422a72340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422a725d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4422a72760"/>
        <function-ref name="set" scoped="" ref="0x7f4422a728f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422a72a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422a734d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422a72c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422a72da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f44217302c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f44217302c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4421730640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f44217307d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4421729440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4421729440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f44217297c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4421720760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421720760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4421720ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f4421720c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4421729a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4421729a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4421729dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4421728020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f44217281b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4421728340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f44217284d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4421728660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f44217287f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4421728980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4421728b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4421728ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f4421728e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4421727020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f44217271b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4421727440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f44217275d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4421727760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f44217278f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4421727a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4421727c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4421727da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4421726020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f44217261b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4421726340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f44217264d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4421726660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f44217269f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4421726b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4421726d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4421723020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f44217231b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4421723340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f44217234d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4421723660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f44217237f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4421723980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4421723b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4421723ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4421723e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4421722020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f44217221b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4421722340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f44217224d0"/>
        <function-ref name="setData" scoped="" ref="0x7f4421722660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f44217227f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4421722980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4421722b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4421722ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4421722e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4421721020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f44217215b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4421721740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f44217218d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4421721a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4421721bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4421721d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4421720020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f44217201b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4421720340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f44217204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f442172ac10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f442172ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421729020"/>
        <function-ref name="txDone" scoped="" ref="0x7f44217291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421731640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421731640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44217319c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421731b50"/>
        <function-ref name="request" scoped="" ref="0x7f4421731ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f4421731e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421730030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f442172f2b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f442172f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f442172f630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f442172f7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f442172f950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f442172fae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f442172fc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f442172fe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f442172d020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f442172d1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f442172d340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f442172d4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f442172d660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f442172d7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f442172d980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f442172dc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f442172dda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f442172c020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f442172c1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f442172c340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f442172c4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f442172c660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f442172c7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f442172c980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f442172cb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f442172cca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f442172ce30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f442172b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f442172b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f442172b540"/>
        <function-ref name="tx" scoped="" ref="0x7f442172b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f442172b860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f442172b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f442172bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f442172bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f442172a020"/>
        <function-ref name="rx" scoped="" ref="0x7f442172a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f442172a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f442172a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f442172a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f442172a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f442172a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4421730a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421730a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421730de0"/>
        <function-ref name="userId" scoped="" ref="0x7f442172f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f44229c02c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f44229c02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f44229c0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f44229c07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f44229bf8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44229bf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f44229bfc20"/>
        <function-ref name="configure" scoped="" ref="0x7f44229bfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f44229c44d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f44229c44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f44229c4850"/>
        <function-ref name="txDone" scoped="" ref="0x7f44229c49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44229c1020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44229c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44229c13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44229c1530"/>
        <function-ref name="request" scoped="" ref="0x7f44229c16c0"/>
        <function-ref name="granted" scoped="" ref="0x7f44229c1850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44229c19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f44229c23f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f44229c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f44229c2770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f44229c0ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44229c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f44229c0e50"/>
        <function-ref name="userId" scoped="" ref="0x7f44229bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f44229aabf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44229aabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f44229a9020"/>
        <function-ref name="userId" scoped="" ref="0x7f44229a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f44229bdd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f44229bdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f44229bc180"/>
        <function-ref name="txDone" scoped="" ref="0x7f44229bc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f44229aa5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f44229aa5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f44229aa960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f44229bc710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f44229bc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f44229bcab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f44229bcd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f44229bcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f44229aa180"/>
        <function-ref name="txDone" scoped="" ref="0x7f44229aa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f442292aa60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f442292aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f442292ae00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4422929020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4422928790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422928790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4422928b30"/>
        <function-ref name="configure" scoped="" ref="0x7f4422928cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4422929270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4422929270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44229295f0"/>
        <function-ref name="requested" scoped="" ref="0x7f4422929780"/>
        <function-ref name="granted" scoped="" ref="0x7f4422929910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422929aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4422929c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f442292cca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f442292cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f442292a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f442292a230"/>
        <function-ref name="request" scoped="" ref="0x7f442292a3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f442292a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f442292a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f4422927020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4422927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f44229273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4422929e80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4422929e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4422928220"/>
        <function-ref name="userId" scoped="" ref="0x7f44229283b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44216ba020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44216ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44216ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f44216ba630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f44216ba630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f44216ba9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f44216bab40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f44216bacd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f44216bae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f44216b66c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f44216b66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f44216b6a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f44216b6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f44216b49d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44216b49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f44216b4d70"/>
        <function-ref name="configure" scoped="" ref="0x7f44216b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f44216b32b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f44216b32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f44216b3630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f44216b37c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f44216b3950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f44216b3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f44216b6e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f44216b6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44216b51e0"/>
        <function-ref name="requested" scoped="" ref="0x7f44216b5370"/>
        <function-ref name="granted" scoped="" ref="0x7f44216b5500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44216b5690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f44216b5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f44216b3d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f44216b3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44216b20e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f44216b2270"/>
        <function-ref name="led1On" scoped="" ref="0x7f44216b2400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44216b2590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44216b2720"/>
        <function-ref name="get" scoped="" ref="0x7f44216b28b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44216b2a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f44216b11b0"/>
        <function-ref name="set" scoped="" ref="0x7f44216b2d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f44216b2bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44216b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44216b7850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44216b7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44216b7bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44216b7d80"/>
        <function-ref name="request" scoped="" ref="0x7f44216b6020"/>
        <function-ref name="granted" scoped="" ref="0x7f44216b61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44216b6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f44216b42d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f44216b42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f44216b4650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f44216b5a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44216b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f44216b5df0"/>
        <function-ref name="userId" scoped="" ref="0x7f44216b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f44216b1480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f44216b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44216b1800"/>
        <function-ref name="runTask" scoped="" ref="0x7f44216b1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f442291e020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f442291e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f442291e3a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f442291e530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f442291e6c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f442291e850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f442291e9e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f442291eb70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f442291ed00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f442291d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f442291d1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f442291d340"/>
        <function-ref name="getData" scoped="" ref="0x7f442291d4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f442291d660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f442291d7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f442291da80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f442291dc10"/>
        <function-ref name="getIV" scoped="" ref="0x7f442291dda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f442291c020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f442291c1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f442291c340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f442291c4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f442291c660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f442291c7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f442291c980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f442291cb10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f442291cca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f442291b220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f442291b3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f442291b540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f442291b6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f442291b860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f442291b9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f442291bb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f442291bd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f442291a020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f442291a1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f442291a340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f442291a4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f442291a660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f442291a7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f442291a980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f442291ab10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f442291aca0"/>
        <function-ref name="setData" scoped="" ref="0x7f442291ae30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4422919020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f44229191b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4422919340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f44229194d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4422919660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f44229197f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4422919d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4422918020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f44229181b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4422918340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f44229184d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4422918660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f44229187f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4422918980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4422918b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4422918ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f442290ebb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f442290ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f442290d020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f442290d1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f442290d340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f442290d4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f442290d660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f442290d7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f442290d980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f442290db10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f442290dca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f442290de30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f442290c020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f442290c1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f442290c340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f442290c5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f442290c760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f442290c8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f442290ca80"/>
        <function-ref name="isUart" scoped="" ref="0x7f442290cc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f442290cda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f442290b020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f442290b1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f442290b340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f442290b4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f442290b660"/>
        <function-ref name="getMode" scoped="" ref="0x7f442290b7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f442290bb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f442290bd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f442290a020"/>
        <function-ref name="tx" scoped="" ref="0x7f442290a1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f442290a340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f442290a4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f442290a660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f442290a7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f442290a980"/>
        <function-ref name="rx" scoped="" ref="0x7f442290ab10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f442290aca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f442290ae30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4422909020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f44229091b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4422909340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4422906e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4422906e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44229051e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422905370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422905500"/>
        <function-ref name="clr" scoped="" ref="0x7f44229031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422905820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44229059b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4422905b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422905cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422905e60"/>
        <function-ref name="get" scoped="" ref="0x7f4422904020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f44229041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422904340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f44229044d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422904760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44229048f0"/>
        <function-ref name="set" scoped="" ref="0x7f4422904a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4422904c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422905690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422904da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4422903020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f4422917d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4422917d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f44229140e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4422914270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4422914400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4422914590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4422914720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f44229148b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4422914a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4422914bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422914d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4422913020"/>
        <function-ref name="getData" scoped="" ref="0x7f44229131b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4422913340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f44229134d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4422913760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f44229138f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4422913a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4422913c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4422913da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4422912020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f44229121b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4422912340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f44229124d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4422912660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f44229127f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4422912980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4422912d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4422911020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f44229111b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4422911340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f44229114d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4422911660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f44229117f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4422911980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4422911b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4422911ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4422911e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4422910020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f44229101b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4422910340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f44229104d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4422910660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f44229107f0"/>
        <function-ref name="setData" scoped="" ref="0x7f4422910980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4422910b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4422910ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4422910e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f442290f020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f442290f1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f442290f340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f442290f8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f442290fa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f442290fbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f442290fd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f442290e020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f442290e1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f442290e340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f442290e4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f442290e660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f442290e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4422909700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4422909700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422909a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422909c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4422909da0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422906a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f44229071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422907340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f44229074d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4422907660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44229077f0"/>
        <function-ref name="get" scoped="" ref="0x7f4422907980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4422907b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4422907ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4422907e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4422906120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f44229062b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422906440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f44229065d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4422907020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4422906760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f44229068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f44227f2c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f44227f2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f0210"/>
        <function-ref name="write" scoped="" ref="0x7f44227f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f44227fcda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f44227fcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227fb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f44227f5b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f44227f5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f4020"/>
        <function-ref name="write" scoped="" ref="0x7f44227f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f44227ef670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f44227ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ef9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f44227e8e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f44227e8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e7210"/>
        <function-ref name="write" scoped="" ref="0x7f44227e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f44227efe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f44227efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ee210"/>
        <function-ref name="write" scoped="" ref="0x7f44227ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f44227db2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f44227db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227db670"/>
        <function-ref name="write" scoped="" ref="0x7f44227db800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f44227de2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f44227de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227de670"/>
        <function-ref name="write" scoped="" ref="0x7f44227de800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f44227fa120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f44227fa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227fa4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f44227e4670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f44227e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e49f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f44227df2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44227df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227df670"/>
        <function-ref name="write" scoped="" ref="0x7f44227df800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f44227f4c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f44227f4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f3020"/>
        <function-ref name="write" scoped="" ref="0x7f44227f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f44227f3c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f44227f3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f2020"/>
        <function-ref name="write" scoped="" ref="0x7f44227f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f44227e9670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f44227e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e99f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f44227ece50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f44227ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227eb210"/>
        <function-ref name="write" scoped="" ref="0x7f44227eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f44227ee670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f44227ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ee9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227eeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f44227fe760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44227fe760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f44227feae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f44227fec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f44227fee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f44227f9aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44227f9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f44227f8120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f44227f8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f44227e2a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f44227e2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e2df0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f44227f8870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f44227f8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f44227dfad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44227dfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227dfe50"/>
        <function-ref name="write" scoped="" ref="0x7f44227de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f44227fadc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f44227fadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f44227e5e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f44227e5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e4210"/>
        <function-ref name="write" scoped="" ref="0x7f44227e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f44227f3480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f44227f3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f3800"/>
        <function-ref name="write" scoped="" ref="0x7f44227f3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f44227f4480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44227f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f4800"/>
        <function-ref name="write" scoped="" ref="0x7f44227f4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f44227fc750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f44227fc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227fcad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f44227e6e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f44227e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e5210"/>
        <function-ref name="write" scoped="" ref="0x7f44227e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f44227e7670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f44227e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e79f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f44227e5670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f44227e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e59f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f44227ddad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f44227ddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227dde50"/>
        <function-ref name="write" scoped="" ref="0x7f44227db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f44227dead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f44227dead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227dee50"/>
        <function-ref name="write" scoped="" ref="0x7f44227dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f44227eb670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f44227eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227eb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f44227e7e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f44227e7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e6210"/>
        <function-ref name="write" scoped="" ref="0x7f44227e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f44227e0ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f44227e0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e0e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f44227ed670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f44227ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ed9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f44227dbad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f44227dbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44227dbe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44227da020"/>
        <function-ref name="write" scoped="" ref="0x7f44227da1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44227da340"/>
        <function-ref name="readDone" scoped="" ref="0x7f44227da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f44227fc100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f44227fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227fc480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f44227f5370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f44227f5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f56f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227f5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f44227f2480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f44227f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f2800"/>
        <function-ref name="write" scoped="" ref="0x7f44227f2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f44227e9e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f44227e9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e8210"/>
        <function-ref name="write" scoped="" ref="0x7f44227e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f44227eee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f44227eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ed210"/>
        <function-ref name="write" scoped="" ref="0x7f44227ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f44227e8670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f44227e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e89f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f44227f0670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f44227f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227f09f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f44227fb450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f44227fb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227fb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f44227f0e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f44227f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ef210"/>
        <function-ref name="write" scoped="" ref="0x7f44227ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44227ffa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44227ffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44227ffe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44227fe020"/>
        <function-ref name="request" scoped="" ref="0x7f44227fe1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f44227fe340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44227fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f44227f6020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f44227f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f44227f6cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f44227f6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f44227e02f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f44227e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e0670"/>
        <function-ref name="write" scoped="" ref="0x7f44227e0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f44227e1ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f44227e1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e1e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f44227f9450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44227f9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f44227e12f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44227e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e1670"/>
        <function-ref name="write" scoped="" ref="0x7f44227e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f44227dd2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f44227dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227dd670"/>
        <function-ref name="write" scoped="" ref="0x7f44227dd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f44227ebe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f44227ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e9210"/>
        <function-ref name="write" scoped="" ref="0x7f44227e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f44227e6670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f44227e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e69f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227e6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f44227fbaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f44227fbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227fbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f44227fa770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f44227fa770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227faaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f44227ede50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f44227ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ec210"/>
        <function-ref name="write" scoped="" ref="0x7f44227ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f44227f6670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f44227f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227f69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f44227ec670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f44227ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227ec9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f44227e4e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f44227e4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227e2610"/>
        <function-ref name="write" scoped="" ref="0x7f44227e27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f44227da7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f44227da7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44227dab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44227dacb0"/>
        <function-ref name="write" scoped="" ref="0x7f44227dae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44227d9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f44227d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f44227c5c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f44227c5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c4210"/>
        <function-ref name="write" scoped="" ref="0x7f44227c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f44227d0da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f44227d0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f44227c9b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f44227c9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c7020"/>
        <function-ref name="write" scoped="" ref="0x7f44227c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f44227c3670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f44227c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c39f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f44227bce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f44227bce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bb210"/>
        <function-ref name="write" scoped="" ref="0x7f44227bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f44227c3e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f44227c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c2210"/>
        <function-ref name="write" scoped="" ref="0x7f44227c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f44227af2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f44227af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227af670"/>
        <function-ref name="write" scoped="" ref="0x7f44227af800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f44227b12f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f44227b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b1670"/>
        <function-ref name="write" scoped="" ref="0x7f44227b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f44227ce120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f44227ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227ce4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f44227b7670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f44227b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b79f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f44227b22f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44227b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b2670"/>
        <function-ref name="write" scoped="" ref="0x7f44227b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f44227c7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f44227c7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c6020"/>
        <function-ref name="write" scoped="" ref="0x7f44227c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f44227c6c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f44227c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c5020"/>
        <function-ref name="write" scoped="" ref="0x7f44227c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f44227bd670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f44227bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227bdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f44227bfe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f44227bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227be210"/>
        <function-ref name="write" scoped="" ref="0x7f44227be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f44227c2670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f44227c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c29f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f44227d1760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44227d1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f44227d1ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f44227d1c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f44227d1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f44227ccaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44227ccaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f44227cb120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f44227cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f44227b6a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f44227b6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b6df0"/>
        <function-ref name="write" scoped="" ref="0x7f44227b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f44227cb870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f44227cb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f44227b2ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44227b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b2e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f44227cedc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f44227cedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f44227b8e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f44227b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b7210"/>
        <function-ref name="write" scoped="" ref="0x7f44227b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f44227c6480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f44227c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c6800"/>
        <function-ref name="write" scoped="" ref="0x7f44227c6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f44227c7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44227c7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c7800"/>
        <function-ref name="write" scoped="" ref="0x7f44227c7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f44227d0750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f44227d0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227d0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f44227b9e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f44227b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b8210"/>
        <function-ref name="write" scoped="" ref="0x7f44227b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f44227bb670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f44227bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f44227b8670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f44227b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b89f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f44227b0ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f44227b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b0e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f44227b1ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f44227b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b1e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f44227be670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f44227be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227be9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227beb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f44227bbe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f44227bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b9210"/>
        <function-ref name="write" scoped="" ref="0x7f44227b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f44227b4ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f44227b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b4e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f44227c0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f44227c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c09f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f44227afad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f44227afad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44227afe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44227ae020"/>
        <function-ref name="write" scoped="" ref="0x7f44227ae1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44227ae340"/>
        <function-ref name="readDone" scoped="" ref="0x7f44227ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f44227d0100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f44227d0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227d0480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f44227c9370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f44227c9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c96f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227c9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f44227c5480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f44227c5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c5800"/>
        <function-ref name="write" scoped="" ref="0x7f44227c5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f44227bde50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f44227bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bc210"/>
        <function-ref name="write" scoped="" ref="0x7f44227bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f44227c2e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f44227c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c0210"/>
        <function-ref name="write" scoped="" ref="0x7f44227c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f44227bc670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f44227bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227bcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f44227c4670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f44227c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c49f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f44227cf450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f44227cf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f44227c4e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f44227c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227c3210"/>
        <function-ref name="write" scoped="" ref="0x7f44227c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44227d29e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44227d29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44227d2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44227d1020"/>
        <function-ref name="request" scoped="" ref="0x7f44227d11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f44227d1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44227d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f44227ca020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f44227ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f44227cacc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f44227cacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227c90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f44227b42f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f44227b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b4670"/>
        <function-ref name="write" scoped="" ref="0x7f44227b4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f44227b5ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f44227b5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b5e50"/>
        <function-ref name="write" scoped="" ref="0x7f44227b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f44227cc450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44227cc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f44227b52f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44227b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b5670"/>
        <function-ref name="write" scoped="" ref="0x7f44227b5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f44227b02f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f44227b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b0670"/>
        <function-ref name="write" scoped="" ref="0x7f44227b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f44227bee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f44227bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bd210"/>
        <function-ref name="write" scoped="" ref="0x7f44227bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f44227b9670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f44227b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b99f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227b9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f44227cfaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f44227cfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227cfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f44227ce770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f44227ce770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227ceaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f44227c0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f44227c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bf210"/>
        <function-ref name="write" scoped="" ref="0x7f44227bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f44227ca670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f44227ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44227ca9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f44227bf670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f44227bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227bf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f44227bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f44227b7e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f44227b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227b6610"/>
        <function-ref name="write" scoped="" ref="0x7f44227b67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f44227ae7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f44227ae7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44227aeb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44227aecb0"/>
        <function-ref name="write" scoped="" ref="0x7f44227aee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44227ad020"/>
        <function-ref name="readDone" scoped="" ref="0x7f44227ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f44227a6b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f44227a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f44227a3020"/>
        <function-ref name="changed" scoped="" ref="0x7f44227a31b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f44227a3340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f44227a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f44227a5d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f44227a5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f442278e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f442278a310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f442278a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f442278a690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f4422787880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4422787880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422787c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f442277c020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f442277c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442277c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f4422773bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f4422773bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422776020"/>
        <function-ref name="write" scoped="" ref="0x7f44227761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f4422776530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f4422776530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f44227768b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4422776a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f4422777140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f4422777140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44227774c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f442277bc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f442277bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422762020"/>
        <function-ref name="write" scoped="" ref="0x7f44227621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f4422762540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f4422762540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44227628c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422762a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422762be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422762d70"/>
        <function-ref name="get" scoped="" ref="0x7f4422761020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44227611b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422761340"/>
        <function-ref name="clr" scoped="" ref="0x7f44227614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4422759950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4422759950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f442275c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f442275e150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f442275e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442275e4d0"/>
        <function-ref name="write" scoped="" ref="0x7f442275e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f442275e9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f442275e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442275ed70"/>
        <function-ref name="isInput" scoped="" ref="0x7f442275d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442275d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442275d340"/>
        <function-ref name="get" scoped="" ref="0x7f442275d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442275d660"/>
        <function-ref name="set" scoped="" ref="0x7f442275d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f442275d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4422760ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4422760ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4422738ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4422736a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f4422736a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f44227278d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4422726020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4422726020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422726e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422725800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422725340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422725cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f4422720530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f4422720530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f442271f3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442271fd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442271f890"/>
        <function-ref name="overflow" scoped="" ref="0x7f442271e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4422719020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4422719020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44227193a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4422719530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f44227196c0"/>
        <function-ref name="get" scoped="" ref="0x7f4422719850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f44227199e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422719b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4422719d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422718020"/>
        <function-ref name="overflow" scoped="" ref="0x7f44227181b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4422718340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f44227184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f442271de50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f442271de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c3460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f44235c37d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f442271bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442271a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442271a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f442271ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f4422763590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f4422763590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422763910"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422763aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4422763c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422763dc0"/>
        <function-ref name="get" scoped="" ref="0x7f4422713020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44227131b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422713340"/>
        <function-ref name="clr" scoped="" ref="0x7f44227134d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4422711c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4422711c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f442270f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f442270f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f442270f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f442270d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f442270f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f442270f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f442270f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f442270fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f442270fca0"/>
        <function-ref name="get" scoped="" ref="0x7f442270fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f442270e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f442270e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f442270e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f442270e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f442270e760"/>
        <function-ref name="set" scoped="" ref="0x7f442270e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f442270ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f442270ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f442270f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f442270eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f44227129e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f44227129e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4422712d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f4422711020"/>
        <function-ref name="toggle" scoped="" ref="0x7f44227111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4422711340"/>
        <function-ref name="get" scoped="" ref="0x7f44227114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4422711660"/>
        <function-ref name="set" scoped="" ref="0x7f44227117f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4422711980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f44227081b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f44227081b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4422708530"/>
        <function-ref name="stop" scoped="" ref="0x7f44227086c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f44226f9cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f44226f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f44226f80a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f44226f8230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f44226f83c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f44226f8550"/>
        <function-ref name="setCca" scoped="" ref="0x7f44226f86e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44226f8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f44226f5990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f44226f5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f44226f5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f44226f9020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f44226f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44226f93a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44226f9530"/>
        <function-ref name="modify" scoped="" ref="0x7f44226f96c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44226f9850"/>
        <function-ref name="resend" scoped="" ref="0x7f44226f99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f44226fc6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f44226fc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f44226fca40"/>
        <function-ref name="stop" scoped="" ref="0x7f44226fcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f44226f7150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f44226f7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f44226f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f44226e9970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f44226e9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f44226e9cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f44226e9e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f44226e8030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f44226e81c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f44226e8350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44226e84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f44226e1950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f44226e1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f44226df020"/>
        <function-ref name="clear" scoped="" ref="0x7f44226df750"/>
        <function-ref name="isValid" scoped="" ref="0x7f44226e0780"/>
        <function-ref name="set" scoped="" ref="0x7f44226dfe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f44226ca020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f44226ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226ca3a0"/>
        <function-ref name="write" scoped="" ref="0x7f44226ca530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f44226ca890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f44226ca890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226cac10"/>
        <function-ref name="write" scoped="" ref="0x7f44226cada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f44226e8900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f44226e8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f44226e8c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f44226cd530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f44226cd530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226cd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f44226dc880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f44226dc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f44226dcc00"/>
        <function-ref name="disable" scoped="" ref="0x7f44226dcd90"/>
        <function-ref name="captured" scoped="" ref="0x7f44226db020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f44226db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f44226e7ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f44226e7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44226e4390"/>
        <function-ref name="fired" scoped="" ref="0x7f44226e5360"/>
        <function-ref name="startAt" scoped="" ref="0x7f44226e5ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44226e5820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44226e4850"/>
        <function-ref name="start" scoped="" ref="0x7f44226e6970"/>
        <function-ref name="stop" scoped="" ref="0x7f44226e6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f44226e4d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f44226e4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f44226e20a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f44226e2230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f44226e23c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f44226e2550"/>
        <function-ref name="getPower" scoped="" ref="0x7f44226e26e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f44226e2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f44226cf550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44226cf550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226cf8d0"/>
        <function-ref name="write" scoped="" ref="0x7f44226cfa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f44226cfe00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f44226cfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226ce1c0"/>
        <function-ref name="write" scoped="" ref="0x7f44226ce350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f44226c3d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f44226c3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44226c70e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f44226c7270"/>
        <function-ref name="sfd" scoped="" ref="0x7f44226c7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f44226ebbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f44226ebbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44226e9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f44226e91b0"/>
        <function-ref name="modify" scoped="" ref="0x7f44226e9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44226e94d0"/>
        <function-ref name="resend" scoped="" ref="0x7f44226e9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f44226d1d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44226d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f44226d00e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f44226d0270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f44226d0400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f44226cdc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44226cdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f44226d5820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f44226d5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44226d5ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44226d5d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f44226d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44226d31b0"/>
        <function-ref name="get" scoped="" ref="0x7f44226d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44226d34d0"/>
        <function-ref name="set" scoped="" ref="0x7f44226d3660"/>
        <function-ref name="clr" scoped="" ref="0x7f44226d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44226ecc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44226ecc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44226eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f44226e2bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f44226e2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f44226e1020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f44226e11b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f44226e1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f44226d6be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f44226d6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44226dc020"/>
        <function-ref name="isSet" scoped="" ref="0x7f44226dc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44226dc340"/>
        <function-ref name="set" scoped="" ref="0x7f44226dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f44226cc3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44226cc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226cc960"/>
        <function-ref name="write" scoped="" ref="0x7f44226ccaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f44226d1020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f44226d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44226d13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44226d1530"/>
        <function-ref name="request" scoped="" ref="0x7f44226d16c0"/>
        <function-ref name="granted" scoped="" ref="0x7f44226d1850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44226d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f44226db500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f44226db500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44226db980"/>
        <function-ref name="isInput" scoped="" ref="0x7f44226dbb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f44226dbca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44226dbe30"/>
        <function-ref name="get" scoped="" ref="0x7f44226d5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44226d51b0"/>
        <function-ref name="set" scoped="" ref="0x7f44226d5340"/>
        <function-ref name="clr" scoped="" ref="0x7f44226d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f44226c9130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f44226c9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226c94b0"/>
        <function-ref name="write" scoped="" ref="0x7f44226c9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f44226c99c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f44226c99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226c9d40"/>
        <function-ref name="write" scoped="" ref="0x7f44226c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f44226ce6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f44226ce6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226cea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f44226d3b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f44226d3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44226d2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f44226d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44226d2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44226d24d0"/>
        <function-ref name="get" scoped="" ref="0x7f44226d2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44226d27f0"/>
        <function-ref name="set" scoped="" ref="0x7f44226d2980"/>
        <function-ref name="clr" scoped="" ref="0x7f44226d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f44226c76c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f44226c76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44226c7a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f44226c7bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f44226c7d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44226c6020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44226c61b0"/>
        <function-ref name="get" scoped="" ref="0x7f44226c6340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44226c64d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44226c6b10"/>
        <function-ref name="set" scoped="" ref="0x7f44226c6660"/>
        <function-ref name="led0On" scoped="" ref="0x7f44226c67f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f44226c6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f44226cb5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f44226cb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226cb960"/>
        <function-ref name="write" scoped="" ref="0x7f44226cbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f44226eb320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f44226eb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f44226eb6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f44226eb830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f44226d0780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f44226d0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44226d0b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44226d0c90"/>
        <function-ref name="write" scoped="" ref="0x7f44226d0e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44226cf020"/>
        <function-ref name="readDone" scoped="" ref="0x7f44226cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f44226cede0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f44226cede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226cd180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f44226cce80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f44226cce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226cb220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f44226e70f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f44226e70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f44226e7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4422629c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4422629c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422628210"/>
        <function-ref name="write" scoped="" ref="0x7f44226283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4422633020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4422633020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f442262dc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f442262dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442262b020"/>
        <function-ref name="write" scoped="" ref="0x7f442262b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4422627670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4422627670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226279f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422627b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4422620e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4422620e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261f210"/>
        <function-ref name="write" scoped="" ref="0x7f442261f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4422627e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4422627e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422626210"/>
        <function-ref name="write" scoped="" ref="0x7f44226263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f44226132f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f44226132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422613670"/>
        <function-ref name="write" scoped="" ref="0x7f4422613800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f44226152f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f44226152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422615670"/>
        <function-ref name="write" scoped="" ref="0x7f4422615800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4422632370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4422632370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226326f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f442261b670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f442261b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f442261bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f44226162f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44226162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422616670"/>
        <function-ref name="write" scoped="" ref="0x7f4422616800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f442262bc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f442262bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442262a020"/>
        <function-ref name="write" scoped="" ref="0x7f442262a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f442262ac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f442262ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422629020"/>
        <function-ref name="write" scoped="" ref="0x7f44226291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4422621670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4422621670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226219f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422621b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4422623e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4422623e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422622210"/>
        <function-ref name="write" scoped="" ref="0x7f44226223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4422626670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4422626670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226269f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422626b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f44226358f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44226358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4422635c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4422635e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4422634020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4422630d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4422630d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442262f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f442262f370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f442262f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442262f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f442261aa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f442261aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261adf0"/>
        <function-ref name="write" scoped="" ref="0x7f4422619020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f442262fac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f442262fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442262fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4422616ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4422616ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422616e50"/>
        <function-ref name="write" scoped="" ref="0x7f4422615020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4422630060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4422630060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226303e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f442261ce50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f442261ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261b210"/>
        <function-ref name="write" scoped="" ref="0x7f442261b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f442262a480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f442262a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442262a800"/>
        <function-ref name="write" scoped="" ref="0x7f442262a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f442262b480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f442262b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442262b800"/>
        <function-ref name="write" scoped="" ref="0x7f442262b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4422634940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4422634940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422634cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f442261de50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f442261de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261c210"/>
        <function-ref name="write" scoped="" ref="0x7f442261c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f442261f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f442261f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f442261fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f442261c670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f442261c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f442261cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4422614ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4422614ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422614e50"/>
        <function-ref name="write" scoped="" ref="0x7f4422613020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4422615ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4422615ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422615e50"/>
        <function-ref name="write" scoped="" ref="0x7f4422614020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4422622670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4422622670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226229f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422622b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f442261fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f442261fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261d210"/>
        <function-ref name="write" scoped="" ref="0x7f442261d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4422618ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4422618ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422618e50"/>
        <function-ref name="write" scoped="" ref="0x7f4422616020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4422624670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4422624670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226249f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422624b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4422613ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4422613ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4422613e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4422612020"/>
        <function-ref name="write" scoped="" ref="0x7f44226121b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4422612340"/>
        <function-ref name="readDone" scoped="" ref="0x7f44226124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f44226342f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f44226342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422634670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f442262d490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f442262d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442262d810"/>
        <function-ref name="write" scoped="" ref="0x7f442262d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4422629480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4422629480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422629800"/>
        <function-ref name="write" scoped="" ref="0x7f4422629990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4422621e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4422621e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422620210"/>
        <function-ref name="write" scoped="" ref="0x7f44226203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4422626e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4422626e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422624210"/>
        <function-ref name="write" scoped="" ref="0x7f44226243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4422620670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4422620670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226209f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422620b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4422628670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4422628670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226289f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422628b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4422633670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4422633670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226339f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4422628e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4422628e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422627210"/>
        <function-ref name="write" scoped="" ref="0x7f44226273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4422636c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4422636c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422635020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44226351b0"/>
        <function-ref name="request" scoped="" ref="0x7f4422635340"/>
        <function-ref name="granted" scoped="" ref="0x7f44226354d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422635660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f442262e160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f442262e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442262e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f442262ee00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f442262ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442262d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f44226182f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f44226182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422618670"/>
        <function-ref name="write" scoped="" ref="0x7f4422618800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4422619ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4422619ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422619e50"/>
        <function-ref name="write" scoped="" ref="0x7f4422618020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f44226306b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44226306b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422630a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f44226192f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44226192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422619670"/>
        <function-ref name="write" scoped="" ref="0x7f4422619800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f44226142f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f44226142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422614670"/>
        <function-ref name="write" scoped="" ref="0x7f4422614800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4422622e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4422622e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422621210"/>
        <function-ref name="write" scoped="" ref="0x7f44226213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f442261d670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f442261d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f442261db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4422633cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4422633cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44226320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f44226329c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f44226329c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4422632d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4422624e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4422624e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4422623210"/>
        <function-ref name="write" scoped="" ref="0x7f44226233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f442262e7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f442262e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f442262eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4422623670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4422623670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44226239f0"/>
        <function-ref name="write" scoped="" ref="0x7f4422623b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f442261be50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f442261be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f442261a610"/>
        <function-ref name="write" scoped="" ref="0x7f442261a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f44226127a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f44226127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4422612b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4422612cb0"/>
        <function-ref name="write" scoped="" ref="0x7f4422612e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4422611020"/>
        <function-ref name="readDone" scoped="" ref="0x7f44226111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4422606df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4422606df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44226031c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4422603350"/>
        <function-ref name="sfd" scoped="" ref="0x7f44226034e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f44226037c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f44226037c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4422603b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4422601020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4422601020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f44226013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f44226065c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f44226065c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4422606940"/>
        <function-ref name="stop" scoped="" ref="0x7f4422606ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f44225fa380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f44225fa380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44225fa700"/>
        <function-ref name="isInput" scoped="" ref="0x7f44225fa890"/>
        <function-ref name="toggle" scoped="" ref="0x7f44225faa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44225fabb0"/>
        <function-ref name="get" scoped="" ref="0x7f44225fad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44225f9020"/>
        <function-ref name="set" scoped="" ref="0x7f44225f91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f44225f9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f44225f3b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f44225f3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f44225f2020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f44225f21b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f44225f2340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f44225f24d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f44225f2660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f44225f27f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f44225f2980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f44225f2b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f44225f2ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f44225f2e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f44225f1020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f44225f11b0"/>
        <function-ref name="sync" scoped="" ref="0x7f44225f1340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f44225f15d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f44225f1760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f44225dc9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f44225dc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44225dcd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f44225da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f44225f1d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f44225f1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f44225ee330"/>
        <function-ref name="clear" scoped="" ref="0x7f44225eea60"/>
        <function-ref name="isValid" scoped="" ref="0x7f44225f0ba0"/>
        <function-ref name="set" scoped="" ref="0x7f44225ed210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f44225f96b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f44225f96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44225f9a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f44225f9bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f44225f9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44225f8020"/>
        <function-ref name="get" scoped="" ref="0x7f44225f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44225f8340"/>
        <function-ref name="set" scoped="" ref="0x7f44225f84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f44225f8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f44225eccb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f44225eccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44225eb0a0"/>
        <function-ref name="write" scoped="" ref="0x7f44225eb230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f44225eb590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f44225eb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44225eb910"/>
        <function-ref name="write" scoped="" ref="0x7f44225ebaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f44225e96d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f44225e96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44225e9a50"/>
        <function-ref name="write" scoped="" ref="0x7f44225e9be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f44225f4330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f44225f4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f44225f46b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f44225f4840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f44225f49d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f44225f4b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f44225f4cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f44225f4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f44225fd550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f44225fd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44225fd8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f44225fda60"/>
        <function-ref name="sfd" scoped="" ref="0x7f44225fdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f44225f53a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f44225f53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44225f5720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f44225fb020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f44225fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f44225fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f44225fb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f44225fb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f44225fb850"/>
        <function-ref name="get" scoped="" ref="0x7f44225fb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f44225fbb70"/>
        <function-ref name="set" scoped="" ref="0x7f44225fbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f44225fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f44225e8020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44225e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44225e83a0"/>
        <function-ref name="write" scoped="" ref="0x7f44225e8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44225fe620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44225fe620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44225fe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f44225f31e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f44225f31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f44225f3560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f44225f36f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f44225f3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f44225fc020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f44225fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44225fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f44225f76e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f44225f76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44225f7a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44225f7bf0"/>
        <function-ref name="request" scoped="" ref="0x7f44225f7d80"/>
        <function-ref name="granted" scoped="" ref="0x7f44225f6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44225f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f44225ebe00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f44225ebe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44225e91c0"/>
        <function-ref name="write" scoped="" ref="0x7f44225e9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f44225f6530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f44225f6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44225f68b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44225f6a40"/>
        <function-ref name="write" scoped="" ref="0x7f44225f6bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44225f6d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f44225f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f44225e88b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f44225e88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44225e8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f44225fc7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f44225fc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f44225fcb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f44225e7150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f44225e7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44225e74d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f44225e7660"/>
        <function-ref name="led1On" scoped="" ref="0x7f44225e77f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44225e7980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44225e7b10"/>
        <function-ref name="get" scoped="" ref="0x7f44225e7ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44225e7e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44225e64d0"/>
        <function-ref name="set" scoped="" ref="0x7f44225e6020"/>
        <function-ref name="led0On" scoped="" ref="0x7f44225e61b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f44225e6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f44225ec3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f44225ec3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44225ec760"/>
        <function-ref name="write" scoped="" ref="0x7f44225ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f44225edb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f44225edb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44225ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f44225f8a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f44225f8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f44225f8dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f44225f7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f44225f71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f44225f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f44225f5ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44225f5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44225f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f44225feca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f44225feca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f44225fd0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f44225fd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f442257ba70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f442257ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f442257bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f442257f670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f442257f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f442257f9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f442257fb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f442257fd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f442257c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f442257c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f442257c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f442257a550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442257a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4422579b00"/>
        <function-ref name="clear" scoped="" ref="0x7f44225772a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f44225793d0"/>
        <function-ref name="set" scoped="" ref="0x7f44225779d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f442257b0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442257b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f442257b440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f442257b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f442257b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4422572480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4422572480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422572800"/>
        <function-ref name="isSet" scoped="" ref="0x7f4422572990"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422572b20"/>
        <function-ref name="set" scoped="" ref="0x7f4422572cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4422576660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4422576660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4422575ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f4422573460"/>
        <function-ref name="isValid" scoped="" ref="0x7f44225755b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422573b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f442257c6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f442257c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f442257ca60"/>
        <function-ref name="noAck" scoped="" ref="0x7f442257cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f442257cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f442256c020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f442256c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f442256c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4422571d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4422571d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f442256e0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f442256e270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f442256e400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f442256e590"/>
        <function-ref name="getPower" scoped="" ref="0x7f442256e720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f442256e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f44225634a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f44225634a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422563820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f44225639b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422563b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4422563cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4422563e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f442256ca80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f442256ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4422569020"/>
        <function-ref name="clear" scoped="" ref="0x7f4422569750"/>
        <function-ref name="isValid" scoped="" ref="0x7f442256a8d0"/>
        <function-ref name="set" scoped="" ref="0x7f4422569e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f442256d640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f442256d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f442256d9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f442256db50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f442256dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f44225648b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f44225648b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422564c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f4422564dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422563020"/>
        <function-ref name="set" scoped="" ref="0x7f44225631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f442255e820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f442255e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44225604c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f4422560b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4422560b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f442255f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4422568af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4422568af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f44225650d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4422565800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4422566970"/>
        <function-ref name="set" scoped="" ref="0x7f4422564020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f442256ec50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f442256ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f442256d020"/>
        <function-ref name="noAck" scoped="" ref="0x7f442256d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f442256d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f442250e790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f442250e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f442250d3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f442250da60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f442250da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4422503890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422502260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422503d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422502720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f44224fd1d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f44224fd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44224f9630"/>
        <function-ref name="fired" scoped="" ref="0x7f44224fcc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f44224fa9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f44224fa550"/>
        <function-ref name="getdt" scoped="" ref="0x7f44224f8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f44224f9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44224fa0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f44224fddc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f44224f9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f44224fc2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f44224fc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f44224f8610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f44224f8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44224f63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44224fe3a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44224fe3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44224fe720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f44224c9870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f44224c9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44224c5090"/>
        <function-ref name="fired" scoped="" ref="0x7f44224c7090"/>
        <function-ref name="startAt" scoped="" ref="0x7f44224c7a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44224c7550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f44224c5550"/>
        <function-ref name="start" scoped="" ref="0x7f44224c86a0"/>
        <function-ref name="stop" scoped="" ref="0x7f44224c8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44224c9020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44224c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44224c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4421580260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4421580260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f442157eb30"/>
        <function-ref name="fired" scoped="" ref="0x7f442157fa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f442157e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f442157e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f442157d020"/>
        <function-ref name="start" scoped="" ref="0x7f442157f090"/>
        <function-ref name="stop" scoped="" ref="0x7f442157f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44215819d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44215819d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4421581d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4421568a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4421568a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4421568e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4421567020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f44215671b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4421567340"/>
        <function-ref name="fired" scoped="" ref="0x7f44215674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f442156a020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f442156a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442156a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f442156a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442156a6c0"/>
        <function-ref name="get" scoped="" ref="0x7f442156a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442156a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442156ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f442156ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4421569020"/>
        <function-ref name="overflow" scoped="" ref="0x7f44215691b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4421569340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f44215694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4421569760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4421569760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4421569ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4421569c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4421569e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4421568020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f44215681b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4421568340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f44215684d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4421568660"/>
        <function-ref name="setControl" scoped="" ref="0x7f44215687f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f442155c760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f442155c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f442155cae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f442155cc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f442155ce00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f442155b020"/>
        <function-ref name="fired" scoped="" ref="0x7f442155b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f442155fdd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f442155fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442155e180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f442155e310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442155e4a0"/>
        <function-ref name="get" scoped="" ref="0x7f442155e630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442155e7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f442155e950"/>
        <function-ref name="getMode" scoped="" ref="0x7f442155eae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f442155ec70"/>
        <function-ref name="overflow" scoped="" ref="0x7f442155ee00"/>
        <function-ref name="setMode" scoped="" ref="0x7f442155d020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f442155d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4421563bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4421563bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f442155f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f44215604e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4421560e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44215609a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f442155f9a0"/>
        <function-ref name="start" scoped="" ref="0x7f4421562a80"/>
        <function-ref name="stop" scoped="" ref="0x7f4421560020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4421563360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4421563360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44215636e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f442155d440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f442155d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f442155d7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f442155d950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f442155dae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f442155dc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f442155de00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f442155c020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f442155c1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f442155c340"/>
        <function-ref name="setControl" scoped="" ref="0x7f442155c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f44224e8b70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f44224e8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44224e59b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f44224e4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44224e5e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f44224e4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f44224ddb90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f44224ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44224dc9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f44224db4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44224db020"/>
        <function-ref name="overflow" scoped="" ref="0x7f44224db9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f44224e0610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f44224e0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44224df5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f44224dd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f44224dfa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f44224dd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f442157a5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f442157a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4421578e50"/>
        <function-ref name="fired" scoped="" ref="0x7f4421579e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f4421578800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4421578340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4421577340"/>
        <function-ref name="start" scoped="" ref="0x7f4421579430"/>
        <function-ref name="stop" scoped="" ref="0x7f4421579940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4421575d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4421575d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4421571670"/>
        <function-ref name="fired" scoped="" ref="0x7f4421572550"/>
        <function-ref name="startAt" scoped="" ref="0x7f4421571020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4421572a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4421571b30"/>
        <function-ref name="start" scoped="" ref="0x7f4421573b60"/>
        <function-ref name="stop" scoped="" ref="0x7f4421572090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f44215779b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f44215779b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f44215767e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f44215751b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4421576ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4421575670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f44224939c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f44224939c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4422493d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f4422491020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4422496850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4422496850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4422493090"/>
        <function-ref name="fired" scoped="" ref="0x7f4422494090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4422494a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4422494550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4422493550"/>
        <function-ref name="start" scoped="" ref="0x7f44224956a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4422495bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f442249c2f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f442249c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4422498870"/>
        <function-ref name="fired" scoped="" ref="0x7f442249ae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4422499c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4422499780"/>
        <function-ref name="getdt" scoped="" ref="0x7f44224961e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4422498cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4422499300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f442249a020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4422498260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f442249a4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f442249a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4422414020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4422414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4422410630"/>
        <function-ref name="fired" scoped="" ref="0x7f4422413a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4422411920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f44224114a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f442240f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4422410ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4422411020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4422414c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4422410020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4422413110"/>
        <function-ref name="stop" scoped="" ref="0x7f44224135e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f442240f450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f442240f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f442240f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f442241b8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f442241b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4422415020"/>
        <function-ref name="fired" scoped="" ref="0x7f44224184c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4422417300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4422418e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4422415960"/>
        <function-ref name="gett0" scoped="" ref="0x7f44224154c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4422418960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f442241a560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4422417930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f442241aa50"/>
        <function-ref name="stop" scoped="" ref="0x7f4422418020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f4421502020" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f4421502020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44215023a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4421502530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4421509180" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4421509180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4421506630"/>
        <function-ref name="fired" scoped="" ref="0x7f4421508bf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4421507990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4421507510"/>
        <function-ref name="getdt" scoped="" ref="0x7f4421504020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4421506ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4421507090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4421509d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4421506020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f44215082a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4421508770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f44215038b0" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f44215038b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f4421503c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f4421504410" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f4421504410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f44215034d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f4421503660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f4421504ab0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f4421504c40"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f4421504dd0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f4421503020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f44215031b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f4421503340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f4421504790"/>
        <function-ref name="node_id" scoped="" ref="0x7f4421504920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4421511bc0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4421511bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f442150b220"/>
        <function-ref name="fired" scoped="" ref="0x7f442150e740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f442150c570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f442150c0d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f442150bb60"/>
        <function-ref name="gett0" scoped="" ref="0x7f442150b6c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f442150ebe0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f442150f860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f442150cba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f442150fd50"/>
        <function-ref name="stop" scoped="" ref="0x7f442150e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f442240ca20" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f442240ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f442240b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f442240bd20" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f442240bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f442240ab60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4422409550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4422409090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4422409a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4422402ce0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4422402ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44223ed220"/>
        <function-ref name="fired" scoped="" ref="0x7f44223f07c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f44223ef590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f44223ef110"/>
        <function-ref name="getdt" scoped="" ref="0x7f44223edb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f44223ed6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44223f0c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f44223f1940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f44223efba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f44223f1e10"/>
        <function-ref name="stop" scoped="" ref="0x7f44223f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f44223f9610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f44223f9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f44223f6c40"/>
        <function-ref name="fired" scoped="" ref="0x7f44223f71e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f44223f6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f44223f7ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f44223f4590"/>
        <function-ref name="gett0" scoped="" ref="0x7f44223f4110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f44223f7660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f44223f8390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f44223f6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f44223f8860"/>
        <function-ref name="stop" scoped="" ref="0x7f44223f8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f44223dc2f0" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f44223dc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223dc870"/>
        <function-ref name="write" scoped="" ref="0x7f44223dca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f44223e7670" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f44223e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f44223df2f0" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f44223df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223df670"/>
        <function-ref name="write" scoped="" ref="0x7f44223df800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f44223dbce0" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f44223dbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223da0a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223da230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f44223d3500" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f44223d3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d3880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f44223da500" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f44223da500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223da880"/>
        <function-ref name="write" scoped="" ref="0x7f44223daa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f44223c7900" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f44223c7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223c7c80"/>
        <function-ref name="write" scoped="" ref="0x7f44223c7e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f44223c9900" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f44223c9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223c9c80"/>
        <function-ref name="write" scoped="" ref="0x7f44223c9e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f44223e59c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f44223e59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f44223cfce0" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f44223cfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223ce0a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223ce230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f44223ca900" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f44223ca900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cac80"/>
        <function-ref name="write" scoped="" ref="0x7f44223cae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f44223de2f0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f44223de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223de670"/>
        <function-ref name="write" scoped="" ref="0x7f44223de800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f44223dd2f0" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f44223dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223dd670"/>
        <function-ref name="write" scoped="" ref="0x7f44223dd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f44223d5ce0" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f44223d5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d40a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f44223d6500" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f44223d6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d6880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f44223dace0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f44223dace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d80a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f44223e8020" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f44223e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f44223e83a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f44223e8530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f44223e86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f44223e3370" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f44223e3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f44223e39c0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f44223e39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f44223cd120" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f44223cd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cd4a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223cd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f44223e2160" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f44223e2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f44223c9120" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f44223c9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223c94a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223c9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f44223e46b0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f44223e46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f44223cf500" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f44223cf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cf880"/>
        <function-ref name="write" scoped="" ref="0x7f44223cfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f44223dead0" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f44223dead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223dee50"/>
        <function-ref name="write" scoped="" ref="0x7f44223dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f44223dfad0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f44223dfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223dfe50"/>
        <function-ref name="write" scoped="" ref="0x7f44223de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f44223e7020" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f44223e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f44223d0500" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f44223d0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d0880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f44223d3ce0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f44223d3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d10a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f44223d0ce0" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f44223d0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cf0a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223cf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f44223c7120" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f44223c7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223c74a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223c7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f44223c8120" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f44223c8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223c84a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223c8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f44223d6ce0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f44223d6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d50a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f44223d1500" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f44223d1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d1880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f44223ca120" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f44223ca120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223ca4a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223ca630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f44223d8ce0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f44223d8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d70a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f44223c6120" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f44223c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44223c64a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44223c6630"/>
        <function-ref name="write" scoped="" ref="0x7f44223c67c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44223c6950"/>
        <function-ref name="readDone" scoped="" ref="0x7f44223c6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f44223e8990" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f44223e8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f44223e1ae0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f44223e1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223e1e60"/>
        <function-ref name="write" scoped="" ref="0x7f44223df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f44223ddad0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f44223ddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223dde50"/>
        <function-ref name="write" scoped="" ref="0x7f44223dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f44223d4500" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f44223d4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d4880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f44223d8500" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f44223d8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d8880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f44223d4ce0" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f44223d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d30a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f44223dccd0" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f44223dccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223db0a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223db230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f44223e7cc0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f44223e7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f44223db500" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f44223db500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223db880"/>
        <function-ref name="write" scoped="" ref="0x7f44223dba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44223e9250" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44223e9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44223e95d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44223e9760"/>
        <function-ref name="request" scoped="" ref="0x7f44223e98f0"/>
        <function-ref name="granted" scoped="" ref="0x7f44223e9a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44223e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f44223e27b0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f44223e27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f44223e1490" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f44223e1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f44223cc900" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f44223cc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223ccc80"/>
        <function-ref name="write" scoped="" ref="0x7f44223cce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f44223cc120" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f44223cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cc4a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223cc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f44223e4d00" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f44223e4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f44223cd900" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f44223cd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cdc80"/>
        <function-ref name="write" scoped="" ref="0x7f44223cde10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f44223c8900" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f44223c8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223c8c80"/>
        <function-ref name="write" scoped="" ref="0x7f44223c8e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f44223d5500" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f44223d5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d5880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f44223d1ce0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f44223d1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d00a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f44223e5370" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f44223e5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f44223e4060" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f44223e4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e43e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f44223d7500" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f44223d7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d7880"/>
        <function-ref name="write" scoped="" ref="0x7f44223d7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f44223e2e00" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f44223e2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f44223e11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f44223d7ce0" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f44223d7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223d60a0"/>
        <function-ref name="write" scoped="" ref="0x7f44223d6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f44223ce500" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f44223ce500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f44223cec80"/>
        <function-ref name="write" scoped="" ref="0x7f44223cee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f44223c6db0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f44223c6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f44223c5180"/>
        <function-ref name="writeDone" scoped="" ref="0x7f44223c5310"/>
        <function-ref name="write" scoped="" ref="0x7f44223c54a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f44223c5630"/>
        <function-ref name="readDone" scoped="" ref="0x7f44223c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f442239ba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f442239ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f442239bda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f442239a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4422399920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4422399920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f442239b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f442239f990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f442239f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f442239fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4422390a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4422390a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4422390da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f442238f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4422391940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4422391940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4422390560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4422391080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4422391080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4422391400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f442239daa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f442239daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f442239de20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422392020"/>
        <function-ref name="isState" scoped="" ref="0x7f44223921b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422392340"/>
        <function-ref name="requestState" scoped="" ref="0x7f44223924d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422392660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4422379020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4422379020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44223793a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422379530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44223796c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422379850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44223799e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f442237a220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f442237a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442237a5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442237a730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442237a8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f442237aa50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442237abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4422375e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4422375e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422374210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44223743a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4422374530"/>
        <function-ref name="cancel" scoped="" ref="0x7f44223746c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422374850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4422378a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4422378a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422378d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422375020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44223751b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422375340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44223754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f44223738f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f44223738f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4422373c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f4422373e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4422375750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4422375750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4422375ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4422371170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422371170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f44223714f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4422371680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4422371810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f4422374ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4422374ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4422374e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422373020"/>
        <function-ref name="isState" scoped="" ref="0x7f44223731b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422373340"/>
        <function-ref name="requestState" scoped="" ref="0x7f44223734d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422373660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4422361690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4422361690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4422361a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4422361ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f4422361d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4422360020"/>
        <function-ref name="requestState" scoped="" ref="0x7f44223601b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4422360340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f442235a950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f442235a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442235acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f442235daa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f442235daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442235de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f442235a200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f442235a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442235a580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f44223553f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f44223553f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4422355770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4422356b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4422356b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4422355020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4422359e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4422359e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44223561e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4422355a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422355a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4422355df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4422354020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f44223541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4422356570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4422356570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44223568f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4422326020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4422326020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44223263a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f44223266b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f44223266b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422326a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422326bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4422326d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422325020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44223251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f442232b8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f442232b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442232bc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442232bdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442232a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f442232a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442232a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f442232ac90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f442232ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44223290a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422329230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44223293c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422329550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44223296e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f442232a5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f442232a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442232a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f442232cbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f442232cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f442232b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f442232b1b0"/>
        <function-ref name="request" scoped="" ref="0x7f442232b340"/>
        <function-ref name="granted" scoped="" ref="0x7f442232b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f442232b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4422329a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4422329a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4422329dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4422327170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4422327170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44223274f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4422327680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422327810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44223279a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4422327b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f442231dd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f442231dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442231c180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442231c310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442231c4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f442231c630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442231c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f442231cb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f442231cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442231b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f44222eddb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f44222eddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44222ec180"/>
        <function-ref name="runTask" scoped="" ref="0x7f44222ec310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f442231b2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f442231b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f442231b670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f442231b800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f442231b990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f442231bb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f442231bcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f442231be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f442231fa20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f442231fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442231fda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442231e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442231e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f442231e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442231e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4422319b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4422319b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4422318020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f44223181b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4422318340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f44223184d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4422319170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422319170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f44223194f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4422319680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4422319810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f442231f370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f442231f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442231f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f44223217b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f44223217b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422321b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422321cc0"/>
        <function-ref name="request" scoped="" ref="0x7f4422321e50"/>
        <function-ref name="granted" scoped="" ref="0x7f4422320020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44223201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f44223204d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f44223204d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422320850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44223209e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4422320b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422320d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442231f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f442231e840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f442231e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442231ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f442231d020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f442231d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442231d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f442231d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442231d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442231d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f442231d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f44222cddd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f44222cddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44222cc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f44222cc410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f44222cc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f44222cc790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f44222cc920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f44222ccab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f44222ccc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f44222c1b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f44222c1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44222c0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f44222c01b0"/>
        <function-ref name="start" scoped="" ref="0x7f44222c0340"/>
        <function-ref name="stop" scoped="" ref="0x7f44222c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f44222bf860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f44222bf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44222bfbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44222bfd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44222be020"/>
        <function-ref name="cancel" scoped="" ref="0x7f44222be1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44222be340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f44222be690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f44222be690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44222bea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f44222c5ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f44222c5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44222c20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44222c2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44222c23c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44222c2550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44222c26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f44222c1080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f44222c1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f44222c1400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f44222c1590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f44222c1720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f44222c18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f44222c0800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f44222c0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f44222c0b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f44222c0d10"/>
        <function-ref name="isState" scoped="" ref="0x7f44222bf020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f44222bf1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f44222bf340"/>
        <function-ref name="forceState" scoped="" ref="0x7f44222bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f44222bed90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f44222bed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44222bc180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f44222bc310"/>
        <function-ref name="start" scoped="" ref="0x7f44222bc4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f44222bc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f44222c2980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f44222c2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44222c2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f44222b92d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f44222b92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f44222b9650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f44222b97e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f44222b9970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f44222b9b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f44222bb580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f44222bb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f44222bb900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f44222bba90"/>
        <function-ref name="isState" scoped="" ref="0x7f44222bbc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f44222bbdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f44222ba020"/>
        <function-ref name="forceState" scoped="" ref="0x7f44222ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f44222acd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f44222acd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44222ab180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44222ab310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44222ab4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44222ab630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44222ab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f44222af350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f44222af350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44222af6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44222af860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44222af9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44222afb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44222afd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f44222ac020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f44222ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f44222ac3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f44222ac530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f44222ac6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f44222ac850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f44222ac9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f44222a71c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44222a71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f44222a7540"/>
        <function-ref name="noAck" scoped="" ref="0x7f44222a76d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f44222a7860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f44222aa410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f44222aa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f44222aa790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f44222aa920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f44222aaab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f44222aac40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f44222aadd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4422287690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4422287690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4422287a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4422289860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4422289860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422289be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422289d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4422287020"/>
        <function-ref name="cancel" scoped="" ref="0x7f44222871b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422287340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4422285610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4422285610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4422285990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4422285b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4422285cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4422285e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4422284020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f44222841b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4422284340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f44222844d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4422284660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f44222847f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4422284980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4422284b10"/>
        <function-ref name="sync" scoped="" ref="0x7f4422284ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4422283020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f44222831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f442228a8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f442228a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f442228ac30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f442228adc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4422289020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f44222891b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f4422289340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f44222894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f442228bce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f442228bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f442228a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f44222821f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f44222821f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4422282570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4422282700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4422282890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4422282a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f4422282bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4422282d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f442228ca80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f442228ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f442228ce00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f442228b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442228b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442228b340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f442228b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f442228f020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f442228f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442228f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442228f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442228f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f442228f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442228f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f442228edf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f442228edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442228d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4422287ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4422287ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f44222860a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4422286230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f44222863c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4422286550"/>
        <function-ref name="getPower" scoped="" ref="0x7f44222866e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4422286870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f44222834d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f44222834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4422283950"/>
        <function-ref name="changed" scoped="" ref="0x7f4422283ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4422283c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4422283e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4422286b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4422286b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4422285020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f44222851b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4422285340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f442228e210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f442228e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442228e590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4422281d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4422281d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44222800e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4422280270"/>
        <function-ref name="led1On" scoped="" ref="0x7f4422280400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4422280590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4422280720"/>
        <function-ref name="get" scoped="" ref="0x7f44222808b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422280a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f442227f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422280bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4422280d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f442227f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f442228d470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f442228d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f442228d7f0"/>
        <function-ref name="source" scoped="" ref="0x7f442228d980"/>
        <function-ref name="address" scoped="" ref="0x7f442228db10"/>
        <function-ref name="destination" scoped="" ref="0x7f442228dca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f442228de30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f442228c020"/>
        <function-ref name="type" scoped="" ref="0x7f442228c1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f442228c340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f442228c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f442228c660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f442228c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f44222810f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f44222810f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422281470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4422281600"/>
        <function-ref name="request" scoped="" ref="0x7f4422281790"/>
        <function-ref name="granted" scoped="" ref="0x7f4422281920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422281ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f44221f75c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f44221f75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f44221f7940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f44221f7ad0"/>
        <function-ref name="start" scoped="" ref="0x7f44221f7c60"/>
        <function-ref name="stop" scoped="" ref="0x7f44221f7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f44221f4600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f44221f4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44221f4980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44221f4b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44221f4ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f44221f4e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f44221f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f44221f3e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f44221f3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f44221f21c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f44221f2350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44221f24e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44221f2670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f44221f2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f44221f3800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f44221f3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f44221f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f44221f0b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f44221f0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44221ef020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f44221ef1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f44221ef340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44221ef4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44221ef660"/>
        <function-ref name="get" scoped="" ref="0x7f44221ef7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f44221ef980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44221ee020"/>
        <function-ref name="set" scoped="" ref="0x7f44221efb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f44221efca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f44221efe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f44221f01a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f44221f01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f44221f0520"/>
        <function-ref name="noAck" scoped="" ref="0x7f44221f06b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f44221f0840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f44221f2ab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f44221f2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f44221f2e30"/>
        <function-ref name="source" scoped="" ref="0x7f44221f1020"/>
        <function-ref name="address" scoped="" ref="0x7f44221f11b0"/>
        <function-ref name="destination" scoped="" ref="0x7f44221f1340"/>
        <function-ref name="setSource" scoped="" ref="0x7f44221f14d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f44221f1660"/>
        <function-ref name="type" scoped="" ref="0x7f44221f17f0"/>
        <function-ref name="setType" scoped="" ref="0x7f44221f1980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f44221f1b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f44221f1ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f44221f1e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4422191120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4422191120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44221914a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422191630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44221917c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422191950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422191ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4422191d70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4422191d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4422190180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4422195110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4422195110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44221954b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4422195640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f44221957d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4422195960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422195af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4422193a40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4422193a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4422193dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4422192020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44221921b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4422192340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f44221924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4422195e70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4422195e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4422194240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4422192720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4422192720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4422192aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4422192c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4422192dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4422194490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4422194490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4422194810"/>
        <function-ref name="source" scoped="" ref="0x7f44221949a0"/>
        <function-ref name="address" scoped="" ref="0x7f4422194b30"/>
        <function-ref name="destination" scoped="" ref="0x7f4422194cc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4422194e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4422193020"/>
        <function-ref name="type" scoped="" ref="0x7f44221931b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4422193340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f44221934d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4422193660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f44221937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f442218c8d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f442218c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f442218cc50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f442218cde0"/>
        <function-ref name="start" scoped="" ref="0x7f442218b020"/>
        <function-ref name="stop" scoped="" ref="0x7f442218b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f442218a480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f442218a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f44236474b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442218a800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442218a990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442218ab20"/>
        <function-ref name="cancel" scoped="" ref="0x7f442218acb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442218ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f442218c280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f442218c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f442218c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f442218b940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f442218b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f44236474b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442218bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4422187dc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4422187dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4422182180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4422182310"/>
        <function-ref name="led1On" scoped="" ref="0x7f44221824a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4422182630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44221827c0"/>
        <function-ref name="get" scoped="" ref="0x7f4422182950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422182ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44221811b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422182c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f4422182e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f4422181020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f44221874a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f44221874a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f44236474b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f4422187820"/>
        <function-ref name="offset" scoped="" ref="0x7f44221879b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f4422187b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f442217e2f0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f442217e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f442217e670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f442217e800"/>
        <function-ref name="start" scoped="" ref="0x7f442217e990"/>
        <function-ref name="stop" scoped="" ref="0x7f442217eb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f4422117e40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f4422117e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f44221161e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4422116370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f442216d060" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f442216d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f442216d3e0"/>
        <function-ref name="stop" scoped="" ref="0x7f442216d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f442214fd10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f442214fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f442214d0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f442214d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4422181c70" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4422181c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f442217e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f442216ac50" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f442216ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f442216c020"/>
        <function-ref name="flush" scoped="" ref="0x7f442216c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f442211a400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f442211a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f442211a780"/>
        <function-ref name="runTask" scoped="" ref="0x7f442211a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f442216e8e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f442216e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f442216ec60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f442216edf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f442217b020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f442217b1b0"/>
        <function-ref name="putData" scoped="" ref="0x7f442217b340"/>
        <function-ref name="putDone" scoped="" ref="0x7f442217b4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f442217b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f442217b8e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f442217b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f442217bc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f442217bdf0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4422173020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f44221731b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4422173340"/>
        <function-ref name="get" scoped="" ref="0x7f44221734d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422173660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4422173ca0"/>
        <function-ref name="set" scoped="" ref="0x7f44221737f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4422173980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4422173b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f44221130c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f44221130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4422113440"/>
        <function-ref name="runTask" scoped="" ref="0x7f44221135d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f4422178130" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f4422178130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f44221784b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f4422178640"/>
        <function-ref name="startSend" scoped="" ref="0x7f44221787d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f4422178960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f44221745c0" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f44221745c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f4422174940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f4422174ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f4422174c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f4422049c50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f4422049c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4422048020"/>
        <function-ref name="runTask" scoped="" ref="0x7f44220481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f442204d830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f442204d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f44236474b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442204dbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f442204dd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f442204c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f442204c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442204c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f4422048480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f4422048480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4422048800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4422048990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f442204d110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f442204d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f44236474b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f442204d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f442204c760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f442204c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f44236474b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f442204cb00"/>
        <function-ref name="offset" scoped="" ref="0x7f442204cc90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f442204ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f442204a590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f442204a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f442204a910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f442204aaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f442204ac30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f442204adc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4422049020"/>
        <function-ref name="get" scoped="" ref="0x7f44220491b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422049340"/>
        <function-ref name="led2On" scoped="" ref="0x7f4422049980"/>
        <function-ref name="set" scoped="" ref="0x7f4422049660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44220494d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f44220497f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f442204b9d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f442204b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f442204bd50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f442204a020"/>
        <function-ref name="startSend" scoped="" ref="0x7f442204a1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f442204a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f442204b0e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f442204b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f442204b460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f442204b5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f442204b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f4422036d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4422036d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44220410e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4422041270"/>
        <function-ref name="receive" scoped="" ref="0x7f4422041400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4422041590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4422041720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f44220418b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422041a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f4422045b60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f4422045b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f4422042020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f44220421b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f4422042340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f44220424d0"/>
        <function-ref name="putData" scoped="" ref="0x7f4422042660"/>
        <function-ref name="putDone" scoped="" ref="0x7f44220427f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f4422042980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4422041cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4422041cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f44220400a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4422040230"/>
        <function-ref name="led1On" scoped="" ref="0x7f44220403c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4422040550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f44220406e0"/>
        <function-ref name="get" scoped="" ref="0x7f4422040870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4422040a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f44220351b0"/>
        <function-ref name="set" scoped="" ref="0x7f4422040b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f4422040d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f4422035020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4422019020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4422019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44220193a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4422019530"/>
        <function-ref name="receive" scoped="" ref="0x7f44220196c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4422019850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f442201b890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f442201b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f442201bc10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f442201bda0"/>
        <function-ref name="receive" scoped="" ref="0x7f442201a020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f442201a1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f442201a340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f442201a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f442201a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f442201b080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f442201b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f442201b400"/>
        <function-ref name="stop" scoped="" ref="0x7f442201b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4421e87c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421e87c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4421e86020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421e861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4421e85440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4421e85440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421e857c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4421e85950"/>
        <function-ref name="receive" scoped="" ref="0x7f4421e85ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4421e85c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4421e84020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421e84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4421e843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4421e86440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4421e86440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421e867c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4421e86950"/>
        <function-ref name="receive" scoped="" ref="0x7f4421e86ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4421e86c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4421e86e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4421e85020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421e851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421e87020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421e87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421e873a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421e87530"/>
        <function-ref name="request" scoped="" ref="0x7f4421e876c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4421e87850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421e879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4422009a30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4422009a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4422009db0"/>
        <function-ref name="configure" scoped="" ref="0x7f4422007020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4422005020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4422005020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44220053a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4422005530"/>
        <function-ref name="receive" scoped="" ref="0x7f44220056c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4422005850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4422002450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4422002450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f44220027d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4422007860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4422007860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4422007be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4422007d70"/>
        <function-ref name="receive" scoped="" ref="0x7f4422006020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f44220061b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4422006340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f44220064d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4422006660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f44220031d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f44220031d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4422003550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f44220036e0"/>
        <function-ref name="request" scoped="" ref="0x7f4422003870"/>
        <function-ref name="granted" scoped="" ref="0x7f4422003a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4422003b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f442200a7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f442200a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f442200ab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f442200acb0"/>
        <function-ref name="request" scoped="" ref="0x7f442200ae40"/>
        <function-ref name="granted" scoped="" ref="0x7f4422009020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f44220091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f44220011d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f44220011d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4422001550"/>
        <function-ref name="txDone" scoped="" ref="0x7f44220016e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4421f96dc0" loc="47:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421f96dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4421f95180"/>
        <function-ref name="configure" scoped="" ref="0x7f4421f95310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4421f94890" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4421f94890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421f94c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4421f94dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f4421f92020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4421f921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4421f913e0" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421f913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4421f91780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4421f91a50" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4421f91a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4421f91dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4421f90020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4421f901b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4421f90340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4421f904d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4421f90660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4421f907f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4421f90980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4421f90b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4421f90ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4421f90e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4421f8f020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4421f8f1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4421f8f440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4421f8f5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4421f8f760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4421f8f8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4421f8fa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4421f8fc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4421f8fda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4421f8e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4421f8e1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4421f8e340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4421f8e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4421f8e660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4421f8e9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4421f8eb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4421f8ed10"/>
        <function-ref name="tx" scoped="" ref="0x7f4421f8d020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4421f8d1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4421f8d340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4421f8d4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4421f8d660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4421f8d7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f4421f8d980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4421f8db10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4421f8dca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4421f8de30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4421f8c020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4421f8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4421f956d0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4421f956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421f95a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4421f95c00"/>
        <function-ref name="receive" scoped="" ref="0x7f4421f95d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4421f94020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4421f941b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4421f94340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421f944d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4421f8b020" loc="55:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4421f8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4421f8be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4421f8a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4421f8a340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4421f8acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4421f925b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4421f925b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421f92950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421f92ae0"/>
        <function-ref name="request" scoped="" ref="0x7f4421f92c70"/>
        <function-ref name="granted" scoped="" ref="0x7f4421f92e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421f91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421f96020" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421f96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421f963c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421f96550"/>
        <function-ref name="request" scoped="" ref="0x7f4421f966e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4421f96870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421f96a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4421f8c5b0" loc="54:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4421f8c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421f8c950"/>
        <function-ref name="txDone" scoped="" ref="0x7f4421f8cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4421f89120" loc="56:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4421f89120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4421f894a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4421f89630"/>
        <function-ref name="led1On" scoped="" ref="0x7f4421f897c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4421f89950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4421f89ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4421f89c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4421f89e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f4421f884d0"/>
        <function-ref name="set" scoped="" ref="0x7f4421f881b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4421f88020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4421f88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4421f79860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4421f79860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421f79be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4421f79d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4421f7c500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421f7c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4421f7c880"/>
        <function-ref name="stop" scoped="" ref="0x7f4421f7ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4421f7cd30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4421f7cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4421f800e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4421f80270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4421f80400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4421f80590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4421f80720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4421f808b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4421f80a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4421f80bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4421f80d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4421f7f020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4421f7f1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4421f7f340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4421f7f4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4421f7f760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4421f7f8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4421f7fa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4421f7fc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f4421f7fda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4421f7b020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4421f7b1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4421f7b340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4421f7b4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4421f7b660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4421f7b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4421f7b980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4421f7bd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4421f7a020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4421f7a1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f4421f7a340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4421f7a4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4421f7a660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4421f7a7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4421f7a980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4421f7ab10"/>
        <function-ref name="rx" scoped="" ref="0x7f4421f7aca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4421f7ae30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4421f79020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4421f791b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4421f79340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4421f794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4421f6b890" loc="66:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4421f6b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4421f6bc10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4421f6bda0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4421f6a020"/>
        <function-ref name="clr" scoped="" ref="0x7f4421f69c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4421f6a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4421f6a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4421f6a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4421f6a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4421f6a980"/>
        <function-ref name="get" scoped="" ref="0x7f4421f6ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4421f6aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4421f6ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4421f69020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4421f692b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4421f69440"/>
        <function-ref name="set" scoped="" ref="0x7f4421f695d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4421f69760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4421f6a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4421f698f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4421f69a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4421f70020" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4421f70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421f703a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4421f70530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4421f68020" loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4421f68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4421f683a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4421f68530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4421f686c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4421f664d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4421f689e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4421f68b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4421f68d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4421f67020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4421f671b0"/>
        <function-ref name="get" scoped="" ref="0x7f4421f67340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4421f674d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4421f67660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4421f677f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4421f67a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4421f67c10"/>
        <function-ref name="set" scoped="" ref="0x7f4421f67da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4421f66020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4421f68850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4421f661b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4421f66340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4421f66890" loc="68:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4421f66890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4421f66c10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4421f66da0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4421f65020"/>
        <function-ref name="clr" scoped="" ref="0x7f4421f64c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4421f65340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4421f654d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4421f65660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4421f657f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4421f65980"/>
        <function-ref name="get" scoped="" ref="0x7f4421f65b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4421f65ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4421f65e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4421f64020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4421f642b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4421f64440"/>
        <function-ref name="set" scoped="" ref="0x7f4421f645d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4421f64760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4421f651b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4421f648f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4421f64a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4421f753c0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4421f753c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4421f75740"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4421f758d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4421f75a60"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4421f75bf0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4421f75d80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4421f74020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4421f741b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4421f74340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4421f744d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4421f74660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4421f747f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4421f74980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4421f74b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4421f74da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4421f73020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4421f731b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4421f73340"/>
        <function-ref name="isUart" scoped="" ref="0x7f4421f734d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4421f73660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4421f737f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4421f73980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4421f73b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4421f73ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4421f73e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f4421f72020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4421f723b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4421f72540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4421f726d0"/>
        <function-ref name="tx" scoped="" ref="0x7f4421f72860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4421f729f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4421f72b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4421f72d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4421f71020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4421f711b0"/>
        <function-ref name="rx" scoped="" ref="0x7f4421f71340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4421f714d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4421f71660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4421f717f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4421f71980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4421f71b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4421f789c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421f789c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4421f78d40"/>
        <function-ref name="stop" scoped="" ref="0x7f4421f75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4421f6d020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4421f6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4421f6d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4421f6d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4421f6d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f4421f6b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4421f6d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4421f6db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4421f6dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4421f6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4421f6c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4421f6c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4421f6c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4421f6c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4421f6c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4421f6ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4421f6cc10"/>
        <function-ref name="set" scoped="" ref="0x7f4421f6cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4421f6b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4421f6d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4421f6b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4421f6b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4421f708f0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4421f708f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4421f70c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4421f70e00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4421f6f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4421f6ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4421f6f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4421f6f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4421f6f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f4421f6f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4421f6f980"/>
        <function-ref name="get" scoped="" ref="0x7f4421f6fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f4421f6fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4421f6fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f4421f6e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4421f6e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f4421f6e440"/>
        <function-ref name="set" scoped="" ref="0x7f4421f6e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4421f6e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f4421f6f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4421f6e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4421f6ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4421ee77c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4421ee77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c4c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f44235c3020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4421ee4620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4421ee2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4421ee4ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4421ee24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4421402a90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421402a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4421402e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421401020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f44213fcbe0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44213fcbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f44213fb020"/>
        <function-ref name="configure" scoped="" ref="0x7f44213fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f44213fc440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f44213fc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f44213fc7c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f44213fc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421403e00" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421403e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44214021c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421402350"/>
        <function-ref name="request" scoped="" ref="0x7f44214024e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4421402670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421402800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4421401a50" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4421401a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4421401dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4421400020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f44214001b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4421400340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f44214004d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4421400660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f44214007f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4421400980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4421400b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4421400ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4421400e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f44213ff020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f44213ff1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f44213ff440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f44213ff5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f44213ff760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f44213ff8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f44213ffa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f44213ffc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f44213ffda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f44213fe020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f44213fe1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f44213fe340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f44213fe4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f44213fe660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f44213fe9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f44213feb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f44213fed10"/>
        <function-ref name="tx" scoped="" ref="0x7f44213fd020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f44213fd1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f44213fd340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f44213fd4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f44213fd660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f44213fd7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f44213fd980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f44213fdb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f44213fdca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f44213fde30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f44213fc020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f44213fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f44214012b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f44214012b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421401630"/>
        <function-ref name="userId" scoped="" ref="0x7f44214017c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4421ec9510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421ec9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4421ec9890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421ec9a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4421ec8af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421ec8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4421ec8e70"/>
        <function-ref name="configure" scoped="" ref="0x7f4421ec7030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4421ecc510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4421ecc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421ecc890"/>
        <function-ref name="txDone" scoped="" ref="0x7f4421ecca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421ecb280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421ecb280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421ecb600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421ecb790"/>
        <function-ref name="request" scoped="" ref="0x7f4421ecb920"/>
        <function-ref name="granted" scoped="" ref="0x7f4421ecbab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421ecbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4421ec9d20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ec9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421ec80e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4421ec8270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4421ec2120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ec2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421ec24a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4421ec2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4421ec6230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4421ec6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421ec65d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4421ec6760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4421ec3ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4421ec3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4421ec3e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4421ec6b60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4421ec6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4421ec3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4421ec32f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4421ec32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4421ec3670"/>
        <function-ref name="txDone" scoped="" ref="0x7f4421ec3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4421ebebd0" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4421ebebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4421ebd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421ebd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4421ebc950" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4421ebc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4421ebccf0"/>
        <function-ref name="configure" scoped="" ref="0x7f4421ebce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4421ebd400" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421ebd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421ebd780"/>
        <function-ref name="requested" scoped="" ref="0x7f4421ebd910"/>
        <function-ref name="granted" scoped="" ref="0x7f4421ebdaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421ebdc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421ebddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421ebfe30" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421ebfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421ebe210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421ebe3a0"/>
        <function-ref name="request" scoped="" ref="0x7f4421ebe530"/>
        <function-ref name="granted" scoped="" ref="0x7f4421ebe6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421ebe850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f4421ebb0f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f4421ebb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421ebb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4421ebc060" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ebc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421ebc3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4421ebc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4421396020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4421396020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f44213963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4421396630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4421396630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f44213969b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4421396b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4421396cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4421396e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f44213936c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f44213936c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4421393a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421393bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f44213909d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f44213909d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4421390d70"/>
        <function-ref name="configure" scoped="" ref="0x7f442138f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f442138f2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f442138f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f442138f630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f442138f7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f442138f950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f442138fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4421393e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421393e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f44213911e0"/>
        <function-ref name="requested" scoped="" ref="0x7f4421391370"/>
        <function-ref name="granted" scoped="" ref="0x7f4421391500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421391690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421391820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f442138fd30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f442138fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f442138e0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f442138e270"/>
        <function-ref name="led1On" scoped="" ref="0x7f442138e400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f442138e590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f442138e720"/>
        <function-ref name="get" scoped="" ref="0x7f442138e8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f442138ea40"/>
        <function-ref name="led0On" scoped="" ref="0x7f442138d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f442138ed60"/>
        <function-ref name="led2On" scoped="" ref="0x7f442138ebd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f442138d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4421394850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421394850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421394bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421394d80"/>
        <function-ref name="request" scoped="" ref="0x7f4421393020"/>
        <function-ref name="granted" scoped="" ref="0x7f44213931b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421393340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f44213902d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f44213902d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421390650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4421391a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421391a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421391df0"/>
        <function-ref name="userId" scoped="" ref="0x7f4421390020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f442138d480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f442138d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f442138d800"/>
        <function-ref name="runTask" scoped="" ref="0x7f442138d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4421eb7780" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4421eb7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4421eb7b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4421eb7d50" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421eb7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421ea0100"/>
        <function-ref name="requested" scoped="" ref="0x7f4421ea0290"/>
        <function-ref name="granted" scoped="" ref="0x7f4421ea0420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421ea05b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421ea0740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4421eb7020" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4421eb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4421eb73a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4421eb7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4421ea0990" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421ea0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4421ea0d10"/>
        <function-ref name="userId" scoped="" ref="0x7f4421e9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4421358e00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4421358e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f44213571c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4421357410" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4421357410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421357790"/>
        <function-ref name="requested" scoped="" ref="0x7f4421357920"/>
        <function-ref name="granted" scoped="" ref="0x7f4421357ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421357c40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4421357dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f44213586a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f44213586a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4421358a20"/>
        <function-ref name="stop" scoped="" ref="0x7f4421358bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4421356060" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4421356060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f44213563e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4421356570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f4421e808e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4421e808e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4421e80c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4421e7f020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4421e7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4421e7f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4421e7f530"/>
        <function-ref name="request" scoped="" ref="0x7f4421e7f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4421e7f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4421e7f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4421e80080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4421e80080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4421e80400"/>
        <function-ref name="stop" scoped="" ref="0x7f4421e80590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f4421e6da30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f4421e6da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f4421e6ddb0"/>
        <function-ref name="offset" scoped="" ref="0x7f4421e69020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f4421e691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4421e5b060" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerTramaTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4421e5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4421e57630"/>
        <function-ref name="fired" scoped="" ref="0x7f4421e5aac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4421e59920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4421e594a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4421e56020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4421e57ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4421e59020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4421e5bc50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4421e57020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4421e5a170"/>
        <function-ref name="stop" scoped="" ref="0x7f4421e5a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4421e55b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4421e55b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f44235c44d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f44235c4840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4421e50110"/>
        <function-ref name="fired" scoped="" ref="0x7f4421e535b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4421e514a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4421e51020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4421e50a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4421e50590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4421e53a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4421e54750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4421e51ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4421e54c20"/>
        <function-ref name="stop" scoped="" ref="0x7f4421e53130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4421dc2020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4421dc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421dc23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421dc2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421dc26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4421dc2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421dc29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4421dc2c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4421dc2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4421dc1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4421dc11b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421dc1340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421dc14d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4421dc1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4421dc18b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4421dc18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4421dc1c30"/>
        <function-ref name="source" scoped="" ref="0x7f4421dc1dc0"/>
        <function-ref name="address" scoped="" ref="0x7f4421dc0020"/>
        <function-ref name="destination" scoped="" ref="0x7f4421dc01b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4421dc0340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4421dc04d0"/>
        <function-ref name="type" scoped="" ref="0x7f4421dc0660"/>
        <function-ref name="setType" scoped="" ref="0x7f4421dc07f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4421dc0980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4421dc0b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4421dc0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4421dbf020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4421dbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4421dbf3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4421dbf530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4421dbf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4421344920" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4421344920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421344ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421344e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421343020"/>
        <function-ref name="cancel" scoped="" ref="0x7f44213431b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421343340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4421343590" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4421343590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4421343910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4421343aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421343c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421343dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4421341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4421341270" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4421341270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f44213415f0"/>
        <function-ref name="source" scoped="" ref="0x7f4421341780"/>
        <function-ref name="address" scoped="" ref="0x7f4421341910"/>
        <function-ref name="destination" scoped="" ref="0x7f4421341aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4421341c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4421341dc0"/>
        <function-ref name="type" scoped="" ref="0x7f4421340020"/>
        <function-ref name="setType" scoped="" ref="0x7f44213401b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4421340340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f44213404d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4421340660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f44213408f0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f44213408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4421340c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f4421340e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f442133f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4421336390" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4421336390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421336710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f44213368a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421336a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f4421336bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421336d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f4421335060" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4421335060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f44213353e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421335570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421335700"/>
        <function-ref name="cancel" scoped="" ref="0x7f4421335890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421335a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4421335c70" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4421335c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4421334020"/>
        <function-ref name="source" scoped="" ref="0x7f44213341b0"/>
        <function-ref name="address" scoped="" ref="0x7f4421334340"/>
        <function-ref name="destination" scoped="" ref="0x7f44213344d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4421334660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f44213347f0"/>
        <function-ref name="type" scoped="" ref="0x7f4421334980"/>
        <function-ref name="setType" scoped="" ref="0x7f4421334b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4421334ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4421334e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4421333020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4421e2a930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4421e2a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421e2acb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421e2ae40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421e27020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4421e271b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421e27340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4421dd7400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4421dd7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421dd77a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421dd7930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421dd7ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4421dd7c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421dd7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4421dd9df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4421dd9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4421dd81c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421dd8350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421dd84e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4421dd8670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4421dd8800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4421dd5720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4421dd5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4421dd5aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4421dd5c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421dd5dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421dd4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4421dd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f4421dd8b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f4421dd8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f4421dd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f4421dd4480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f4421dd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4421dd4800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4421dd4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f4421dd4c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f4421dd4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4421dd3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4421dd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4421dd6060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4421dd6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4421dd63e0"/>
        <function-ref name="source" scoped="" ref="0x7f4421dd6570"/>
        <function-ref name="address" scoped="" ref="0x7f4421dd6700"/>
        <function-ref name="destination" scoped="" ref="0x7f4421dd6890"/>
        <function-ref name="setSource" scoped="" ref="0x7f4421dd6a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4421dd6bb0"/>
        <function-ref name="type" scoped="" ref="0x7f4421dd6d40"/>
        <function-ref name="setType" scoped="" ref="0x7f4421dd5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4421dd51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4421dd5340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4421dd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4421db6020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4421db6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4421db63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4421db6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4421db66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4421db6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4421db69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4421dbc910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4421dbc910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4421dbcc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4421db6c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4421db6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4421db4020"/>
        <function-ref name="source" scoped="" ref="0x7f4421db41b0"/>
        <function-ref name="address" scoped="" ref="0x7f4421db4340"/>
        <function-ref name="destination" scoped="" ref="0x7f4421db44d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4421db4660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4421db47f0"/>
        <function-ref name="type" scoped="" ref="0x7f4421db4980"/>
        <function-ref name="setType" scoped="" ref="0x7f4421db4b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4421db4ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4421db4e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4421db3020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f44236f5dc0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f44236f6a10" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f44236e9020" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f44236e7e80" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f44236e7bc0" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f44236ec1f0" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f44236eda00" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f44236e9dd0" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f44236e97e0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f44236e9b40" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f44236e72a0" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f44236e7020" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f44236e8840" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f44236e85c0" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f44236ea7c0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f44236ed270" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f44236ea020" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f44236ec9a0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f44236ecd00" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f44236a8020" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f44236aa270" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f44236a9840" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f44236acb00" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f44236aa9e0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f44236afd00" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f44236ac420" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f44236a9120" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f44238187e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4423ae0700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f442373ea80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f442373c1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f442373e2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f44238b6020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4424256e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f4423b9ee20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4423b9e610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4423b92770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f4423b90020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4423639110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f442363ae40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4423637600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4423637380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f442363a460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4423639960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f44235e7cd0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
              <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235e7370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f44235e76c0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44235e79f0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f44235e2020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235eac60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f44235e1110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235e2e10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f44235dd490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235dee50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44235dd1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f44235de560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f44235df5e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235df020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44235df350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f44235f2d90" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f44235f2440" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f44235f27c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44235f2af0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f44235ed620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235ed020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44235ed350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f44235ec6d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f44235ef2a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235ef020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f44235ee7f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44235ee210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f44235ee560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f44235c3dd0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f44235c3dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f44235bbc10" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f44235bf420" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f44235bc2b0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f44235bebd0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f44235bc020" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f44235be420" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f44235bac60" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f44235ba3e0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f44235bfc00" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f44235c1970" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f44235c16f0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f44235bb2b0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f44235bcc50" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f44235bb020" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f44235c04d0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f44235c0250" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f44235c0cd0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f44235aa570" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f44235aad20" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f44235a9540" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f44235a84d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f44235a7c20" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f44235a5480" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f44235a9cd0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f44235a4020" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f44235a5d70" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f44235acdb0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f44235a8cb0" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f44235a7470" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f44235cd040" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235ced90" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f44235d7bc0" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235d7940" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f44235d9020" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f44235d9ae0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235d9860" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f44235d4600" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235d4020" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f44235d4370" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f44235d8020" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235d69e0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f44235d6d30" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f44235d0ae0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235d0860" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f44235cfe60" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235cf8b0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f44235cfbd0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f442364a8a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f44235d2890" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235d2610" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f44235cc600" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f44235cc020" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f44235cc370" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f44235cb490" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f442350f0e0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f442350f810" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4423510270" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f442350d760" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4423510970" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f442350d020" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4423511440" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4423511b10" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f44234e4070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f44234e47c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f44234df2e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f44234df060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f44234ddd30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f44234e6870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f44234e2780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f44234dc520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f44234db020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f44234dcd70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f44234e2020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f44234e5870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f44234db910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f44234e0020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f44234dd5f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f44234e5070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f44234dfb80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f44234e99c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f44234e1020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f44234e07c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f44234e17e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f44234e6120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f4423235020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4423235020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4423235260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423235260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f44232320b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423235260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423233e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f44232312a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423231020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f4423235e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423235ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f442322f610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423235260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f442322f020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f442322f380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423235260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f4423224680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423224060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f44232243f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f4423222850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44232225d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f4423225810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f4423228d60" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f4423228ae0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f442323a2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f442323a060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f4423239510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423239290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f4423237680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423237400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f44231fa520" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231fa2a0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f44231fc780" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231fc500" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f44231ffe70" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f44231ffbf0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f44231ff350" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f44231ff0d0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f44231fe8d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f44231fe650" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f44231fb690" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231fb410" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f44231eee60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f44231ee850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f44231eebd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f4423209120" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f442320aae0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f442320ae30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f4423205710" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4423205110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f4423205480" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f4423209c00" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f442424a110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4423209980" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f4423206620" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f44232063a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f442320a2e0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f442320a060" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f4423207760" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f44232074e0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f44231f26c0" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231f2440" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f44231f6790" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231f6170" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f44231f6500" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f44231f3680" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231f3400" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f44231f5b90" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231f5570" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f44231f5900" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f44231f16c0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231f1440" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f44232012a0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4423201020" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f44231e02b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231e7c40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44231e0020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f44231dc890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231dc290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44231dc5c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f44231db9b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f44231df5f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231df370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f44231deac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231de4e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f44231de830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f44231e4120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f44231e5120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f44231e6770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f44231e5910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f44231e4b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f44231bb2b0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f44231c6c50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f44231bb020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f44231ba5b0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f44231b7e30" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f44231b7020" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f44231b7860" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44231b7b90" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f44231b9770" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f44231b9190" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f44231b94e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f44231bbd40" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f44231bbac0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f44231b3070" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f44231bc830" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f44231bf8e0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f44231bd120" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f44231ad2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231ad020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f44231ae710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f4423633950"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f4423630390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231ae410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f44231ac620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f4423630e50"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f442362e7e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44231ac320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f44231c36e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f44231c17f0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f44231c1020" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f44231c8e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f44231c4e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f44231c2020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f44231c2800" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f44231c46c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f44231a7bf0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f44231a8270" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f44231a7420" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f44231a71a0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f44231a89e0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f44231a9020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f44231b0c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f44231a9ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f44231a9850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f442314a640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f442314a060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f442314a3b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f442314b020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f442314d690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f442314d020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f442314d400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f4423153a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f44231537c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f442314b8a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f442314f540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f442314f2c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4423152b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4423152910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f44231498a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f442314e6b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f442314e430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f4423149070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f4423150350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4423227ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f442321e240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f4423150b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f4423153020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f44231521f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f442314fce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f44231452b0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f44231452b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4423145b70" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f44231448f0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f44231452b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4423144340" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f4423144660" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f44231452b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f442311ac10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f442311a990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4423119710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4423119490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f4423139c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4423227ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f442321e240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4423135020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4423135020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4423135260" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4423132e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4423134e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4423132460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4423133e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f44231321d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4423133640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4423130620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4423135dc0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4423135b40" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4423135260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4423134680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f4423122560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f44231214f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f4423122d40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f4423123cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f44231236f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f442364ac80"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4423123a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4423648090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f4423115e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f442311fe80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f442311f020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f442311f890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f442311fbe0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f442311c610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f442311d770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f442311c020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f442311c370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4423126c30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4423126470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f4423127ce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f4423127420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f442305b560" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f442305a020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f442305bc60" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f442305aa00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f442305a780" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f4423059410" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4423059190" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4423059b00" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f44230683e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4423067c60" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f44230679e0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4423068b10" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f442306c650" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4423067270" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f442306b570" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f442306acc0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f442306cde0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f442306bc80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f442306a5c0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f442306a340" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f44230666a0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f4423066420" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f4423060bc0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f44230605f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f4423060930" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f442306db60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f44236a0b00"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f442369e5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f442305f5c0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f442305d4d0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f4423061d30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f442305fd00" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4423062350" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f4423062ae0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f44230615a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f44236a0b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f442369e5a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4423061320" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f44236a0b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f442369e5a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4423046020" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f44230436a0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f4423043420" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f44230422a0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4423042020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4423044c10" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4423044350" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f44230469d0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4423046750" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f44230181f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4422ec9e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4422ec9e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4422ec4070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4422ec4070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4422ec4990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4422ec4070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4422ec2ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4422ec2270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4422ec1270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f4422df1190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4422def350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4422df1b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4422df18b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f4422df48f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4422dcb5a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4422dc7020" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4422dccdc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f4422dc96d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f4422dc9450" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f4422dcad30" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4422dcc620" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f4422dca5d0" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4422dcbda0" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f4422c76810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f4422c750e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f4422c75920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f4422c4d420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422c4ee10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4422c4d190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f4422c48700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422c49d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4422c48110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4422c48460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4422c49020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422c4b970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4422c4bcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f4422c4e020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f442363ba70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422c509d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4422c50d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4422c4cb90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422c4c250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4422c4c5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4422c4c8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4422c2da40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4422c2d0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4422c2d460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4422c2d7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4422c29020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4422c2c2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4422c2c630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4422c2c970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4422c2cce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4422c2f8f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f4422c2f670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4422b4fb70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4422b4c4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4422b4baa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4422b802b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4422b82e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f4422b4a6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422b4a470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f4422b48b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422b488b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f4422b48020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4422b475f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422b47370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4422b3d020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4422b3e750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f4422b36740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422b364c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f4422b39cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f4422b117c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f4422b1d2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f4422b29020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b9d020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4422b9d860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4422b2ccf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b9d020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4422b9d860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f4422b1f3b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f4422b27530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b98020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4422b98860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4422b272b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b98020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4422b98860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f4422b169e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f4422b12020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f4422b28a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b9bec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4422b9a680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f4422b27d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b98020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4422b98860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f4422b23b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f4422b23910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f4422b231f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f4422b162b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f4422b282a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b9bec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4422b9a680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4422b28020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b9bec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4422b9a680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f4422b24020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f4422b15190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f4422b24a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f4422b24780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f4422b21480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f4422b21c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f4422b18420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f4422b1a190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f4422b1e350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f4422b18b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f4422b1dab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f4422b158b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4422b22390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4422ba3d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f4422b9f4d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f4422b14070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f4422b11020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f4422b26700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f4422b26480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f4422b102a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422b10020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f4422b29800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4422b9d020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4422b9d860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f4422b1fb20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4422b1b270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f4422b19ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4422b6bb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4422b6b730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4422b19920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4422b6bb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4422b6b730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f4422b1aca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4422b802b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4422b82e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4422b1aa20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4422b802b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4422b82e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f4422b10ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f4422b14860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f4422b22ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f4422b12780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f4422b1b9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f4422b1eb30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4422aa9020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f4422a829d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f4422a93020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f4422a88620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4422a883a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f4422a9c5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f4422a85c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f4422a8d5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f4422a95070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f4422a92020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4422a96020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f4422a97d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f4422a984b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f4422a90020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f4422a87550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f4422a82270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f4422a89c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f4422a7d350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f4422a799d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f4422a9b420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f4422a91740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f4422a8e1f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f4422a968e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f4422a9e350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f4422a89460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4422a891e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f4422aa2c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f4422a854d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f4422a80190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f4422a7bb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f4422a79270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f4422a84b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f4422a808c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f4422a88db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f4422a7e390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f4422a9bb40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f4422a8c7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f4422a7f7b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f4422a83ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f4422a8ede0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f4422a8eb60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f4422a7a2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f4422a8ba60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f4422a84420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f4422a9ee10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4422b584a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4422b58080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4422a9eb90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4422b584a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4422b58080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f4422a91020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f4422a9acb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4422a9aa30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f4422a90980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422a90700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f4422a7eb60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f4422a97620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f4422a9a350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f4422a8b2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f4422a8b020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f4422a9cce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f4422a7f020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f4422a83350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f4422a87cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f4422a8c020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f4422a8dd30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f4422a92740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f4422a957b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f4422a7aa40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f4422a98e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4422a98bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f4422a7db10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f4422a93750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f4422a7b350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f44229d4020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f44229d4880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f442299fdc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f442299c020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f442299f530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f442299e6d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f442299c950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f442299bb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f44229904c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4422999490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4422990240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4422999490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f4422993420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f4422991020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4422999490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4422993ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4422999490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4422991930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f4422999490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f44227875e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4422787360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4422774b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f44227741c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4422774530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4422774860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4422773880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f44227732c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f44227735f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f442275a530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f442275a530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f442275a770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f442275a770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f44227592e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f442275a770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4422759060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f442275a770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f44226f5580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f44226c39e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f44226c3020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f44226c3750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f44226c57f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f44226c5020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f44226c8d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f44226d93d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44226d9150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f44226da3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44226da150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f44226d6350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44226d60d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f44226d8390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44226d8110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4422561910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4422561910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f442255e270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4424249920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f4422480e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f442424a930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f4422480c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f442424a930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f442239c5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f442239c5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f44223992a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f442239c5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f4422399020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f442239c5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f4422183b00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f44221834f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f4422183870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f4422188c70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f4422184b60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4422184560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f44235f65e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f44235f4c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f44221848d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f442216a960" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f442216a1f0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f442217cc20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f44221710e0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f4422170d00" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422170a80" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f4422171960" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f44221727e0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422172560" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f442216e5b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f4422170270" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f442217a780" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f44221790e0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f442217dd80" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f442217db00" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f4422179c60" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f44221799e0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f44221778f0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f44221755b0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4422175330" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f44221740b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4422175e00" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f442203fc40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f442203f670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f442203f9b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f442203aa70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f442203a7f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f4422039890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f44220392c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4422039600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f442203c610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f44220362c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4422037820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4422037b60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4422036020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f442203a020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f442203e610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f442203dbd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f442203e020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4424249520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f442203e370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
              <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f44220175b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4422017330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f4422017df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f4422016cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4422016700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f4422016a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4424249160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f4422013b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <short>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f442200c4c0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4422b6bb50"/></typename>
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4422b6b730"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4421f7e860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4421f7c0e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f4423b9c020"/>
            <typename><typedef-ref name="error_t" ref="0x7f4423b971b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f4421eb5ce0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f4421e1e1f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4423ba2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
