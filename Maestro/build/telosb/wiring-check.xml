<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1dc5fb7660"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1dc6070b40"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1dc6070b40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1dc5fd0110"/></to>
    </wire>
    <wire loc="19:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1dc5fb6020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b795c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b795c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b0e8d0"/></to>
    </wire>
    <wire loc="21:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f1dc5fb0020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc4b76600"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc4b76600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc4b17110"/></to>
    </wire>
    <wire loc="22:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f1dc5f5ee30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4b75800"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc4b75800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4b17e70"/></to>
    </wire>
    <wire loc="23:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f1dc5f55870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc4b75e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc4b75e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc4b15a40"/></to>
    </wire>
    <wire loc="24:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f1dc5f459b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4b74ab0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4b74ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4b16490"/></to>
    </wire>
    <wire loc="34:BaseStationC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc5f56160"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc4744c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc4744c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc3cc5590"/></to>
    </wire>
    <wire loc="35:BaseStationC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5f56dd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc47438b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc47438b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc3cc3270"/></to>
    </wire>
    <wire loc="36:BaseStationC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f1dc5fb6bc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5bc4020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5bc4020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b95080"/></to>
    </wire>
    <wire loc="37:BaseStationC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc5f43440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc4744020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc4744020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc3cc6920"/></to>
    </wire>
    <wire loc="38:BaseStationC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc5f410c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc473e910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc473e910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc5bc2210"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:BaseStationC.nc">
      <from><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f1dc5f40270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc47dd060"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc47dd060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4d7b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:BaseStationC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f1dc5f30650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc47d7b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc47d7b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4d7b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc5f1e500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e97bc0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc3d18020"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4b0e280"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4c4fdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4cd8b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4cf7750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4d17080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4e803a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4f80620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5070c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5a11c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc403a020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5541020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5ac2510"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1dc5fd0780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1dc65151e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1dc65151e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1dc60ba140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1dc5fcf1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc60690c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc60690c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc605c1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc5fcf8d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f1dc605f130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f1dc605c810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1dc605a020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f1dc6044900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1dc6044900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc602b850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1dc605a700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc605e640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f1dc605ade0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5e6e600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc602b850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc60111c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1dc6022de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1dc6011830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1dc6190c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1dc6010af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc60b9040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1dc60b4490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1dc62ed9a0"/></to>
    </wire>
    <wire loc="88:BaseStationP.nc">
      <from><interface-ref name="RadioSendTask" scoped="" ref="0x7f1dc5f11bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f1dc5f12c80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc5e6e600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5e975c0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1dc5e8e1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1dc5e98d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1dc5e98d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5bf2480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1dc5e944d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1dc5e70020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1dc5e70020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5bdcb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1dc5e937f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1dc5e6f380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1dc5e6f380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5bd61b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5be0610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f1dc5e028a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f1dc5e028a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cacb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5bdbde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f1dc5dff020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f1dc5dff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5ca6060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5bd5480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f1dc5dfd8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f1dc5dfd8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5ca0540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1dc5e53580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d5a060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1dc5e3a710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d24740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f1dc5db1d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d13540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f1dc5db6d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c74060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f1dc5dded50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d0eb90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f1dc5e35710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d18060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f1dc5e1c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5ce2740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1dc5dee8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c80540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f1dc5dd9d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d03540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f1dc5dc5d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c95060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f1dc5da7d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c6f540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1dc5e4cd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d4a060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f1dc5dd6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cfeb90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1dc5e47d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d3fb90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f1dc5e2ee50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d08060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f1dc5e13020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cd2540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f1dc5dfa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c9bb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1dc5de6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c6f540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1dc5e59580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d65740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1dc5e3f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d2fd10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f1dc5e26710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cf8060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f1dc5de1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d13540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f1dc5dbd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c85060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f1dc5da9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c6f540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f1dc5dcc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cb1540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f1dc5e21710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5ceddc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f1dc5e078a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cb6060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1dc5df38a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c8bb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f1dc5dbbd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c80540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f1dc5dd4d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cc1540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1dc5e51d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d55540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1dc5e38e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d1eb90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1dc5df88a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c95060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f1dc5e33e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d13540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f1dc5e18020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cddb90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1dc5deb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c7bb90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f1dc5dcfd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cb6060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1dc5e5c530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d9ed10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1dc5e44580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d39060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f1dc5e2b710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d03540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f1dc5e118a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5ccdb90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f1dc5dcad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cf8060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f1dc5dc2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c90540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f1dc5db3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c6f540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f1dc5e0c8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cc1540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f1dc5dc7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cf2540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1dc5e57d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d60b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1dc5e3de50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d29260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f1dc5e24e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cf2540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f1dc5dd1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cbcb90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f1dc5db8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c7bb90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f1dc5e1e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5ce7260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f1dc5e04020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cb1540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1dc5df0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c85060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1dc5e4e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d50b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1dc5df5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c90540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1dc5e49580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d44540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f1dc5e30710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d0eb90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f1dc5e168a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cd7060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1dc5de98a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c74060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1dc5e69d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d6a260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1dc5e42d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d34540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f1dc5e29e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cfeb90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f1dc5e0e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cc6060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f1dc5dc0d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c8bb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f1dc5dae560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d08060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f1dc5ddb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d08060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f1dc5e09020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5cbcb90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f1dc5dacd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c74060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f1dc5da3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5c9bb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f1dc5de48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1dc5d18060"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b95080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b6b340"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc5bc3050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc5b941d0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc5b941d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc4c11020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1dc5bc2df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1dc5b91020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1dc5b91020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1dc4c10df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc5bc1450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc5b90c20"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc5b90c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc4c0ea80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc5bbd430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4efc550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4efc550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4eeea80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5ba2430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5b84e70"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5b84e70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5b57080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc5bc2210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc5b923f0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc5b923f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4c10210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5bb7350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b8ec80"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b8ec80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b58020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5bc0120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5b91650"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5b91650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4c0f470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc5bae660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc4ef8660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc4ef8660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc4eeaaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b6b340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4c43b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b84020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc4c0c8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1dc5b7a020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1dc4c0dce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b87dc0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b59140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b59140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5b57080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc4c43080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b58020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1dc4efe6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1dc5b710d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1dc5b57b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1dc5b57b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1dc4c2e020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc5b83e00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc5b589d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc5b589d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc4efda70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f1dc4c030f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5b65770"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c0b860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc5b63d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc5b63d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc4cacc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c09690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc5b5ca90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc5b5ca90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc4caaa50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc4c054d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc5128b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4c09ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4ef3d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4c08b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4eef640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc4c07610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc5acbdc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc5acbdc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc5ac1970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1dc4c041f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b51330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b51330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b4c7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc4c03d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4c43b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f1dc4c40d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc4efda70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc4eee020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1dc4c2e020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1dc4c2c410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc4cacc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc4ca1a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc4c43080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc4c3b2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1dc5b64820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4cac5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc4cac5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f1dc4ca1370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1dc4efe6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1dc4ef0c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc5b65770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4caebe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc4caebe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4ca37b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1dc5b5ba30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc4cad8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc4cad8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f1dc4ca24d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1dc5b63020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1dc4ca9170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1dc4ca9170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1dc4c9f020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc4caaa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc4ca0840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1dc4c40d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b53390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b53390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b50e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4ca86b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc4cfc220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc4cfc220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc4cfaa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4cfb020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc4c31350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc4c31350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c2ed70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c2ed70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc4c47ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc4c47ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c41860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c41860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc5b53e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc5b53e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc5b4d990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4ca8020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4c44980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc4c44980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c40690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c40690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4cdfaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc4cdfaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4cdbe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4cdc950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc5b52b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc5b52b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4f857c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc4f857c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4f7e020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc5b4b640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5adc950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc5adc950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5ac2b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5b43b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5ad6bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5ad6bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5abf740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1dc5b3f760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc507e6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1dc5b3f760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc4f885c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1dc4f885c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc4f80ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1dc507e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc506f320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1dc5b382a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1dc507b020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1dc507b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc506fbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1dc5b40060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc507bcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc507bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc506d970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b36330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc5b2e920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1dc5b35420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1dc4d1da20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1dc4d1da20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1dc4d16a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f1dc5b31110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc4d1faa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1dc4d1faa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc55451d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc5b35bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f1dc5b24b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f1dc5b25ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f1dc5b26c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f1dc5ac80c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f1dc5abeb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f1dc5ab2d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc5a0e690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc5a0e690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc57c55f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1dc5aaf060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1dc57be690"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1dc57be690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57af020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1dc5aae380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f1dc57ba020"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1dc57ba020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc579e020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1dc5aad6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f1dc57b76a0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1dc57b76a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5794b00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1dc5aab0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f1dc577a400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1dc577a400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1dc5618680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1dc5a951d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc51b3e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc51b3e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1dc5a942b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f1dc51b07b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1dc51b07b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc5a949c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc51afae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc51afae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc5a96a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc51b1ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc51b1ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc5a96120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc51ab160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc51ab160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc5a9bb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc51a3870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc51a3870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc5aa23d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc51a1880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc51a1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc5aa2c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc51a00a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc51a00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc5a9d5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc51a8e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc51a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc5a99020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc51a6670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc51a6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1dc5aa6520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f1dc5193500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1dc5193500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5a9ea90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5194ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5194ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc5a998e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc51a4e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc51a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1dc5a981c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f1dc51a6e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1dc51a6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5a98a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc51a5e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc51a5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f1dc5a93d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5181a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc5181a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f1dc5a93020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc51549e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc51549e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc5aa3810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc5128b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc5aba020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc5127d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc5127d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc510c310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f1dc5a87820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f1dc5a88940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc5a11c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc5a09d40"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc5a09d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4333340"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc57c55f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc4333b90"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc4333340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc432c3d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1dc4333b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc4325020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc432c3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4310ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1dc431f780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc432cc20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1dc432cc20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc430f5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc43213d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc58438c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc58438c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc5826cf0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc430b710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc43159d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc43159d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc430ada0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc4313120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc4313120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc43080c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc4312440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc4312440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f1dc59bd5a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f1dc59bd5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc59066d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1dc59bba20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1dc59bba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc5905ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f1dc59b6d40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f1dc59b6d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc58f6220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f1dc59b4160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f1dc59b4160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc58f5610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f1dc59b2020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f1dc59b2020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc58ee6d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1dc59b1570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1dc59b1570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc58edac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f1dc59af410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f1dc59af410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc58e7b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1dc59ae890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1dc59ae890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc58e5020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1dc59ac8c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1dc59ac8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc58de220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1dc59abd40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1dc59abd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc58dd610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1dc59a9a50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1dc59a9a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc58d76d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1dc59a7020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1dc59a7020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc58d6ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f1dc59c2a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc590d220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1dc59c3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc5914cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f1dc59b03e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc58ec7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1dc59c9bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc5914020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1dc59a7da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc58d57a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1dc59cd280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc59626d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f1dc59b7da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc58fccb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f1dc59b7020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc58fc020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f1dc59b9a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc58feb30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1dc59c0da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc590b2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f1dc59ad890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc58e5cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f1dc59c0020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc590c610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1dc59d1a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc59703e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1dc59ca730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1dc5916b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f1dc59c4690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc591b7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f1dc59b3020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc58f42f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1dc59cc700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1dc591cac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f1dc59aaae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc58dc2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f1dc59baa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc59047a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1dc596e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc596fbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1dc596e940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1dc58ce3f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1dc596c020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1dc58ceb80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc591a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc59703e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc5919c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc596fbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc5913b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc59703e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc59102f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc596fbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc590a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc59703e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc59097a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc596fbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1dc5966100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1dc5966750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1dc58cc430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1dc5966da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1dc58ccbc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc5903610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc5902c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc58fbb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc58f92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc58f3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc58f27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc58eb610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc58eac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc58e4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc58e22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc58db160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc58da7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc58d4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1dc58d3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1dc58090f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1dc58418e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1dc58418e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc583bb80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc582cc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1dc57bd9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57aa630"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1dc57bccf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57a5b00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1dc57bf3e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57b5a20"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1dc57b9370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5799630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57b4c50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1dc5e53580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57ae2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f1dc5e1c8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57a97a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1dc5e57d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57a4c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1dc5e5c530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc579d2f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f1dc5e118a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57987a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1dc5e1e020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5793c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f1dc5e13020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1dc5776700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1dc576ec20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1dc5779060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1dc5607b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc575c760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f1dc59b9a50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f1dc575ba80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f1dc59b7da0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc575a930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1dc5e1e020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1dc56172f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1dc5746020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1dc5746020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1dc572f3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1dc56067a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1dc57493d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1dc57493d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1dc57377a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1dc573a3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f1dc57233f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1dc5743a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f1dc572cd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1dc5740020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f1dc57293f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1dc574fa30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f1dc5733d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1dc573da30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1dc5726d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1dc57453f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1dc572e710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1dc5739710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f1dc5722710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1dc573f3f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f1dc5728710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1dc5748d50"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1dc5730020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1dc573b020"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f1dc5724100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1dc5744710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f1dc572da30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1dc5742d50"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f1dc572a020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1dc5750710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f1dc5734a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1dc573e710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f1dc5727a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1dc51b0160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc51a2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1dc519a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1dc51a10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc518e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc5190500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc51af490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1dc5196880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc5191500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc519c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1dc519d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc51b2a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55bc660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc51abe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1dc51aa490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc5195c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc51aabe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc5191ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1dc51960a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc51a5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc51970a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1dc519a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc5197880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc518fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc5190ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1dc519d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1dc51980a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc5193ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc51a0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc518ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc51b1480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1dc51a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc51a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc519b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc519b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc51a20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc51a92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1dc51a8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc51ab7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc5194500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1dc518f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc519c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1dc5198880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1dc51b0e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc519e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1dc51a9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1dc519e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1dc51950a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc518d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55ba890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55b9ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55b8a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc55bb510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55b78b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f1dc55a9b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc554a770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1dc554a770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc55451d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1dc55b5060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5528c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc5528c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc40bda00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1dc55b1c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1dc55278f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1dc55278f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1dc40bb020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc55a92e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc51d9020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc51d9020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc40ba120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc55b2a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f1dc55a5bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1dc55451d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc5541b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc40ba120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc54c1850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1dc40bb020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1dc54c2110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc40bda00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc54c6d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40bc760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40b22c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40b22c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc53422c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1dc54c2110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1dc5446a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc40bb630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc54c2790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc54c2790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc5445060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc54bca40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc40ba8c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc40a4760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc54bf8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1dc54bd690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc40b3640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc40b3640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5343020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc54b8b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc40acc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc40acc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1dc53464d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc54bf8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc5446250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc54c1850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc5445c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc54c6d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc5447470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc54433e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc54bca40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1dc54445b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1dc54bd690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc543d480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc54b8b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1dc5443a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc5433020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc5433020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1dc542a700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc543dc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f1dc543b2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1dc542b2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc5425c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc542fd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1dc54252d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1dc53f6bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1dc5de1580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1dc53f23e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f1dc5dded50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1dc53f0bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1dc5ddb580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1dc53ed3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f1dc5dd6580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1dc53ebbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f1dc5dd9d50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f1dc53fbd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1dc5299d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1dc40ab440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc53443f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1dc40aba50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1dc52a0020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1dc52a0020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1dc5299d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc40b02b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc5433020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc40b2a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc5342ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc5342ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc52abe80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc53418a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc40a4760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc53422c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc52aca60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc52aca60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40366c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1dc53464d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1dc533fd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc5343020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc52aeca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc52aeca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4037850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc53443f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc533e710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc52abe80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4035a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc52aa790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc53418a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc532cbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc52abe80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1dc533ed80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc542fd10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1dc532c5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1dc542b2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc52ab270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4036e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc40349d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc52aa790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc40342d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc52a9020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1dc40332b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1dc403a630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1dc4031480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f1dc5290bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1dc542a700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1dc528a700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1dc5de1580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1dc5288e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1dc5ddb580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc5174c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1dc517eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc5177b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc5171670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1dc516ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1dc5171e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc515d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc51602f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc517c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1dc5166670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc51612f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1dc5176c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5175c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc516b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1dc516ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc5170670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc5180760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc517baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1dc517a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc5164a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc517a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc5161ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc517cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1dc5167e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc5175480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc5176480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc517e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc5168e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1dc5169670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc5167670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc515fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc5160ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1dc516d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1dc5169e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc5162ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc516f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc515dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc517e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1dc5177370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc5174480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc516be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc5170e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc516a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc5172670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1dc517d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc5172e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc5178020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1dc5178cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1dc51622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5163ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc517b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc51632f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1dc515f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc516de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1dc5168670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1dc517daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc517c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc516fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1dc5178670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1dc516e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1dc5166e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc515c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc5147c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1dc5152da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc514bb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc5145670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1dc513ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1dc5145e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc51312f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc51332f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc514f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1dc5139670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc51342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1dc5149c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5148c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc513f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1dc5141e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc5144670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc5153760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc514eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1dc514d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc5138a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc514d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc5134ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc514fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1dc513ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc5148480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc5149480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc5152750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc513be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1dc513d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc513a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc5132ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc5133ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1dc5140670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1dc513de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc5136ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc5142670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc5131ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc5152100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1dc514b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc5147480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc513fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc5144e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc513e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc5146670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1dc5151450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc5146e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc514c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1dc514ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1dc51362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5137ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc514e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc51372f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1dc51322f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc5140e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1dc513b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1dc5151aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc514f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc5142e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1dc514c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1dc5141670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1dc5139e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc51307a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f1dc5109880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f1dc50fe020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f1dc50fe020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f1dc50f9140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f1dc50f5bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f1dc50fdc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f1dc50fdc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f1dc50e0150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f1dc50f8530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc508a1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f1dc50e4540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f1dc50e5590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f1dc50e5590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc50949e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50db950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50e2ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50e2ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50b8a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f1dc50e09f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f1dc50e4540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc50a8020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1dc50a2530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1dc50a2530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc509fe50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc509b020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1dc59d1a30"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5092c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1dc5e3f580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1dc5077990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1dc506c900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f1dc5079150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f1dc506b0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f1dc506bae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc5a0e690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1dc505d500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f1dc57bf3e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1dc5056820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1dc57be690"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1dc5055b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f1dc57b9370"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1dc505e880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f1dc5776700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1dc5053020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4fb8c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc4fb8c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc5053d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc4fb78f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc4fb78f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc50506d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1dc4fb62f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc4fb62f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1dc5050de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f1dc4fb5cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1dc4fb5cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc504f530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc4fb3370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc4fb3370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc504fc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc4fb2d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc4fb2d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5051e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc4facc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc4facc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc5052780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc4f947a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc4f947a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc5051550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc4f982f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc4f982f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc504e3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc4fad480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc4fad480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc504d5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4faae50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4faae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc504c020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4fa9670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4fa9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1dc504ee80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f1dc4fb07b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1dc4fb07b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc504b9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc4f96ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc4f96ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc504c890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1dc4f972f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc4f972f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc504b130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1dc4f97ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc4f97ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc5045d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc4f88df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc4f88df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc4f7f550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5066d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc5064bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1dc5063950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4efc550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc5058be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc4ef4480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc4ef4480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc4ee68b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc50496c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc4fabc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1dc4fb5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc4fafc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1dc4fa2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1dc4fa9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4f952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1dc4f9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1dc4fadc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc4fa3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1dc4fa5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc4fa8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1dc4fb1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc4f9ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc4fb1ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4f98ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc4fb2060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1dc4f9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc4fac480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc4fb6940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc4f9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1dc4fa1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc4f9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1dc4fa4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1dc4fa1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc4f9aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc4fa6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4f95ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1dc4faf490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc4fab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc4fa3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc4fa8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc4fa2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc4faa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1dc4fb5670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4fb0160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1dc4fb0e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1dc4f9a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc4f9bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4fb26b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc4f9b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1dc4f962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc4fa4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1dc4f9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc4fb39c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc4fa6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1dc4fa5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1dc4f9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f1dc4f83020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f1dc4f7e7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc4f69150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1dc4f7d020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1dc57be690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1dc4f7c380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f1dc57bd9c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1dc4f7b6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f1dc57bccf0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1dc4f7aa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1dc5779060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1dc4f796e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4d6b250"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc4d6b250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4f78530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4d48120"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4d48120"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4f77ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4d66d00"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4d66d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1dc4f773a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f1dc4d659c0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1dc4d659c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f76330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4f751e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1dc4f73d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4efc550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc4f75b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc5acbdc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4f6e3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4d5d500"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4d5d500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4f6ecb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4d5dce0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4d5dce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4f6fb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4d647b0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4d647b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4f6b6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4d49900"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4d49900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc4f6d590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1dc4d4b900"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1dc4d4b900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc4f6de00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1dc4d4a120"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1dc4d4a120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4f6a020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4d4b120"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4d4b120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc4f6a8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1dc4d6a990"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1dc4d6a990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f1dc4f5e9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc4e86a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc58438c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1dc4ee0820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4e90790"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1dc4ee2b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4e7a610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4e7a610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4d8ea20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4e7f1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc4d9d8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc4d9d8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc3e93bc0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc4e803a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4e4b020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc4e4b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc3f039d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1dc4d96020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1dc4e1e2f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1dc4e18850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc4e4b870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1dc4e4b870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc3efc5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc4d8dd20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc4e6ab70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc4e6ab70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc4e62610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc3f039d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc3ee7360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1dc3ef6d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc3f02260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1dc3f02260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1dc3ee7bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc3ef99b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc4e6ab70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc3ee3dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc3eec020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc3eec020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc3ee1440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc3eeb760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc3eeb760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc3ee0760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc3eeaa80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc3eeaa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1dc4e5fb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1dc58418e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1dc4e159c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1dc3e8b180"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f1dc4d96020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f1dc3e858b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f1dc4d91450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f1dc3e86410"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f1dc605f130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1dc3e84020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1dc4d84ce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4d7b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4d7b610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4e7f1d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc4d5e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1dc4d69670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc4d612f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1dc4d54500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1dc4d5c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc4d679c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1dc4d51ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc4d4c900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1dc4d602f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc4d5f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc4d57ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1dc4d58500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc4d5cce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc4d6a020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc4d65370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc4d4f120"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc4d64160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc4d666b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1dc4d51500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc4d60ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc4d61ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc4d69020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc4d52500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1dc4d54ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc4d52ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc4d49120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1dc4d58ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1dc4d53500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc4d4c120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc4d5ace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1dc4d63ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc4d5fad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc4d56500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc4d5a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc4d56ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc4d5ecd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1dc4d69cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1dc4d63490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1dc4d4e900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc4d4e120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc4d4f900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1dc4d4a900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc4d57500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1dc4d53ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1dc4d67370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc4d66060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc4d59500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1dc4d64e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1dc4d59ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1dc4d50500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc4d48db0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f1dc4d1b920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f1dc4d17940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc4d21990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4d17080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4cf7e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1dc4cfb020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1dc4cf6ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc4cf8690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1dc4cf8690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc55451d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1dc4cf48f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1dc4d1da20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4cf3170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1dc4cdc200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1dc4cd8570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4cd73f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4cdc950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4cd7a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c9fd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1dc4ca86b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c9eb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4ca8020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4c9c2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4c9b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1dc4c9bb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1dc4c4e410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f1dc4c6fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f1dc4c42800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc4c3d580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1dc4c3d580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1dc55451d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc4c291c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b58020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b0e8d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b002f0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc4b721a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc4b14720"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1dc4b0e280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1dc4b03c70"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc4b09dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc4b72b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1dc4b13120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc4b0c480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4b13d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc4b0d940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1dc4b094a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f1dc47efa30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc4b0c480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc49cf830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1dc4b0d940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1dc49cf110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f1dc49ce760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1dc4b094a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc4afd8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc4b09dc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc49cc590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc4b09dc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc49c3cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc4b09dc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1dc49cd0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1dc4af65c0"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f1dc49cd9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f1dc4afa130"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1dc4af08e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1dc49c7b60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1dc4aef060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc499d080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1dc499d080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1dc4802080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1dc49b8d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1dc499d890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1dc499d890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1dc4808440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f1dc4a99e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f1dc4ad1d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f1dc4a9c400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f1dc4a950c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f1dc49cbc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f1dc49ca480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1dc499b020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1dc4807440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1dc4807440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1dc4987020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1dc4808440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1dc4989860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc4806020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc48028e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc4801020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4809020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc4809020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc498c7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc4809c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc3d84a90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc3d84a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc484b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc4984450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc4806020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc3d7ebe0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc498ba30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1dc49851d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc3d8ee00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc3d8ee00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc484d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc49831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc3d7e440"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc3d7e440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1dc484e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc498ba30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc4918dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1dc4987020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1dc4916890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1dc4989860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1dc49176d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc498c7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4918020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc49133e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc4984450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1dc49145b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1dc49851d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc490e5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc49831d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1dc4913a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc48fed30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc48fed30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1dc48f73c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc490d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1dc48697c0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1dc48697c0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1dc58418e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1dc490b120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc48fb860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1dc48f2020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc48fe500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc48fa9c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1dc48f28f0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f1dc5dd1580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1dc48ef020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f1dc5dcfd50"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1dc48ed890"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f1dc5dcc580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1dc48ea020"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f1dc5dc7580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1dc48e8890"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f1dc5dcad50"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc3d83a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc48fed30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc3d832b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc484bd20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc484bd20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4840060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc484aaf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc3d7ebe0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc484b510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc4842bd0"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc4842bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc3d156c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1dc484e510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1dc4848230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc484d280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc4843e30"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1dc4843e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1dc3d16850"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4840060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc3d13a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1dc48472f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc48fb860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc4840950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc484aaf0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4846120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4840060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4839d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4841400"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4841400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc3d15e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc4839020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc48fe500"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc3d129d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc4840950"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc3d122d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc483f0f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1dc3d112b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1dc3d18630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1dc3d0f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc3cda6a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc4839020"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1dc3cdae00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1dc4839780"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc3cd9410"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4839d50"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc3cd8060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4822990"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc3cc6920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc3cb8390"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc3cc5590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc5bc1450"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc3cc3270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5bc0120"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1dc4741020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1dc3cc28f0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1dc3cc28f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5bb7350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc3cb7060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc47ac930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc3cb7c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5bc0120"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1dc47ac930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1dc475bdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1dc4759400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1dc5bc3050"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4758060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5bc0120"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc4757720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc5bc1450"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1dc4756480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1dc4756c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1dc4737020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1dc5bc1450"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4737c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5bc0120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="14:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc4e0f530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="44(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
        <short>&#10; An HPL abstraction of USART1 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART1 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="56(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="96(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.TimerTramaTDMA" loc="44(BaseStationC.TimerTramaTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.TimerLeds" loc="44(BaseStationC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC" loc="47(BaseStationC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC" loc="47(BaseStationC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BaseStationC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseStationC.AMReceiverC" loc="43(BaseStationC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1dc5d9d1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1dc5d9d580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1dc5d9d930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1dc5d9dce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1dc5d9c0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1dc59a2930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1dc59a2cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1dc59a00d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1dc59a0450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1dc59a07d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1dc59a0b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1dc599f020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1dc599f3b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1dc599f780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1dc5964c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1dc59610d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1dc587ecb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1dc587ecb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1dc583ca40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1dc583ca40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1dc5825570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1dc5825570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1dc5825d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1dc5825d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1dc5824160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1dc5824160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1dc5824940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1dc5824940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1dc5824d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1dc5823540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1dc5823540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1dc5803620" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1dc5803620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1dc5803df0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1dc5803df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1dc5801220" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1dc5801220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1dc5801a00" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1dc5801a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1dc5801dd0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1dc53275e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1dc531b9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1dc5300cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc50b6020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc50b6020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1dc50b67b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc50b67b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc4e91d00" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc4e91d00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc4e46cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc4e46cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc4e0f530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc4e0f530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1dc4e0f880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc4e01980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc4e01980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1dc4e01cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1dc47ce360" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1dc47c7140" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1dc47bf020" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1dc47a7c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1dc473d330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1dc606d160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc606d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc606d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1dc6070b40" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1dc6070b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1dc606f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc60690c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc60690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc6069440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f1dc605f130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1dc605f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f1dc60681b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f1dc6068340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f1dc605f7d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1dc605f960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f1dc605faf0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f1dc605fc80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f1dc605fe10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1dc6068020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f1dc605f4b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f1dc605f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1dc605a700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1dc605a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc605aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc605c1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc605c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc605c520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f1dc605a020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1dc605a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc605a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f1dc605ade0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f1dc605ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc6059180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f1dc605c810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1dc605c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f1dc605b980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f1dc605bb10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f1dc605b020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1dc605b1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f1dc605b340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f1dc605b4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f1dc605b660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1dc605b7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f1dc605cb90"/>
        <function-ref name="node_id" scoped="" ref="0x7f1dc605cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc605e640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc605e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc605e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f1dc6044900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1dc6044900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc6044c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1dc6022de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1dc6022de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1dc6027c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1dc6027310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1dc60274a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1dc6027630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1dc6027180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1dc60277c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1dc6027950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1dc6027ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc602b850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc602b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc602bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1dc6011830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1dc6011830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1dc60107f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1dc6011d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1dc6010020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1dc60101b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1dc6011bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1dc6010340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1dc60104d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1dc6010660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1dc6010af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1dc6010af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1dc6010e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc60111c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc60111c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc6011540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1dc6190c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1dc6190c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1dc636b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1dc62ed9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1dc62ed9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1dc62edd20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1dc6408020"/>
        <function-ref name="sleep" scoped="" ref="0x7f1dc64081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1dc622e3d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f1dc622e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1dc622e750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f1dc60298b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1dc60298b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1dc5fdc7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1dc6029dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1dc5fdc020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1dc5fdc1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1dc6029c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1dc5fdc340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1dc5fdc4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1dc5fdc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1dc5fcf8d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1dc5fcf8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5fcfc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1dc5fd0110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1dc5fd0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1dc5fd0490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1dc5fcf1d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1dc5fcf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5fcf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1dc5fd0780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1dc5fd0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5fd0b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1dc5fd0c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1dc5fd0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1dc6508940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc6508940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc6508cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc6508e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1dc65151e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1dc65151e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc6515560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1dc65156f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1dc6515880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1dc60b9040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1dc60b9040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc60b93c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc60b9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1dc60b4490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1dc60b4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1dc60b4810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1dc60b49a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1dc60b4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1dc60ba140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1dc60ba140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc60ba4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1dc60ba650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1dc60ba7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f1dc5fb6bc0" loc="18:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f1dc5fb6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5fb5020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5fb51b0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5fb5340"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5fb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSendTask" ref="0x7f1dc5f11bf0" loc="88:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSendTask" scoped="" ref="0x7f1dc5f11bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5f10020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5f101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1dc5fb7660" loc="16:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1dc5fb7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1dc5fb79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1dc5fb6020" loc="17:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1dc5fb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5fb63a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5fb6530"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5fb66c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5fb6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f1dc5f5ee30" loc="21:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7f1dc5f5ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5faf1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1dc5f56160" loc="28:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc5f56160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5f564e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc5f56670"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5f56800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5f56990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc5f56b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1dc5f43440" loc="30:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc5f43440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5f437c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5f43950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5f43ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5f43c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5f43e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTramaTDMA" ref="0x7f1dc5f40270" loc="33:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f1dc5f40270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc5f316e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5f3fcb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc5f33a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc5f335f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc5f30020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc5f31b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc5f33170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc5f40e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc5f310d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc5f3f360"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5f3f830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f1dc5f12c80" loc="87:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7f1dc5f12c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5f110a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5f11230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f1dc5f410c0" loc="31:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc5f410c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5f41440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc5f1e500" loc="35:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc5f1e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc5f1e880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc5f1ea10"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc5f1eba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc5f1ed30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc5f2a020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5f2a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc5f2a340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc5f2a980"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5f2a4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc5f2a660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc5f2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f1dc5f55870" loc="22:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7f1dc5f55870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5f55bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc5f55d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5f64020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5f641b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc5f64340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f1dc5fb0020" loc="20:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7f1dc5fb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5fb03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5fb0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5fb06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5fb0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5fb09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f1dc5f459b0" loc="23:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7f1dc5f459b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc5f45d30"/>
        <function-ref name="source" scoped="" ref="0x7f1dc5f5f020"/>
        <function-ref name="address" scoped="" ref="0x7f1dc5f5f1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc5f5f340"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc5f5f4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc5f5f660"/>
        <function-ref name="type" scoped="" ref="0x7f1dc5f5f7f0"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc5f5f980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc5f5fb10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc5f5fca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc5f5fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1dc5f56dd0" loc="29:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5f56dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc5f44180"/>
        <function-ref name="source" scoped="" ref="0x7f1dc5f44310"/>
        <function-ref name="address" scoped="" ref="0x7f1dc5f444a0"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc5f44630"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc5f447c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc5f44950"/>
        <function-ref name="type" scoped="" ref="0x7f1dc5f44ae0"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc5f44c70"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc5f44e00"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc5f43020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc5f431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f1dc5f30650" loc="34:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f1dc5f30650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc5f2cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5f2e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc5f2c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc5f2eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc5f2b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc5f2b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc5f2e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc5f2f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc5f2c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc5f2f860"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5f2fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1dc5e9b240" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc5e9b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc5e9b5c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc5e9b750"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc5e9b8e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc5e9ba70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc5e9bc00"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e9bd90"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc5e9a020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc5e9a660"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e9a1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc5e9a340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc5e9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1dc5e8e1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1dc5e8e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e8e550"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e8e6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e8e870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e8ea00"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e8eb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e8ed20"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e94020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc5e975c0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5e975c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5e97940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1dc5e944d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1dc5e944d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e94850"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e949e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e94b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e94d00"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e93020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e931b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e93340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1dc5e97bc0" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc5e97bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc5e96020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc5e961b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc5e96340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc5e964d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc5e96660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e967f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc5e96980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc5e95020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e96b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc5e96ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc5e96e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1dc5e937f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1dc5e937f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e93b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e93d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e8d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e8d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e8d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e8d660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e8d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1dc5e98d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1dc5e98d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e71180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e71310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e714a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e71630"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e717c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e71950"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e71ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e71c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1dc5e70020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1dc5e70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e70530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e70850"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e709e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e70b70"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e70d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e6f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1dc5e6e600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5e6e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5e6e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1dc5e6f380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1dc5e6f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e6f700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e6f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e6fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e6fbb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e6fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e6e020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e6e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e6e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1dc5e53580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1dc5e53580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e53900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e53a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e53c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e51980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e52020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e521b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e52340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e52660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e527f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e52980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e52b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e52ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e51020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e511b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e51340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e514d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e53db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e51660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1dc5e3a710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1dc5e3a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e3aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e3ac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e3adb0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e38a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e39340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e394d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e39660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e397f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e39980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e39b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e39ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e39e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e38120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e382b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e38440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e385d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e39020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e38760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f1dc5db1d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1dc5db1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5db00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5db0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5db0400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5db0720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5db08b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5db0a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5db0bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5db0d60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5daf020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5daf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5daf340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5daf4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5daf760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5daf8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dafa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dafc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5db0590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dafda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1dc5db6d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1dc5db6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5db50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5db5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5db5400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5db31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5db5720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5db58b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5db5a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5db5bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5db5d60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5db4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5db41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5db4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5db44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5db4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5db48f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5db4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5db4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5db5590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5db4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5db3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f1dc5dded50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f1dc5dded50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ddd100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ddd290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ddd420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5ddb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ddd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ddd8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ddda60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dddbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dddd80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ddc020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5ddc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ddc340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ddc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5ddc760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5ddc8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5ddca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5ddcc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ddd5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5ddcda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5ddb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1dc5e35710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1dc5e35710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e35a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e35c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e35db0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e33a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e34340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e344d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e34660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e347f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e34980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e34b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e34ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e34e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e33120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e332b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e33440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e335d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e34020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e33760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1dc5e1c8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1dc5e1c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e1cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e1cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e1a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e19c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e1a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e1a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e1a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e1a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e1a980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e1ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e1aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e1ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e19020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e192b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e19440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e195d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e19760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e1a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e198f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e19a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1dc5e028a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1dc5e028a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e02c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e02db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e01020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e00c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e01340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e014d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e01660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e017f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e01980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e01b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e01ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e01e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e00020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e002b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e00440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e005d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e00760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e011b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e008f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e00a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1dc5dee8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1dc5dee8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5deec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5deedb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ded020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5decc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ded340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ded4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ded660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5ded7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5ded980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dedb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dedca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dede30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dec020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dec2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dec440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dec5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dec760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ded1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dec8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5deca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f1dc5dd9d50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f1dc5dd9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dd8100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dd8290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dd8420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dd61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dd8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dd88d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dd8a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dd8bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dd8d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dd7020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dd71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dd7340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dd74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dd7760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dd78f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dd7a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dd7c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dd85b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dd7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1dc5dc5d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1dc5dc5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dc40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dc4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dc4400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dc21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dc4720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dc48b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dc4a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dc4bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dc4d60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dc3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dc31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dc3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dc34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dc3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dc38f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dc3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dc3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dc4590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dc3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f1dc5da7d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f1dc5da7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5da5100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5da5290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5da5420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5da31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5da5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5da58d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5da5a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5da5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5da5d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5da4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5da41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5da4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5da44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5da4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5da48f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5da4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5da4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5da55b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5da4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5da3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1dc5e4cd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1dc5e4cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e4b100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e4b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e4b420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e491b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e4b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e4b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e4ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e4bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e4bd80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e4a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e4a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e4a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e4a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e4a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e4a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e4aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e4ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e4b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e4ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f1dc5dd6580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f1dc5dd6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dd6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dd6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dd6c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dd4980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dd5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dd51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dd5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dd54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dd5660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dd57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dd5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dd5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dd5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dd4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dd41b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dd4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dd44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dd6db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dd4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dd47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1dc5e47d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1dc5e47d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e46100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e46290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e46420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e46740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e468d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e46a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e46bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e46d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e45020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e45340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e454d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e45760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e458f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e45a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e45c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e465b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e45da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1dc5e2ee50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1dc5e2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e2d210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e2d3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e2d530"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e2b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e2d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e2d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e2db70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e2dd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e2c020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e2c1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e2c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e2c4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e2c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e2c8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e2ca80"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e2cc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e2cda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e2d6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e2b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1dc5e13020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1dc5e13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e13530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e136c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e114d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e139e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e13b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e13d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e121b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e12340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e12660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e12a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e12c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e12da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e11020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e13850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e111b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1dc5dfa020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1dc5dfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dfa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dfa530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dfa6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5df84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dfa9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dfab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dfad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5df9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5df91b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5df9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5df94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5df9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5df97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5df9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5df9c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5df9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5df8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dfa850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5df81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5df8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1dc5de6020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1dc5de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5de63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5de6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5de66c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5de44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5de69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5de6b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5de6d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5de5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5de51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5de5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5de54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5de5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5de57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5de5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5de5c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5de5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5de4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5de6850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5de41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5de4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1dc5e59580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1dc5e59580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e59900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e59a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e59c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e57980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e58020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e58340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e58660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e587f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e58980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e58b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e58ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e57020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e571b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e57340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e574d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e59db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e57660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1dc5e3f580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1dc5e3f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e3fa00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e3fb90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e3fd20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e3da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e3e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e3e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e3e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e3e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e3e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e3e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e3eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e3eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e3ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e3d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e3d2b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e3d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e3d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e3e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e3d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e3d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1dc5e26710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1dc5e26710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e26a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e26c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e26db0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e24a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e25340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e254d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e25660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e257f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e25980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e25b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e25ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e25e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e24120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e242b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e24440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e245d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e25020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e24760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f1dc5de1580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f1dc5de1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5de1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5de1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5de1c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dde980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ddf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ddf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ddf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5ddf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5ddf660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ddf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5ddf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ddfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ddfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dde020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dde1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dde340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dde4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5de1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dde660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dde7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1dc5dbd570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1dc5dbd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dbd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dbda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dbdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dbb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dbc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dbc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dbc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dbc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dbc660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dbc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dbc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dbcb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dbcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dbb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dbb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dbb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dbb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dbdda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dbb660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dbb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f1dc5da9570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f1dc5da9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5da98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5da9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5da9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5da7980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5da8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5da81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5da8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5da84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5da8660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5da87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5da8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5da8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5da8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5da7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5da71b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5da7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5da74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5da9da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5da7660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5da77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f1dc5dcc580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f1dc5dcc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dcc900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dcca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dccc20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dca980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dcb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dcb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dcb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dcb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dcb660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dcb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dcb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dcbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dcbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dca020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dca1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dca340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dca4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dccdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dca660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1dc5e21710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1dc5e21710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e21c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e21e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e20020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e1fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e20340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e204d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e20660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e207f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e20980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e20b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e20ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e20e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e1f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e1f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e1f440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e1f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e1f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e201b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e1f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e1fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1dc5e078a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1dc5e078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e07c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e07db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e06020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e05c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e06340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e064d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e06660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e067f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e06980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e06b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e06ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e06e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e05020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e052b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e05440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e055d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e05760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e061b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e058f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e05a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1dc5df38a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1dc5df38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5df3c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5df3db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5df2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5df1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5df2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5df24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5df2660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5df27f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5df2980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5df2b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5df2ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5df2e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5df1020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5df12b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5df1440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5df15d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5df1760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5df21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5df18f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5df1a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1dc5dbbd40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1dc5dbbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dba0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dba270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dba400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5db81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dba720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dba8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dbaa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dbabd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dbad60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5db9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5db91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5db9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5db94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5db9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5db98f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5db9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5db9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dba590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5db9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5db8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f1dc5dd4d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f1dc5dd4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dd30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dd3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dd3400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dd11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dd3720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dd38b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dd3a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dd3bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dd3d60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dd2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dd21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dd2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dd24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dd2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dd28f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dd2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dd2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dd3590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dd2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1dc5e51d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1dc5e51d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e50100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e50290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e50420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e4e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e50740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e508d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e50a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e50bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e50d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e4f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e4f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e4f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e4f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e4f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e4f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e4fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e4fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e505b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e4fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1dc5e38e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1dc5e38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e37210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e373a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e37530"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e35340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e37850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e37b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e37d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e36020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e361b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e36340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e364d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e36660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e368f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e36a80"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e36c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e36da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e376c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e35020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1dc5df88a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1dc5df88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5df8c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5df8db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5df7020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5df6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5df7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5df74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5df7660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5df77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5df7980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5df7b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5df7ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5df7e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5df6020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5df62b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5df6440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5df65d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5df6760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5df71b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5df68f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5df6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1dc5e33e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1dc5e33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e32210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e323a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e32530"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e30340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e32850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e329e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e32b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e32d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e31020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e311b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e31340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e314d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e31660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e318f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e31a80"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e31c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e31da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e326c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e30020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1dc5e18020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1dc5e18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e18530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e186c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e164d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e189e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e18b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e18d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e171b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e17340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e174d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e17660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e177f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e17a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e17c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e17da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e16020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e18850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e161b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1dc5dff020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1dc5dff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dff530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dff6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dfd4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dff9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dffb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dffd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dfe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dfe1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dfe340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dfe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dfe660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dfe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dfea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dfec10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dfeda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dfd020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dff850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dfd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dfd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1dc5deb020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1dc5deb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5deb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5deb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5deb6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5de94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5deb9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5debb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5debd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dea1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dea340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dea660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5deaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5deac10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5deada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5de9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5deb850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5de91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5de9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f1dc5dcfd50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f1dc5dcfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dce100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dce290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dce420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dcc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dce740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dce8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dcea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dcebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dced80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dcd020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dcd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dcd340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dcd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dcd760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dcd8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dcda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dcdc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dce5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dcdda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1dc5e5c530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1dc5e5c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e5c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e5ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e5cbd0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e69980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e6a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e6a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e6a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e6a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e6a660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e6a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e6a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e6ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e6aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e69020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e691b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e69340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e694d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e5cd60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e69660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1dc5e44580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1dc5e44580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e44900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e44a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e44c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e42980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e43020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e43340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e43660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e437f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e43980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e43b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e43ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e42020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e421b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e42340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e424d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e44db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e42660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1dc5e2b710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1dc5e2b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e2ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e2bc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e2bdb0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e29a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e2a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e2a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e2a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e2a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e2a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e2a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e2ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e2aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e2ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e29120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e292b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e29440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e295d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e2a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e29760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1dc5e118a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1dc5e118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e11c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e11db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e10020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e0fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e10340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e104d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e10660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e107f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e10980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e10b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e10ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e10e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e0f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e0f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e0f440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e0f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e0f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e101b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e0f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e0fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f1dc5dcad50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f1dc5dcad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dc9100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dc9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dc9420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dc71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dc9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dc98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dc9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dc9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dc9d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dc8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dc81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dc8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dc84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dc8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dc88f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dc8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dc8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dc95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dc8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1dc5dc2570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1dc5dc2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dc28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dc2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dc2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dc0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dc1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dc11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dc1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dc14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dc1660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dc17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dc1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dc1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dc1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dc0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dc01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dc0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dc04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dc2da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dc0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dc07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1dc5db3570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1dc5db3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5db38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5db3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5db3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5db1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5db2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5db21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5db2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5db24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5db2660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5db27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5db2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5db2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5db2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5db1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5db11b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5db1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5db14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5db3da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5db1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5db17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1dc5e0c8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1dc5e0c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e0cc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e0cdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e0b020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e0ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e0b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e0b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e0b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e0b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e0b980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e0bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e0bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e0be30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e0a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e0a2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e0a440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e0a5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e0a760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e0b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e0a8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e0aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f1dc5dc7580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f1dc5dc7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dc7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dc7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dc7c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dc5980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dc6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dc61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dc6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dc64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dc6660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dc67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dc6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dc6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dc6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dc5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dc51b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dc5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dc54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dc7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dc5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dc57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1dc5e57d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1dc5e57d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e55100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e55290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e55420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e531b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e55740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e558d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e55a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e55bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e55d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e54020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e54340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e544d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e54760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e548f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e54a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e54c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e555b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e54da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1dc5e3de50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1dc5e3de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e3c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e3c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e3c530"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e3a340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e3c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e3c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e3cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e3cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e3b020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e3b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e3b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e3b4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e3b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e3b8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e3ba80"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e3bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e3bda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e3c6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e3a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1dc5e24e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1dc5e24e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e23210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e233a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e23530"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e21340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e23850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e23b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e23d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e22020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e221b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e22340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e224d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e22660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e228f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e22a80"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e22c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e22da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e236c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e21020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f1dc5dd1580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f1dc5dd1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dd1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dd1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dd1c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dcf980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dd0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dd01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dd0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dd04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dd0660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dd07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dd0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dd0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dd0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dcf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dcf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dcf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dcf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dd1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dcf660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dcf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1dc5db8570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1dc5db8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5db88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5db8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5db8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5db6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5db7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5db71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5db7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5db74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5db7660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5db77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5db7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5db7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5db7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5db6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5db61b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5db6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5db64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5db8da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5db6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5db67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1dc5e1e020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1dc5e1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e1e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e1e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e1e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e1c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e1e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e1eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e1ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e1d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e1d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e1d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e1d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e1d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e1da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e1dc10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e1dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e1c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e1e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e1c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e1c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1dc5e04020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1dc5e04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e043a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e04530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e046c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e024d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e049e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e04b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e04d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e03020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e031b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e03340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e034d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e03660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e037f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e03a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e03c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e03da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e02020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e04850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e021b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e02340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1dc5df0020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1dc5df0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5df03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5df0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5df06c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dee4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5df09e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5df0b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5df0d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5def020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5def1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5def340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5def4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5def660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5def7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5defa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5defc10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5defda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dee020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5df0850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1dc5e4e580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1dc5e4e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e4e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e4ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e4ec20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e4c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e4d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e4d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e4d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e4d660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e4d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e4d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e4db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e4dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e4c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e4c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e4c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e4c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e4edb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e4c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1dc5df5020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1dc5df5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5df53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5df5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5df56c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5df34d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5df59e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5df5b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5df5d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5df4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5df41b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5df4340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5df44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5df4660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5df47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5df4a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5df4c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5df4da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5df3020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5df5850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5df31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5df3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1dc5e49580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1dc5e49580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e49900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e49a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e49c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e47980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e48020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e481b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e48340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e48660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e487f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e48980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e48b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e48ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e47020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e471b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e47340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e474d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e49db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e47660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1dc5e30710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1dc5e30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e30a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e30c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e30db0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e2ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e2f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e2f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e2f4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e2f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e2f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e2f980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e2fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e2fca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e2fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e2e120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e2e2b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e2e440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e2e5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e2f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e2e760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e2e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1dc5e168a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1dc5e168a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e16c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e16db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e15020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e14c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e15340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e154d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e15660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e157f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e15980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e15b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e15ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e15e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e14020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e142b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e14440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e145d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e14760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e151b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e148f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e14a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1dc5dfd8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1dc5dfd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dfdc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dfddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dfc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dfbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dfc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dfc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dfc660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dfc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dfc980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dfcb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dfcca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dfce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dfb020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dfb2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dfb440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dfb5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dfb760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dfc1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dfb8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dfba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1dc5de98a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1dc5de98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5de9c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5de9db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5de8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5de7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5de8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5de84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5de8660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5de87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5de8980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5de8b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5de8ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5de8e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5de7020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5de72b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5de7440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5de75d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5de7760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5de81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5de78f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5de7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1dc5e69d50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1dc5e69d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e5b100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e5b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e5b420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e591b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e5b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e5b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e5ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e5bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e5bd80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e5a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e5a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e5a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e5a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e5a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e5a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e5aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e5ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e5b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e5ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1dc5e42d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1dc5e42d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e41100"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e41290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e41420"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e3f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e41740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e418d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e41a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e41bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e41d80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e40020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e40340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e404d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e40760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e408f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e40a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e40c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e415b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e40da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1dc5e29e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1dc5e29e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e28210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e283a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e28530"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e26340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e28850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e289e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e28b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e28d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e27020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e271b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e27340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e274d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e27660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e278f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e27a80"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e27c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e27da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e286c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e26020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1dc5e0e020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1dc5e0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e0e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e0e6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e0c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e0e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e0eb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e0ed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e0d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e0d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e0d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e0d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e0d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e0da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e0dc10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e0dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e0c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e0e850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e0c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1dc5dc0d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1dc5dc0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dbf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dbf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dbf400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dbd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dbf720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dbf8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dbfa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dbfbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dbfd60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dbe020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dbe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dbe340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dbe4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dbe760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dbe8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dbea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dbec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dbf590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dbeda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f1dc5dae560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1dc5dae560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dae8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5daea70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5daec00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dac980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dad340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dad660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dad7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5dadb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5dadca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dac020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dac340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dac4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5daed90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dac660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f1dc5ddb580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f1dc5ddb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ddb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ddba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ddbc20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5dd9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dda020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dda1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5dda340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dda4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dda660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5dda7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5dda980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ddab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ddaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5dd9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5dd91b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5dd9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5dd94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ddbdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5dd9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5dd97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1dc5e09020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1dc5e09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5e093a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5e09530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5e096c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5e074d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5e099e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5e09b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5e09d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5e08020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5e081b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5e08340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5e084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5e08660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5e087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5e08a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5e08c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5e08da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5e07020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5e09850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5e071b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5e07340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f1dc5dacd40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f1dc5dacd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5dab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5dab270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5dab400"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5da91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5dab720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5dab8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5daba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5dabbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5dabd60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5daa020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5daa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5daa340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5daa4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5daa760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5daa8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5daaa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5daac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5dab590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5daada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5da9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f1dc5da3580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f1dc5da3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5da3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5da3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5da3c20"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5da1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5da2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5da21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5da2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5da24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5da2660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5da27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5da2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5da2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5da2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5da1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5da11b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5da1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5da14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5da3db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5da1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5da17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f1dc5de48f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f1dc5de48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5de30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5de3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5de33c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5de11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5de36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5de3870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5de3a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5de3b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5de3d20"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5de2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5de21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5de2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5de24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5de2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5de28f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5de2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5de2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5de3550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5de2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5de1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d9ed10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d9ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d6f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d6f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d6f400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d6d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d6f720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d6f8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d6fa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d6fbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d6fd60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d6e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d6e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d6e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d6e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d6e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d6e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d6ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d6ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d6eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d6f590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d6a260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d6a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d6a5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d6a770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d6a900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d68660"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d6ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d6adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d69020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d69340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d694d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d69660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d697f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d69980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d69c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d69da0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d68020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d681b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d68340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d6aa90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d65740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d65740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d65ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d65c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d65de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d63a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d64340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d644d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d64660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d647f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d64980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d64b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d64ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d64e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d63120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d632b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d63440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d635d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d63760"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d64020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d60b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d60b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d5f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d5f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d5f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d5d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d5f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d5f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d5f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d5fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d5fca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d5fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d5e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d5e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d5e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d5e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d5e760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d5e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d5ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d5ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d5f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d5eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d5a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d5a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d5a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d5a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d584d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d5aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d5abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d5ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d591b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d59340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d59660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d59a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d59c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d59da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d58020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d5a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d55540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d55540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d558c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d55a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d55be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d53980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d54020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d54340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d54660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d54980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d54b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d54ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d53020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d531b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d53340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d53660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d55d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d50b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d50b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d4f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d4f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d4f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d4f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d4f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d4f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d4fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d4fca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d4fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d4e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d4e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d4e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d4e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d4e760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d4e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d4ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d4ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d4f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d4eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d4a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d4a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d4a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d4a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d4a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d474d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d4aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d4abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d4ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d48020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d481b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d48340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d484d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d48660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d487f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d48a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d48c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d48da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d47020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d471b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d4a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d44540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d44540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d448c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d44a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d44be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d42980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d43020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d43340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d43660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d437f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d43980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d43b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d43ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d42020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d421b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d42340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d424d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d42660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d44d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d3fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d3fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d3e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d3e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d3e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d3c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d3e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d3e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d3e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d3eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d3eca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d3ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d3d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d3d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d3d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d3d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d3d760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d3d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d3da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d3dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d3e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d3dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d39060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d393e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d39570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d39700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d374d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d39a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d39bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d39d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d38020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d381b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d38340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d384d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d38660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d387f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d38a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d38c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d38da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d37020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d371b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d39890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d34540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d34540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d348c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d34a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d34be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d32980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d33020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d33340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d33660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d337f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d33980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d33b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d33ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d32020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d321b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d32340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d324d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d32660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d34d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d2fd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d2fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d2e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d2e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d2e400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d2c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d2e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d2e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d2ea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d2ebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d2ed60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d2d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d2d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d2d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d2d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d2d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d2d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d2da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d2dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d2dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d2e590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d29260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d29260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d295e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d29770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d29900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d27660"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d29c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d29db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d28020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d28340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d284d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d28660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d287f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d28980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d28c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d28da0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d27020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d271b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d27340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d29a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d24740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d24740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d24ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d24c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d24de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d22a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d23340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d234d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d23660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d237f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d23980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d23b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d23ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d23e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d22120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d222b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d22440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d225d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d22760"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d23020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d1eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d1eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d1d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d1d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d1d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d1b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d1d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d1d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d1d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d1db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d1dca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d1de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d1c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d1c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d1c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d1c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d1c760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d1c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d1ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d1cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d1d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d1cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d18060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d18060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d183e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d18570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d18700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d164d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d18a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d18bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d18d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d171b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d17340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d174d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d17660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d177f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d17a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d17c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d17da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d16020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d161b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d18890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d13540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d13540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d138c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d13a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d13be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d11980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d12020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d121b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d12340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d12660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d127f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d12980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d12b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d12ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d11020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d111b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d11340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d114d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d11660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d13d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d0eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d0eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d0d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d0d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d0d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d0b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d0d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d0d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d0d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d0db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d0dca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d0de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d0c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d0c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d0c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d0c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d0c760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d0c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d0ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d0cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d0d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d08060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d08060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d083e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d08570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d08700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d064d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d08a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d08bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d08d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d071b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d07340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d07660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d07a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d07c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d07da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d06020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d08890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5d03540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5d03540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5d038c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5d03a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5d03be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5d01980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5d02020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5d021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5d02340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5d024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5d02660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5d027f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5d02980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5d02b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5d02ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5d01020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5d011b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5d01340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5d014d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5d01660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5d03d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5d017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cfeb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cfeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cfd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cfd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cfd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cfb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cfd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cfd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cfd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cfdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cfdca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cfde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cfc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cfc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cfc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cfc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cfc760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cfc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cfca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cfcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cfd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cfcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cf8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cf8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cf83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cf8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cf8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cf54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cf8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cf8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cf8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cf6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cf61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cf6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cf64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cf6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cf67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cf6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cf6c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cf6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cf5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cf51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cf8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cf5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cf2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cf2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cf28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cf2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cf2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cf0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cf1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cf11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cf1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cf14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cf1660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cf17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cf1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cf1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cf1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cf0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cf01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cf0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cf04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cf0660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cf2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cf07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5ceddc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5ceddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cec180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cec310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cec4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cea1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cec7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cec950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cecae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cecc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cece00"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ceb020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5ceb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ceb340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ceb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5ceb760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5ceb8f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5ceba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cebc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cebda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cec630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5ce7260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5ce7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ce75e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ce7770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ce7900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5ce5660"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ce7c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ce7db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ce6020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5ce61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5ce6340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ce64d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5ce6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ce67f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ce6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5ce6c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5ce6da0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5ce5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5ce51b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ce5340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5ce7a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5ce54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5ce2740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5ce2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ce2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ce2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ce2de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5ce0a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ce11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ce1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ce14d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5ce1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5ce17f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ce1980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5ce1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ce1ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ce1e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5ce0120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5ce02b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5ce0440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5ce05d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ce0760"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5ce1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5ce08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cddb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cdc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cdc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cdc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cda020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cdc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cdc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cdc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cdcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cdcca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cdce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cdb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cdb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cdb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cdb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cdb760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cdb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cdba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cdbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cdc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cdbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cd7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cd7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cd73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cd7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cd7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cd54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cd7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cd7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cd7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cd6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cd61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cd6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cd64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cd6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cd67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cd6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cd6c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cd6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cd5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cd51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cd7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cd5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cd2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cd2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cd28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cd2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cd2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cd0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cd11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cd1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cd14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cd1660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cd17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cd1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cd1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cd1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cd0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cd01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cd0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cd04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cd0660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cd2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cd07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5ccdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5ccdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ccb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ccb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ccb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cc9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ccb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ccb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ccb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5ccbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5ccbca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ccbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cca1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cca340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cca5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cca760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cca8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5ccaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ccac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5ccb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5ccada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cc6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cc6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cc63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cc6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cc6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cc44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cc6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cc6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cc6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cc5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cc51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cc5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cc54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cc5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cc57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cc5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cc5c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cc5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cc4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cc41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cc6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cc4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cc1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cc1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cc18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cc1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cc1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cbf980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cc0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cc01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cc0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cc04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cc0660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cc07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cc0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cc0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cc0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cbf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cbf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cbf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cbf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cbf660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cc1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cbf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cbcb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cbcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cbb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cbb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cbb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cb9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cbb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cbb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cbb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cbbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cbbca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cbbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cba1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cba340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cba5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cba760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cba8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cbaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cbac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cbb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cbada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cb6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cb63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cb6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cb6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5cb44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cb6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cb6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cb6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cb5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cb51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cb5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cb54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cb5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cb57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5cb5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5cb5c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5cb5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5cb4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5cb41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cb6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5cb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cb1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cb1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cb18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cb1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cb1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5caf980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cb0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cb01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cb0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cb04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cb0660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cb07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5cb0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5cb0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5cb0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5caf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5caf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5caf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5caf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5caf660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cb1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5caf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5cacb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5cacb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5cab020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5cab1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5cab340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5ca9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5cab660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5cab7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5cab980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5cabb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5cabca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5cabe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5caa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5caa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5caa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5caa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5caa760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5caa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5caaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5caac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5cab4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5caada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5ca6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5ca6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ca63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ca6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ca6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5ca44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5ca6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5ca6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5ca6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5ca5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5ca51b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5ca5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5ca54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5ca5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5ca57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5ca5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5ca5c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5ca5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5ca4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5ca41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5ca6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5ca4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5ca0540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5ca0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5ca08c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5ca0a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5ca0be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c9e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c9f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c9f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c9f660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c9f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c9f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c9fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c9fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c9e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c9e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c9e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c9e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c9e660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5ca0d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c9e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c9bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c9bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c9a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c9a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c9a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c98020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c9a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c9a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c9a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c9ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c9aca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c9ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c991b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c99340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c995d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c99760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c998f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c99a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c99c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c9a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c99da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c95060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c95060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c953e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c95570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c95700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c934d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c95a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c95bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c95d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c94020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c941b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c94340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c944d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c94660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c94a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c94c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c94da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c93020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c931b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c95890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c93340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c90540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c90540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c908c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c90a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c90be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c8e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c8f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c8f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c8f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c8f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c8f660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c8f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c8f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c8fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c8fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c8e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c8e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c8e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c8e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c8e660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c90d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c8e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c8bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c8bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c8a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c8a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c8a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c88020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c8a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c8a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c8a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c8ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c8aca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c8ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c89020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c891b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c89340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c895d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c89760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c898f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c89a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c89c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c8a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c89da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c85060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c85060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c853e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c85570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c85700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c834d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c85a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c85bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c85d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c84020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c841b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c84340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c84660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c84a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c84c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c84da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c83020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c831b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c85890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c80540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c80540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c808c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c80a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c80be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c7e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c7f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c7f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c7f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c7f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c7f660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c7f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c7f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c7fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c7fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c7e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c7e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c7e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c7e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c7e660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c80d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c7bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c7bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c79020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c791b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c79340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c79660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c797f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c79980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c79b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c79ca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c79e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c78020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c781b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c78340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c785d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c78760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c788f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c78a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c78c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c794d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c78da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c74060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c74060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c743e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c74570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c74700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c724d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c74a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c74bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c74d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c731b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c73340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c734d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c73660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c73a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c73c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c73da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c72020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c721b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c74890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1dc5c6f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1dc5c6f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5c6f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5c6fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5c6fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5c6d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5c6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5c6e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5c6e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5c6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5c6e660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5c6e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5c6e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5c6eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5c6eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5c6d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5c6d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5c6d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5c6d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5c6d660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5c6fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5c6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc5be0610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5be0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5be0990"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5be0b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5be0cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5bde980"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5bdf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5bdf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5bdf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5bdf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5bdf660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5bdf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5bdf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5bdfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5bdfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5bde020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5bde1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5bde340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5bde4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5bde660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5be0e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5bde7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc5bf2480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5bf2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5bf2800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5bf2990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5bf2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5bf2cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5bf2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5be0020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5be01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5be0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc5bdbde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5bdbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5bda180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5bda310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5bda4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5bd81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5bda7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5bda950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5bdaae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5bdac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5bdae00"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5bd9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5bd91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5bd9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5bd94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5bd9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5bd98f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5bd9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5bd9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5bd9da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5bda630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5bd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc5bdcb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5bdcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5bdb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5bdb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5bdb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5bdb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5bdb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5bdb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5bdb980"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5bdbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc5bd5480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5bd5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5bd5800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5bd5990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5bd5b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5bd37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5bd5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5bd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5bd41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5bd4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5bd44d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5bd4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5bd47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5bd4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5bd4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5bd4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5bd3020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5bd31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5bd3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5bd34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5bd5cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5bd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc5bd61b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5bd61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5bd6530"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5bd66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5bd6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5bd69e0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5bd6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5bd6d00"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5bd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5bd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc5bc4020" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5bc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5bc43a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5bc4530"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5bc46c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5bc4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc5bc3050" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc5bc3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5bc33d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5bc3560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5bc36f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5bc3880"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5bc3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1dc5bc2df0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1dc5bc2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5bc11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc5bc1450" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc5bc1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5bc17d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc5bc1960"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5bc1af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5bc1c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc5bc1e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1dc5bbd430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc5bbd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc5bb9b00"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc5baf2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc5bb93d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5baf9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1dc5ba2430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5ba2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1dc5ba27b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1dc5ba2940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1dc5ba2ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1dc5ba2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc5bc2210" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc5bc2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5bc2590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1dc5bb7350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5bb7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc5bb76d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc5bb7860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc5bb79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc5bc0120" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5bc0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc5bc04a0"/>
        <function-ref name="source" scoped="" ref="0x7f1dc5bc0630"/>
        <function-ref name="address" scoped="" ref="0x7f1dc5bc07c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc5bc0950"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc5bc0ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc5bc0c70"/>
        <function-ref name="type" scoped="" ref="0x7f1dc5bc0e00"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc5bbf020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc5bbf1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc5bbf340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc5bbf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1dc5bae660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc5bae660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc5badce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc5bab460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc5bad5b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5babb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc5b95080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b95080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5b95400"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5b95590"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5b95720"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5b958b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1dc5b84020" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc5b843a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc5b84530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc5b846c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc5b84850"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc5b849e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc5b84b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1dc5b7a020" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1dc5b7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1dc5b7a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc5b90c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc5b90c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5b8f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc5b8f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b8f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b8f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc5b8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc5b941d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc5b941d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5b94550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b946e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b94870"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5b94a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5b94b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1dc5b91020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1dc5b91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5b913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1dc5b87dc0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b87dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc5b8e180"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc5b8e310"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc5b8e4a0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc5b8e630"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc5b8e7c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc5b8e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1dc5b84e70" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5b84e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1dc5b82220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1dc5b823b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1dc5b82540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1dc5b826d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc5b923f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc5b923f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5b92770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1dc5b8ec80" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b8ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc5b8d0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc5b8d230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc5b8d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1dc5b710d0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1dc5b710d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1dc5b71450"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1dc5b715e0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1dc5b71770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1dc5b71900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1dc5b71a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc5b91650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc5b91650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc5b919d0"/>
        <function-ref name="source" scoped="" ref="0x7f1dc5b91b60"/>
        <function-ref name="address" scoped="" ref="0x7f1dc5b91cf0"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc5b91e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc5b90030"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc5b901c0"/>
        <function-ref name="type" scoped="" ref="0x7f1dc5b90350"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc5b904e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc5b90670"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc5b90800"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc5b90990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1dc5b83e00" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc5b83e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1dc5b851c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc5b6b340" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b6b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5b6b6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5b6b850"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5b6b9e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5b6bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1dc5b589d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc5b589d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1dc5b58d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1dc5b57b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1dc5b57b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1dc5b56020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1dc5b561b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1dc5b56340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1dc5b564d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1dc5b56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1dc5b59140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b59140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc5b594c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc5b59650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc5b597e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc5b59970"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc5b59b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc5b59c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1dc5b63d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc5b63d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5b5c0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b5c270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b5c400"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5b5c590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5b5c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1dc5b57080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc5b57080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1dc5b57400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1dc5b57590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1dc5b57720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1dc5b578b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1dc5b64820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1dc5b64820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5b64ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1dc5b58020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc5b58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc5b583a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc5b58530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc5b586c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5b65770" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5b65770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5b65af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5b65c80"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5b65e10"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5b69020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5b691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1dc5b5ba30" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1dc5b5ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5b5bdb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b64020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b641b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5b64340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5b644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1dc5b63020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1dc5b63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5b633a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc5b63530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b636c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b63850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc5b639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1dc5b5ca90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc5b5ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5b5ce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc5b53390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b53390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5b53710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5b538a0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5b53a30"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5b53bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1dc5b51330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b51330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc5b516b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc5b51840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc5b519d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc5b51b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc5b51cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc5b51e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc5b53e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc5b53e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5b52220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b523b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b52540"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5b526d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5b52860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc5b52b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc5b52b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc5b51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc5b50e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc5b50e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc5b4d220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc5b4d3b0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5b4d540"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5b4d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1dc5b4c7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc5b4c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc5b4cb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc5b4ccf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc5b4ce80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc5b4b030"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc5b4b1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc5b4b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1dc5b40060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1dc5b40060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc5b403e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc5b40570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc5b40700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc5b40890"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc5b40a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc5b40bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1dc5b36330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5b36330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc5b366b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc5b36840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc5b369d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc5b36b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc5b36cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc5b36e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f1dc5b382a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1dc5b382a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5b38620"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5b387b0"/>
        <function-ref name="modify" scoped="" ref="0x7f1dc5b38940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5b38ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f1dc5b38c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc5b4d990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc5b4d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5b4dd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b4c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc5b4c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc5b4c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc5b4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1dc5b35420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1dc5b35420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1dc5b357a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1dc5b35930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1dc5b3f760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1dc5b3f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc5b3fae0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5b3fc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc5b2e920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc5b2e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5b2eca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc5b2ee30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc5b32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f1dc5b43b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5b43b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1dc5b49020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1dc5b491b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1dc5b49340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1dc5b494d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1dc5b49660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1dc5b497f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1dc5b49980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1dc5b49b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc5b35bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc5b35bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc5b37020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc5b371b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc5b37340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc5b374d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc5b37660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5b377f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc5b37980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc5b36020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5b37b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc5b37ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc5b37e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1dc5b4b640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5b4b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5b4b9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5b4bb50"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5b4bce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5b4be70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5b4a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f1dc5b31110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f1dc5b31110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc5b31590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc5b31720"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc5b318b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc5b31a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc5b31bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc5b31d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f1dc5b24b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f1dc5b24b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5b22020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5b221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f1dc5b25ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f1dc5b25ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5b24020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5b241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f1dc5b26c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f1dc5b26c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5b25020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5b251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1dc5acbdc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc5acbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1dc5ad7180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1dc5ad7310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1dc5ad74a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1dc5ad7630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1dc5ad77c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1dc5ad7950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1dc5ad7ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1dc5ad7c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1dc5ad7e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1dc5ad6020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1dc5ad61b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1dc5ad6340"/>
        <function-ref name="sync" scoped="" ref="0x7f1dc5ad64d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1dc5ad6760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1dc5ad68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1dc5ac80c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1dc5ac80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5ac8cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc5ac7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1dc5ad6bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5ad6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1dc5aca020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1dc5aca1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1dc5aca340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1dc5aca4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1dc5aca660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1dc5aca7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1dc5aca980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1dc5acab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5adc950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5adc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5adccd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5adce60"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5ad8020"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5ad81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5ad8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1dc5ac1970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc5ac1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1dc5ac1cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1dc5ac1e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1dc5ac0030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1dc5ac01c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1dc5ac0350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1dc5ac04e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1dc5ac0670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1dc5ac0800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1dc5ac0990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1dc5ac0b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1dc5ac0cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1dc5ac0e40"/>
        <function-ref name="sync" scoped="" ref="0x7f1dc5abf020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1dc5abf2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1dc5abf440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f1dc5a998e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc5a998e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a99c60"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5a99df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f1dc5aba020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc5aba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1dc5aba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f1dc5ab2d90" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f1dc5ab2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc5ab0670"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5ab85d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc5ab0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc5ab8a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc5ab0b30"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5ab9bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5ab8110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f1dc5a9d5f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc5a9d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a9d970"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5a9db00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f1dc5aae380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1dc5aae380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5aae700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5aae890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5aaea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5aaebb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5aaed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5aad020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5aad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5aad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1dc5abeb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1dc5abeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5abd750"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc5abdbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f1dc5a87820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f1dc5a87820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5a87ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5a87d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f1dc5a981c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1dc5a981c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a98540"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5a986d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1dc5a98a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5a98a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a98df0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5a97020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f1dc5aa23d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc5aa23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5aa2750"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5aa28e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1dc5aa3810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc5aa3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1dc5aa3b90"/>
        <function-ref name="changed" scoped="" ref="0x7f1dc5aa3d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1dc5aaa020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1dc5aaa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1dc5aaf060" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1dc5aaf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5aaf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5aaf570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5aaf700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5aaf890"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5aafa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5aafbb0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5aafd40"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5aae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f1dc5a96120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc5a96120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5a966a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f1dc5aad6a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1dc5aad6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5aada20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5aadbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5aadd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5aac020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5aac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5aac340"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5aac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5aac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc5ac2510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5ac2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5ac2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1dc5a99020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc5a99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a993a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5a99530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f1dc5a96a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc5a96a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5a96dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1dc5a951d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1dc5a951d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5a95550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5a956e0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5a95870"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5a95a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5a95b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f1dc5a93d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f1dc5a93d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5a92180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5a92310"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5a924a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5a92630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5a927c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1dc5abf740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1dc5abf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1dc5abfac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1dc5abfc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1dc5abfde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1dc5abe020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1dc5abe1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1dc5abe340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1dc5abe4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1dc5abe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f1dc5aa2c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc5aa2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a9d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5a9d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f1dc5a9bb00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc5a9bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5a9be80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5aa2030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f1dc5a942b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1dc5a942b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5a94630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc5a92a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc5a92a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc5a92e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc5a91020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc5a911b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc5a91340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc5a914d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5a91660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc5a917f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc5a91e30"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5a91980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc5a91b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc5a91ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f1dc5a88940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f1dc5a88940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc5a88cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc5a88e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5ac2b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5ac2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5ac1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5ac11b0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5ac1340"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5ac14d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5ac1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f1dc5aa6520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1dc5aa6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5aa68a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5aa6a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f1dc5a9ea90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5a9ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5aa6020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5aa61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f1dc5aab0e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1dc5aab0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5aab460"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5aab5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1dc5aab780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1dc5aab910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f1dc5a93020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f1dc5a93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5a933a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5a93530"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5a936c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5a93850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5a939e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f1dc5a949c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc5a949c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5a94d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc5a11c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5a11c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc5a0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1dc5a0e690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc5a0e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc5a0b020"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5a0c020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc5a0c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc5a0c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc5a0b4e0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5a0d5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5a0dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc5a09d40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5a09d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc57c50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1dc57c55f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1dc57c55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc57c3e50"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc57c4e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc57c3800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc57c3340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc57c2340"/>
        <function-ref name="start" scoped="" ref="0x7f1dc57c4430"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc57c4940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc4333b90" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc4333b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc43304e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc43314e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc4331e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc43319a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc43309a0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc43329d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4331020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4333340" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4333340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc43336c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc432cc20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc432cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc43284e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc43294e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc4329e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc43299a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc43289a0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc432aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4329020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc432c3d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc432c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc432c750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1dc4312440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc4312440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc43127c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc4312950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc4312ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc4312c70"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4312e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1dc43159d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc43159d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4315d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc4314020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc43141b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4314340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc43144d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4314660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc43147f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4314980"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc4314b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc4314ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc4314e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1dc4313120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc4313120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc43134a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc4313630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc43137c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc4313950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc4313ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc4313c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc4313e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc4312020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc43121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1dc59d23f0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc59d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59d2770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59d2900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59d2a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59d2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59d2db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1dc59decd0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc59decd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc59d60a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc59d6230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59d63c0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc59d6550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59d66e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59d6870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc59d6a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59d6b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc59d6d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc59d5020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc59d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1dc59d5a40" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc59d5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59d5dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59d4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59d41b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59d4340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59d44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59d4660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59d47f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59d4980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f1dc59c2a50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f1dc59c2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59c2dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59c1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59c11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59c1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59c14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59c1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59c17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59c1980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f1dc59bd5a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f1dc59bd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59bd920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59bdab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59bdc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59bddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59bb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59bb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59bb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59bb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1dc59c3a20" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1dc59c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59c3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59c2020"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59c2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59c24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f1dc59b03e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f1dc59b03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59b0760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59b08f0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59b0a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59b0c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59b0da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f1dc59c9bb0" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1dc59c9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59c3020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59c31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59c3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59c34d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1dc59b1570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1dc59b1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59b18f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59b1a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59b1c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59b1da0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1dc59a7da0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1dc59a7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59a6180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59a6310"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59a64a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59a6630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59a67c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f1dc59af410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f1dc59af410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59af790"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59af920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59afab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59afc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59afdd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59ae020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59ae1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59ae340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1dc59cd280" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1dc59cd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59cd600"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59cd790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59cd920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59cdab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59cdc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59cddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59cc020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59cc1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f1dc59b7da0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f1dc59b7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59b6180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59b6310"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59b64a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59b6630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59b67c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59b6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f1dc59b7020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f1dc59b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59b73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59b7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59b76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59b7850"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f1dc59b9a50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f1dc59b9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59b9dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59b8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59b81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59b8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59b84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59b8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59b87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59b8980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59b8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1dc59c0da0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1dc59c0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59bf180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59bf310"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59bf4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59bf630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59bf7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59bf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f1dc59ad890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f1dc59ad890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59adc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59adda0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59ac020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59ac1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59ac340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f1dc59b6d40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f1dc59b6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59b50e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59b5270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59b5400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59b5590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59b5720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59b58b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59b5a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59b5bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59b5d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f1dc59c0020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f1dc59c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59c03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59c0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59c06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59c0850"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59c09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1dc59d1a30" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1dc59d1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc59d1db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc59ce020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc59ce340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59ce4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59ce660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc59ce7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59ce980"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc59ceb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc59ceca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc59cee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1dc59ae890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1dc59ae890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59aee10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59ad020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59ad1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59ad340"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f1dc59ca730" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1dc59ca730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59caab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59cac40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59cadd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59c9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59c91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59c9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59c94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59c9660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1dc59ac8c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1dc59ac8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59acc40"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59acdd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59ab020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59ab1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59ab340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59ab4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59ab660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59ab7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f1dc59c4690" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f1dc59c4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59c4a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59c4ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59c4d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59ca020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59ca1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f1dc59b3020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f1dc59b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59b33a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59b3530"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59b36c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59b3850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59b39e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59b3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f1dc59cc700" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1dc59cc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59cca80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59ccc10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59ccda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59cb020"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f1dc59b4160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f1dc59b4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59b44e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59b4670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59b4800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59b4990"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59b4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f1dc59aaae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f1dc59aaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59aae60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59a9020"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59a91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59a9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59a94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f1dc59b2020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f1dc59b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59b23a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59b2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59b26c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59b2850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59b29e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59b2b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59b2d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59b1020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f1dc59bfcd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f1dc59bfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc59be0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc59be230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59be3c0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc59be550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59be6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59be870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc59bea00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59beb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc59bed20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc59bd020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc59bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f1dc59baa20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f1dc59baa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59bada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc59b9020"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59b91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59b9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59b94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc59b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1dc59abd40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1dc59abd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59aa0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59aa270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59aa400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59aa590"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59aa720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1dc59a7020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1dc59a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59a73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59a7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59a76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59a7850"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1dc59bba20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1dc59bba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59ba020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc59ba1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59ba340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc59ba4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1dc59a9a50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1dc59a9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc59a9dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59a8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc59a81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59a8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59a84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59a8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59a87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc59a8980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59a8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1dc596e940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1dc596e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc596ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1dc596e2f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1dc596e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc596e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1dc596c020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1dc596c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc596c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1dc596fbf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc596fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc596e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc59703e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc59703e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5970760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc59708f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5970a80"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5970c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc5970da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc596f020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc596f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc596f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc596f4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc596f660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc596f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1dc5966750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1dc5966750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5966ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1dc5966100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1dc5966100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5966480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1dc5966da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1dc5966da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5965180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1dc5967a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc5967a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5967e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc5968260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc5968260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc59685e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc5968770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5968900"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5968a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc5968c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc5968db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc5967020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59671b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc5967340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc59674d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc5967660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc591b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc591b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc591bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc591bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc591be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc591a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc591a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc591a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc59626d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc59626d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc5962a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc5962be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5962d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc591c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc591c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc591c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc591c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc591c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc591c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc5919c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc5919c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5918020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc591cac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc591cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc591ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc591b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc591b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc591b340"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc591b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc591a610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc591a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc591a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc591ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc591acb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc591ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc5919020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59191b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc5919340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59194d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc5919660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc59197f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc5919980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc5914cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc5914cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59130a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc5913230"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc59133c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc5913550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59136e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc5913870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc5916b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc5916b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc5915020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc59151b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5915340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc59154d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc5915660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc59157f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc5915980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc5915b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc5915ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc59102f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc59102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5910670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc5914020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc5914020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc59143a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc5914530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59146c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc5914850"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59149e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc5913b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc5913b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5911020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc59111b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5911340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc59114d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc5911660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59117f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc5911980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc5911b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc5911ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc5911e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc5910020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc590b2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc590b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc590b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc590b800"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc590b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc590bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc590bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc590be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc590d220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc590d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc590d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc590d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc590d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc590da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc590dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc590dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc590c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc590c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc590c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc59097a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc59097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5909b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc590c610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc590c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc590c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc590cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc590ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc590ce40"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc590b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc590a160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc590a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc590a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc590a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc590a800"/>
        <function-ref name="get" scoped="" ref="0x7f1dc590a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc590ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc590acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc590ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc5909020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc59091b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc5909340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc59094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc59047a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc59047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc5904b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc5904cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc5904e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc5903020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59031b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc5903340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc59066d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc59066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc5906a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc5906be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5906d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc5905020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc59051b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc5905340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc59054d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc5905660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc59057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc5902c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc5902c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5900020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc5905ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc5905ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc5905e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc5904020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc59041b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc5904340"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc59044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc5903610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc5903610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5903990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc5903b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc5903cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5903e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc5902020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc59021b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc5902340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc59024d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc5902660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc59027f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc5902980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc58fccb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc58fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58fb0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc58fb230"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc58fb3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58fb550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58fb6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc58fb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc58feb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc58feb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc58fd020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc58fd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58fd340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc58fd4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc58fd660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58fd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc58fd980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc58fdb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc58fdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc58f92f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc58f92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58f9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc58fc020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc58fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58fc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc58fc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc58fc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc58fc850"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc58fc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc58fbb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc58fbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc58fa020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc58fa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58fa340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc58fa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58fa660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58fa7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc58fa980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58fab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc58faca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc58fae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc58f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc58f42f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc58f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58f4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc58f4800"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc58f4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58f4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58f4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc58f4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc58f6220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc58f6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc58f65a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc58f6730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58f68c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc58f6a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc58f6be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58f6d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc58f5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc58f51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc58f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc58f27a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc58f27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58f2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc58f5610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc58f5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58f5990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc58f5b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc58f5cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc58f5e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc58f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc58f3160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc58f3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc58f34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc58f3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58f3800"/>
        <function-ref name="get" scoped="" ref="0x7f1dc58f3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58f3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58f3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc58f3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58f2020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc58f21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc58f2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc58f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc58ec7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc58ec7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58ecb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc58eccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc58ece40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58eb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58eb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc58eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc58ee6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc58ee6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc58eea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc58eebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58eed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc58ed020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc58ed1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58ed340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc58ed4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc58ed660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc58ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc58eac50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc58eac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc58edac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc58edac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58ede40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc58ec020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc58ec1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc58ec340"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc58ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc58eb610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc58eb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc58eb990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc58ebb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58ebcb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc58ebe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58ea020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58ea1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc58ea340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58ea4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc58ea660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc58ea7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc58ea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc58e5cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc58e5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58e40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc58e4230"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc58e43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58e4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58e46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc58e4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc58e7b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc58e7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc58e6020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc58e61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58e6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc58e64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc58e6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58e67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc58e6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc58e6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc58e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc58e22f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc58e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58e2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc58e5020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc58e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58e53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc58e5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc58e56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc58e5850"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc58e59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc58e4b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc58e4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc58e3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc58e31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58e3340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc58e34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58e3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58e37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc58e3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58e3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc58e3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc58e3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc58e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc58dc2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc58dc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58dc670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc58dc800"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc58dc990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58dcb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58dccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc58dce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc58de220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc58de220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc58de5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc58de730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58de8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc58dea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc58debe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58ded70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc58dd020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc58dd1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc58dd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc58da7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc58da7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58dab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc58dd610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc58dd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58dd990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc58ddb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc58ddcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc58dde40"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc58dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc58db160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc58db160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc58db4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc58db670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58db800"/>
        <function-ref name="get" scoped="" ref="0x7f1dc58db990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58dbb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58dbcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc58dbe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58da020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc58da1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc58da340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc58da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc58d57a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc58d57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58d5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc58d5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc58d5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58d4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58d41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc58d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1dc58d76d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1dc58d76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc58d7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc58d7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58d7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc58d6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc58d61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58d6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc58d64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc58d6660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc58d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1dc58d3c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1dc58d3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1dc58d6ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1dc58d6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc58d6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc58d5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc58d51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc58d5340"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc58d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1dc58d4610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc58d4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc58d4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc58d4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc58d4cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc58d4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc58d3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58d31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc58d3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58d34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc58d3660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc58d37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc58d3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f1dc58ccbc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1dc58ccbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1dc58ce3f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1dc58ce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58ce770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f1dc58ceb80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1dc58ceb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f1dc58cc430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1dc58cc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc58cc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1dc43080c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc43080c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc4308440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc43085d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc4308760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc43088f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4308a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1dc430b710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc430b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc430ba90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc430bc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc430bdb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc430a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc430a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc430a340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc430a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc430a660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc430a7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc430a980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc430ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc430f5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc430f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc430ddf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc430edf0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc430d7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc430d2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc430b2e0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc430e420"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc430e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4310ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4310ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc430f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1dc430ada0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc430ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc4309180"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc4309310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc43094a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc4309630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc43097c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc4309950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc4309ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc4309c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc4309e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc58438c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc58438c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc5848700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58470d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc5848bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc5847590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1dc58418e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1dc58418e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc583e780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc583d150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc583ec40"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc583d610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1dc582cc50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc582cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc582b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc582b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc582b340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc582b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc582b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc582b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc582b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc582bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc582bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc582be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc582a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc583bb80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc583bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc583a9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc582c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc583ae70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc582c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1dc58090f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1dc58090f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc5807020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc58079a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc58074e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc5807e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc5826cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc5826cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc580bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc580a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc580a090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc580aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc4325020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc4325020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4322870"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4324840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc4322220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4324d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc4322d30"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4325e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4324380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1dc431f780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1dc431f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc431b020"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc431c020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc431c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc431c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc431b4e0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc431e5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc431eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1dc43213d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc43213d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4320240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4320bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4320700"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc431f0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f1dc57bd9c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1dc57bd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57bdd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57bc340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57bc660"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57bc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57bc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f1dc57bccf0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1dc57bccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57bb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57bb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57bb550"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57bb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57bb870"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57bba00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f1dc57ba020" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1dc57ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57ba530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57ba6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57ba850"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57ba9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57bab70"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57bad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f1dc57be690" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1dc57be690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57bea10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57beba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57bed30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57bd020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57bd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57bd340"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57bd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f1dc57b76a0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1dc57b76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57b7a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57b7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57b7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57b6020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57b6340"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57b64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f1dc57bf3e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1dc57bf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57bf760"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57bf8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57bfa80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57bfc10"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57bfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57be020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57be1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f1dc57b9370" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1dc57b9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57b96f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57b9880"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57b9a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57b9ba0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57b9d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57b7020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc57b4c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57b4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57b3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57b31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc57b3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc57b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57b3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57b37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc57b3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc57b3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57b3ca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57b3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc57b2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc57b21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc57b2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc57b25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc57b2760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57b28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc57b2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc57b2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57b34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc57b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc57b5a20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57b5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57b5da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57b4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57b4340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57b4660"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57b47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57b4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc57ae2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57ae670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57ae800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc57ae990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc57ac660"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57aecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57aee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc57ad020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc57ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57ad340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57ad4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc57ad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc57ad7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc57ad980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc57adc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc57adda0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57ac020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc57ac1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc57ac340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57aeb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc57ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc57af020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57af3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57af530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57af6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57af850"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57af9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57afb70"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57afd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc57a97a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57a97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57a9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57a9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc57a9e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc57a7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57a8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc57a84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc57a8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57a87f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57a8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc57a8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc57a8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc57a8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc57a7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc57a72b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57a7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc57a75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc57a7760"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc57a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc57aa630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57aa630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57aa9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57aab40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57aacd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57aae60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57a91b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57a9340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc57a4c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57a4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57a3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57a31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc57a3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc57a1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57a3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57a37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc57a3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc57a3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57a3ca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57a3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc57a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc57a21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc57a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc57a25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc57a2760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57a28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc57a2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc57a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57a34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc57a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc57a5b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc57a5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57a5e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57a4030"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57a41c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57a4350"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57a44e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57a4670"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57a4800"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57a4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc579d2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc579d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc579d670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc579d800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc579d990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc579b660"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc579dcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc579de40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc579c020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc579c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc579c340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc579c4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc579c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc579c7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc579c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc579cc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc579cda0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc579b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc579b1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc579b340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc579db20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc579b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc579e020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc579e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc579e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc579e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc579e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc579e850"/>
        <function-ref name="get" scoped="" ref="0x7f1dc579e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc579eb70"/>
        <function-ref name="set" scoped="" ref="0x7f1dc579ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc579d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc57987a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc57987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5798b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5798cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5798e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5796a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5797340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc57974d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5797660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57977f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5797980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5797b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5797ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5797e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5796120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc57962b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5796440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc57965d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5796760"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5797020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc57968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc5799630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5799630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc57999b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5799b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5799cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5799e60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5798020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc57981b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5798340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57984d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc5793c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5793c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5792020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc57921b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5792340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5790020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5792660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57927f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5792980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5792b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5792ca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5792e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5791020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc57911b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5791340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc57915d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5791760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57918f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5791a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5791c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57924d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5791da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc5794b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc5794b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5794e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5793030"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc57931c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5793350"/>
        <function-ref name="get" scoped="" ref="0x7f1dc57934e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5793670"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5793800"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5793990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f1dc5776700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1dc5776700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1dc5776a80"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5776c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc5776da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1dc577a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f1dc577a400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1dc577a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc577a780"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc577a910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1dc577aaa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1dc577ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f1dc5779060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1dc5779060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc57793e0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5779570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1dc5779700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1dc5779890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f1dc575ba80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f1dc575ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc575be00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1dc575a020"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc575a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc575a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc575a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1dc575a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1dc576ec20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1dc576ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1dc575c020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc575c1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc575c340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1dc575c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1dc575c760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc575c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc575cae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc575cc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc575ce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc575b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc575b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc575b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc575b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc575b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc575b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f1dc575a930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc575a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc575acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc575ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5758020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5757c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5758340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc57584d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5758660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc57587f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5758980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5758b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5758ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5758e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5757020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc57572b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5757440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc57575d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5757760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc57578f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc57581b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5757a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1dc5746020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1dc5746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc57463a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5746530"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57466c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5746850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57469e0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5746b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5746d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1dc573a3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1dc573a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc573a770"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc573a900"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc573aa90"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc573ac20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc573adb0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5739020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57391b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5739340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1dc5743a30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1dc5743a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5743db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5742020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57421b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5742340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57424d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5742660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57427f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5742980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1dc5740020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1dc5740020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc57403a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5740530"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57406c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5740850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57409e0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5740b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5740d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc573f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1dc574fa30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1dc574fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc574fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5748020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57481b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5748340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57484d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5748660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57487f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5748980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1dc573da30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1dc573da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc573c020"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc573c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc573c340"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc573c4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc573c660"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc573c7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc573c980"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc573cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1dc57453f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1dc57453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5745770"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5745900"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5745a90"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5745c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5745db0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5744020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57441b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5744340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1dc5739710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1dc5739710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5739a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5739c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5739db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5738020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57381b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5738340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57384d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5738660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1dc57493d0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1dc57493d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5749750"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc57498e0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5749a70"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5749c00"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5749d90"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5750020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57501b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5750340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1dc573f3f0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1dc573f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc573f770"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc573f900"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc573fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc573fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc573fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc573e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc573e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc573e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1dc5748d50" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1dc5748d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5747100"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5747290"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5747420"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc57475b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5747740"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc57478d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5747a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5747bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1dc573b020" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1dc573b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc573b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc573b530"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc573b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc573b850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc573b9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc573bb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc573bd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc573a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1dc5744710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1dc5744710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5744a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5744c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5744db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5743020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57431b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5743340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57434d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5743660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1dc5742d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1dc5742d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5741100"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5741290"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5741420"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc57415b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5741740"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc57418d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5741a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5741bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1dc5750710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1dc5750710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5750a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5750c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5750db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc574f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc574f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc574f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc574f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc574f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1dc573e710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1dc573e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc573ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc573ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc573edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc573d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc573d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc573d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc573d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc573d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1dc572f3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1dc572f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc572f770"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc572f900"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc572fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc572fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc572fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc572e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc572e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc572e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1dc57233f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1dc57233f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5723770"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5723900"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5723a90"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5723c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5723db0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5722020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57221b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5722340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1dc572cd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1dc572cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc572b100"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc572b290"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc572b420"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc572b5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc572b740"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc572b8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc572ba60"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc572bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1dc57293f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1dc57293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5729770"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5729900"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5729a90"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5729c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5729db0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5728020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57281b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5728340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1dc5733d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1dc5733d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5731100"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5731290"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5731420"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc57315b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5731740"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc57318d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5731a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5731bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1dc5726d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1dc5726d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5725210"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc57253a0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5725530"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc57256c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5725850"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc57259e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5725b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5725d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1dc572e710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1dc572e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc572ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc572ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc572edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc572d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc572d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc572d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc572d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc572d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1dc5722710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1dc5722710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5722a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5722c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5722db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5721020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57211b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5721340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57214d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5721660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1dc57377a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1dc57377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5737b20"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5737cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5737e40"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5734020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57341b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5734340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57344d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5734660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1dc5728710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1dc5728710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5728a90"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5728c20"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5728db0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5727020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57271b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5727340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57274d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5727660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1dc5730020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1dc5730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc57303a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5730530"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57306c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5730850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57309e0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5730b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5730d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc572f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1dc5724100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1dc5724100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5724480"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5724610"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57247a0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5724930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5724ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5724c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5724de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5723020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1dc572da30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1dc572da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc572ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc572c020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc572c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc572c340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc572c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc572c660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc572c7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc572c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1dc572a020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1dc572a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc572a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc572a530"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc572a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc572a850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc572a9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc572ab70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc572ad00"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5729020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1dc5734a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1dc5734a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5734db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5733020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57331b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5733340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57334d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5733660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57337f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5733980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1dc5727a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1dc5727a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5727db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5726020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc57261b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5726340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc57264d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5726660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc57267f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5726980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1dc56172f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1dc56172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5617670"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5617800"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5617990"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5617b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc5617cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5617e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc5608020"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc56081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1dc5618680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1dc5618680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5618a00"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5618b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1dc5618d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1dc5617020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1dc56067a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1dc56067a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc5606b20"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5606cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc5606e40"/>
        <function-ref name="edge" scoped="" ref="0x7f1dc5605020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f1dc56051b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1dc5605340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f1dc56054d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1dc5605660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1dc5607b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1dc5607b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5606020"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc56061b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1dc5606340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1dc56064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1dc51a4e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc51a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a3410"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1dc51b0160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1dc51b0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51b04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1dc51a8e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc51a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a6210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1dc51a2880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc51a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a2c00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1dc519a0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1dc519a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519a420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1dc51a10a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1dc51a10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a1420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1dc518e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc518e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc518e880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc518ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1dc5190500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc5190500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5190880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5190a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1dc51af490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc51af490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51af810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1dc5196880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1dc5196880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5196c00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5196d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1dc5191500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc5191500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5191880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5191a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1dc51a6e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1dc51a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a5210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1dc51a5e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc51a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a4210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1dc519c880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc519c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519cc00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1dc519d0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1dc519d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519d420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1dc51a1880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc51a1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a1c00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc51b2a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc51b2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc51b2e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc51b1020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc51b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1dc51abe00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc51abe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51aa1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1dc51aa490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1dc51aa490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51aa910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1dc5195c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc5195c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51940a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5194230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1dc51aabe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc51aabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1dc5191ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc5191ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51900a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5190230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1dc51ab160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc51ab160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51ab4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1dc51960a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1dc51960a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5196420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1dc51a5670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc51a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a59f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1dc51a6670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc51a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a69f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1dc51b1ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc51b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51b1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1dc51970a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc51970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5197420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51975b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1dc519a880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1dc519a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519ac00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1dc5197880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc5197880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5197c00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5197d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1dc518fce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc518fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc518e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc518e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1dc5190ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc5190ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc518f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc518f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1dc519d880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1dc519d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519dc00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1dc51980a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1dc51980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5198420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51985b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1dc5193ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc5193ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51910a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5191230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1dc51a0880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc51a0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a0c00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1dc518ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc518ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc518d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc518d230"/>
        <function-ref name="write" scoped="" ref="0x7f1dc518d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc518d550"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc518d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1dc51b1480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc51b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1dc51a8670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1dc51a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a89f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1dc51a4670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc51a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a49f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1dc519b0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc519b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519b420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1dc51a00a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc51a00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a0420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1dc519b880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc519b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519bc00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1dc51a3870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc51a3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a3bf0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1dc51b07b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1dc51b07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51b0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1dc51a20a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc51a20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51a2420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51a25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc51b3e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc51b3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc51b21c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc51b2350"/>
        <function-ref name="request" scoped="" ref="0x7f1dc51b24e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc51b2670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc51b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1dc51a92f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc51a92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51a9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1dc51a8020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1dc51a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1dc5193500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1dc5193500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5193880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5193a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1dc5194ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5194ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51930a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5193230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1dc51ab7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc51ab7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51abb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1dc5194500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc5194500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5194880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5194a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1dc518f500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1dc518f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc518f880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc518fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1dc519c0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc519c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519c420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1dc5198880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1dc5198880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5198c00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5198d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1dc51b0e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1dc51b0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51af1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1dc51afae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc51afae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51afe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1dc519e0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc519e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519e420"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1dc51a9940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1dc51a9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51a9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1dc519e880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1dc519e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc519ec00"/>
        <function-ref name="write" scoped="" ref="0x7f1dc519ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1dc51950a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1dc51950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5195820"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51959b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1dc518d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc518d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc518dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc518c020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc518c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc518c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc518c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1dc55c32c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1dc55c32c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc55c3640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc55c37d0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc55c3960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc55c3af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc55c3c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc55c5350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55c5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc55c56d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc55c5860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc55c59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f1dc55c2540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f1dc55c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc55c28c0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc55c2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f1dc55c1370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f1dc55c1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc55c16f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc55c1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc55c64d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc55c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc55c6850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc55c69e0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc55c6b70"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc55c6d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc55c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1dc55c01d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1dc55c01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc55c0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f1dc55a92e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc55a92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc55a9660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc55a97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1dc55ba890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1dc55ba890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc55bac10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc55bada0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc55b9020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc55b91b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc55b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc55bc660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc55bc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc55bc9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc55bcb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc55bcd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f1dc55b1c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1dc55b1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1dc55b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f1dc55a9b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f1dc55a9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc55b2020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc55b21b0"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc55b2340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc55b24d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc55b2660"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc55b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1dc55b5060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1dc55b5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc55b53e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc55b5570"/>
        <function-ref name="request" scoped="" ref="0x7f1dc55b5700"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc55b5890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc55b5a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f1dc55b9ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f1dc55b9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc55b8020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc55b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f1dc55b8a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f1dc55b8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc55b8db0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc55b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc55b2a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc55b2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc55b2df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc55b0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc55b01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc55b0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc55b04d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc55b0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc55b07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc55b0e30"/>
        <function-ref name="set" scoped="" ref="0x7f1dc55b0980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc55b0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc55b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc55bb510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc55bb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc55bb890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc55bba20"/>
        <function-ref name="request" scoped="" ref="0x7f1dc55bbbb0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc55bbd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc55ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f1dc55a5bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f1dc55a5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc55a4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc55a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1dc55b78b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1dc55b78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc55b7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1dc554a770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc554a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc554aaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc554ac80"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc554ae10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc5546020"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc55461b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc5546340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1dc55451d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc55451d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc5545550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc55456e0"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc5545870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc5545a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc5545b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc5545d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc5541020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5541020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc55413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1dc5541b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc5541b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc5540020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc55401b0"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc5540340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc55404d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc5540660"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc55407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1dc51d9020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc51d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc51d93a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc51d9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1dc55278f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1dc55278f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1dc5527c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5528c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5528c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5527020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc55271b0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5527340"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc55274d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5527660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc40bc760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40bc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc40bcae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc40bcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1dc40ba120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc40ba120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc40ba4a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc40ba630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1dc40ba8c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc40ba8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc40bac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1dc40bb020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1dc40bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1dc40bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc40bda00" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc40bda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc40bdd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc40bc020"/>
        <function-ref name="request" scoped="" ref="0x7f1dc40bc1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc40bc340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc40bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1dc40bb630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc40bb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1dc40bb9b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1dc40bbb40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1dc40bbcd0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc40bbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1dc54bf8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc54bf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc54bfc60"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc54bfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1dc54c1850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc54c1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc54c1bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc54c1d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1dc54bca40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc54bca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc54bcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1dc54c2110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1dc54c2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1dc54c2490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1dc54bd690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1dc54bd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc54bda10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc54bdba0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc54bdd30"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc54bc020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc54bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc54c6d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc54c6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc54c3180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc54c3310"/>
        <function-ref name="request" scoped="" ref="0x7f1dc54c34a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc54c3630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc54c37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1dc54c2790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc54c2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1dc54c2b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1dc54c2ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1dc54c2e30"/>
        <function-ref name="write" scoped="" ref="0x7f1dc54c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1dc54b8b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc54b8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc54ba020"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc54ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1dc5446250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc5446250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc54465f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc5446780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1dc5445c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1dc5445c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc5444020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc54441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1dc54433e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1dc54433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc5443780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1dc5446a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1dc5446a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1dc5446d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1dc5443a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1dc5443a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc5443dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc5441020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc54411b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc5441340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc54414d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc5441660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc54417f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc5441980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc5441b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc5441ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc5441e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc5440020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc54401b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc5440440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc54405d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc5440760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc54408f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc5440a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc5440c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc5440da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc543f020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc543f1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc543f340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc543f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc543f660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc543f9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc543fb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc543fd10"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc543e020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc543e1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc543e340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc543e4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc543e660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc543e7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc543e980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc543eb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc543eca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc543ee30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc543d020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc543d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc543dc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc543dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc543c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc543c1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc543c340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc543c4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc543c660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc543c7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc543c980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc543b020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc543cca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc543cb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc543ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1dc54445b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1dc54445b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5444950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5444ae0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5444c70"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5444e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5443020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5447470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5447470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5447810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc54479a0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc5447b30"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5447cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc5447e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1dc5445060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1dc5445060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1dc54453e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1dc5445570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1dc5445700"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5445890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1dc543d480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc543d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc543d800"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc543d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f1dc543b2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f1dc543b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc543b670"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc543b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f1dc542b2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1dc542b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc542b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1dc542fd10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc542fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc542e0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc542e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1dc5433020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc5433020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc54333a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc5433530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc54336c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc5433850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc54339e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc5433b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc5433d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc5432020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc54321b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc5432340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc54324d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc5432660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc54327f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc5432a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc5432c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc5432da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc5431020"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc54311b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc5431340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc54314d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc5431660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc54317f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc5431980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc5431b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc5431ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc5430220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc54303b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc5430540"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc54306d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc5430860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc54309f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc5430b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc5430d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc542f020"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc542f1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc542f340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc542f4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc542f660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc542f7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc542f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1dc53f0bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1dc53f0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc53ef020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc53ef1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc53ef340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc53ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc53ef660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc53ef7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc53ef980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc53efb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc53efca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc53efe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc53ee020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc53ee1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc53ee340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc53ee5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc53ee760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc53ee8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc53eea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc53ef4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc53eec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc53eeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1dc54252d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1dc54252d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc5425650"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc54257e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1dc53ed3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1dc53ed3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc53ed760"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc53ed8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc53eda80"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc53eb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc53edda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc53ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc53ec1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc53ec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc53ec4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc53ec660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc53ec7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc53ec980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc53ecb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc53ecda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc53eb020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc53eb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc53eb340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc53edc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc53eb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc53eb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1dc53ebbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1dc53ebbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc53ea020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc53ea1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc53ea340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc53e8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc53ea660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc53ea7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc53ea980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc53eab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc53eaca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc53eae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc53e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc53e91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc53e9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc53e95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc53e9760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc53e98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc53e9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc53ea4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc53e9c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc53e9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1dc542a700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1dc542a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc542aa80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc542ac10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc542ada0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc5429020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc54291b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc5429340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc54294d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc5429660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc54297f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc5429980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc5429b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc5429ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc5429e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc5428120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc54282b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc5428440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc54285d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc5428760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc54288f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc5428a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc5428c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc5428da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc5427020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc54271b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc5427340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc54276d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc5427860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc54279f0"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc5427b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc5427d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc5426020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc54261b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc5426340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc54264d0"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc5426660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc54267f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc5426980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc5426b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc5426ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc5426e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f1dc53fbd10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1dc53fbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1dc54230e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1dc5423270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1dc5423400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1dc5423590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1dc5423720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1dc54238b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1dc5423a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1dc5423bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc5423d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1dc5421020"/>
        <function-ref name="getData" scoped="" ref="0x7f1dc54211b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1dc5421340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1dc54214d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1dc5421760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1dc54218f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1dc5421a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1dc5421c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1dc5421da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1dc53fa020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1dc53fa1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1dc53fa340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1dc53fa4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1dc53fa660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1dc53fa7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1dc53fa980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1dc53fad10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1dc53f9020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1dc53f91b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1dc53f9340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1dc53f94d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1dc53f9660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1dc53f97f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1dc53f9980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1dc53f9b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1dc53f9ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1dc53f9e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1dc53f8020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1dc53f81b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1dc53f8340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1dc53f84d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1dc53f8660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1dc53f87f0"/>
        <function-ref name="setData" scoped="" ref="0x7f1dc53f8980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1dc53f8b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1dc53f8ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1dc53f8e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1dc53f7020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1dc53f71b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1dc53f7340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1dc53f78d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1dc53f7a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1dc53f7bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1dc53f7d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1dc53f6020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1dc53f61b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1dc53f6340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1dc53f64d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1dc53f6660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1dc53f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1dc53f23e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1dc53f23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc53f2760"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc53f28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc53f2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc53f07f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc53f2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc53f1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc53f11b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc53f1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc53f14d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc53f1660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc53f17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc53f1980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc53f1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc53f1da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc53f0020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc53f01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc53f0340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc53f2c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc53f04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc53f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1dc5425c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc5425c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5424020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1dc53f6bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1dc53f6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc53f4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc53f41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc53f4340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc53f2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc53f4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc53f47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc53f4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc53f4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc53f4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc53f4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc53f3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc53f31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc53f3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc53f35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc53f3760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc53f38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc53f3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc53f44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc53f3c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc53f3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc40b22c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40b22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc40b2640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc40b27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f1dc40ab440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1dc40ab440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc40ab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc40a4760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc40a4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc40a4ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc40a4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1dc40aba50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1dc40aba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1dc40abdd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1dc40aa020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1dc40aa1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1dc40aa340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1dc40aa4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1dc40aa660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1dc40aa7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1dc40aa980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc40aab10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1dc40aaca0"/>
        <function-ref name="getData" scoped="" ref="0x7f1dc40aae30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1dc40a9020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1dc40a91b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1dc40a9440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1dc40a95d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1dc40a9760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1dc40a98f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1dc40a9a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1dc40a9c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1dc40a9da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1dc40a8020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1dc40a81b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1dc40a8340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1dc40a84d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1dc40a8660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1dc40a89f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1dc40a8b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1dc40a8d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1dc40a7020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1dc40a71b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1dc40a7340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1dc40a74d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1dc40a7660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1dc40a77f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1dc40a7980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1dc40a7b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1dc40a7ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1dc40a7e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1dc40a6020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1dc40a61b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1dc40a6340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1dc40a64d0"/>
        <function-ref name="setData" scoped="" ref="0x7f1dc40a6660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1dc40a67f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1dc40a6980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1dc40a6b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1dc40a6ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1dc40a6e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1dc40a5020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1dc40a55b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1dc40a5740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1dc40a58d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1dc40a5a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1dc40a5bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1dc40a5d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1dc40a4020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1dc40a41b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1dc40a4340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1dc40a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1dc40acc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc40acc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc40ab020"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc40ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc40b3640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc40b3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc40b39c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc40b3b50"/>
        <function-ref name="request" scoped="" ref="0x7f1dc40b3ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc40b3e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc40b2030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1dc40b02b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc40b02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc40b0630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc40b07c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc40b0950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc40b0ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc40b0c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc40b0e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc40af020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc40af1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc40af340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc40af4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc40af660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc40af7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc40af980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc40afc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc40afda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc40ae020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc40ae1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc40ae340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc40ae4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc40ae660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc40ae7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc40ae980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc40aeb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc40aeca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc40aee30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc40ad220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc40ad3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc40ad540"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc40ad6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc40ad860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc40ad9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc40adb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc40add10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc40ac020"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc40ac1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc40ac340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc40ac4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc40ac660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc40ac7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc40ac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc40b2a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc40b2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc40b2de0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc40b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc53422c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc53422c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc5342640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc53427d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc53418a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc53418a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc5341c20"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc5341db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1dc53464d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1dc53464d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc5346850"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc53469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5343020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5343020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc53433a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5343530"/>
        <function-ref name="request" scoped="" ref="0x7f1dc53436c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5343850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc53439e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1dc53443f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc53443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc5344770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc5342ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc5342ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc5342e50"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc5341020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1dc532cbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc532cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc532b020"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc532b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1dc533fd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1dc533fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc533e180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc533e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1dc532c5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1dc532c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc532c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1dc533e710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc533e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc533eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1dc533ed80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1dc533ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc532c180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc532c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc52aca60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc52aca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc52ace00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc52ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc52aa790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc52aa790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc52aab30"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc52aacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1dc52ab270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc52ab270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc52ab5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1dc52ab780"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc52ab910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc52abaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc52abc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc52aeca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc52aeca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc52ac0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc52ac230"/>
        <function-ref name="request" scoped="" ref="0x7f1dc52ac3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc52ac550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc52ac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f1dc52a9020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc52a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc52a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc52abe80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc52abe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc52aa220"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc52aa3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc403a020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc403a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc403a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1dc403a630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1dc403a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1dc403a9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1dc403ab40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1dc403acd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1dc403ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc40366c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc40366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc4036a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc4036bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc40349d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc40349d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc4034d70"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc4033020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1dc40332b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1dc40332b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1dc4033630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1dc40337c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1dc4033950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1dc4033ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1dc4036e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4036e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc40351e0"/>
        <function-ref name="requested" scoped="" ref="0x7f1dc4035370"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4035500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4035690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc4035820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc4033d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc4033d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc40320e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc4032270"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc4032400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc4032590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc4032720"/>
        <function-ref name="get" scoped="" ref="0x7f1dc40328b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc4032a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc40311b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4032d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc4032bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc4031020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4037850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4037850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4037bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4037d80"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4036020"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc40361b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4036340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f1dc40342d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc40342d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc4034650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc4035a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4035a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc4035df0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc4034020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1dc4031480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1dc4031480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4031800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4031990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1dc52a0020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1dc52a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1dc52a03a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1dc52a0530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1dc52a06c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1dc52a0850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1dc52a09e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1dc52a0b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1dc52a0d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1dc529f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc529f1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1dc529f340"/>
        <function-ref name="getData" scoped="" ref="0x7f1dc529f4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1dc529f660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1dc529f7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1dc529fa80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1dc529fc10"/>
        <function-ref name="getIV" scoped="" ref="0x7f1dc529fda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1dc529e020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1dc529e1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1dc529e340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1dc529e4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1dc529e660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1dc529e7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1dc529e980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1dc529eb10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1dc529eca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1dc529d220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1dc529d3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1dc529d540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1dc529d6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1dc529d860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1dc529d9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1dc529db80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1dc529dd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1dc529c020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1dc529c1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1dc529c340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1dc529c4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1dc529c660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1dc529c7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1dc529c980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1dc529cb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1dc529cca0"/>
        <function-ref name="setData" scoped="" ref="0x7f1dc529ce30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1dc529b020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1dc529b1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1dc529b340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1dc529b4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1dc529b660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1dc529b7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1dc529bd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1dc529a020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1dc529a1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1dc529a340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1dc529a4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1dc529a660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1dc529a7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1dc529a980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1dc529ab10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1dc529aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f1dc5290bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f1dc5290bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc528e020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc528e1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc528e340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc528e4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc528e660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc528e7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc528e980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc528eb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc528eca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc528ee30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc528d020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc528d1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc528d340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc528d5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc528d760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc528d8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc528da80"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc528dc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc528dda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc528c020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc528c1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc528c340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc528c4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc528c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc528c7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc528cb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc528cd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc528b020"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc528b1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc528b340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc528b4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc528b660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc528b7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc528b980"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc528bb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc528bca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc528be30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc528a020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc528a1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc528a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1dc5288e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1dc5288e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc52871e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5287370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5287500"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc52851b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5287820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc52879b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5287b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5287cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5287e60"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5286020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc52861b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5286340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc52864d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5286760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc52868f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5286a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5286c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5287690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5286da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc5285020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f1dc5299d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1dc5299d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1dc52960e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1dc5296270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1dc5296400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1dc5296590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1dc5296720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1dc52968b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1dc5296a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1dc5296bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc5296d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1dc5295020"/>
        <function-ref name="getData" scoped="" ref="0x7f1dc52951b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1dc5295340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1dc52954d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1dc5295760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1dc52958f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1dc5295a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1dc5295c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1dc5295da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1dc5294020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1dc52941b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1dc5294340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1dc52944d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1dc5294660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1dc52947f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1dc5294980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1dc5294d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1dc5293020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1dc52931b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1dc5293340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1dc52934d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1dc5293660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1dc52937f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1dc5293980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1dc5293b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1dc5293ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1dc5293e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1dc5292020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1dc52921b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1dc5292340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1dc52924d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1dc5292660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1dc52927f0"/>
        <function-ref name="setData" scoped="" ref="0x7f1dc5292980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1dc5292b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1dc5292ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1dc5292e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1dc5291020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1dc52911b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1dc5291340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1dc52918d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1dc5291a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1dc5291bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1dc5291d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1dc5290020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1dc52901b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1dc5290340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1dc52904d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1dc5290660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1dc52907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1dc528a700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1dc528a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc528aa80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc528ac10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc528ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5288a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc52891b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5289340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc52894d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5289660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc52897f0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5289980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5289b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc5289ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5289e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc5288120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc52882b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5288440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc52885d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5289020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5288760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc52888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1dc5174c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc5174c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5172210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1dc517eda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1dc517eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1dc5177b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc5177b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5176020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1dc5171670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc5171670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51719f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5171b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1dc516ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1dc516ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5169210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1dc5171e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1dc5171e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5170210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1dc515d2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc515d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc515d670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc515d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1dc51602f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc51602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5160670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5160800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1dc517c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc517c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1dc5166670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1dc5166670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51669f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5166b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1dc51612f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc51612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5161670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5161800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1dc5176c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1dc5176c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5175020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1dc5175c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5175c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5174020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1dc516b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc516b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1dc516ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1dc516ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516d210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1dc5170670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc5170670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51709f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5170b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc5180760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc5180760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc5180ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc5180c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc5180e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1dc517baa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc517baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1dc517a120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1dc517a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1dc5164a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc5164a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5164df0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5163020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1dc517a870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc517a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1dc5161ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc5161ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5161e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5160020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1dc517cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc517cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1dc5167e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1dc5167e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5166210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1dc5175480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc5175480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5175800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5175990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1dc5176480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc5176480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5176800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5176990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1dc517e750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc517e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1dc5168e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc5168e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5167210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1dc5169670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1dc5169670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51699f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5169b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1dc5167670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc5167670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51679f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5167b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1dc515fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc515fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc515fe50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc515d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1dc5160ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc5160ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5160e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc515f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1dc516d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1dc516d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1dc5169e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1dc5169e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5168210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1dc5162ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc5162ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5162e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1dc516f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc516f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1dc515dad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc515dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc515de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc515c020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc515c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc515c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc515c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1dc517e100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc517e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1dc5177370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1dc5177370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51776f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5177880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1dc5174480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc5174480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5174800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5174990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1dc516be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc516be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516a210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1dc5170e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc5170e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516f210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1dc516a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc516a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1dc5172670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc5172670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51729f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5172b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1dc517d450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1dc517d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1dc5172e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc5172e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5171210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc5181a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc5181a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5181e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5180020"/>
        <function-ref name="request" scoped="" ref="0x7f1dc51801b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5180340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc51804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1dc5178020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc5178020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1dc5178cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1dc5178cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51770a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1dc51622f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1dc51622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5162670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5162800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1dc5163ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5163ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5163e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5162020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1dc517b450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc517b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1dc51632f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc51632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5163670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5163800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1dc515f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1dc515f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc515f670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc515f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1dc516de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc516de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516b210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1dc5168670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1dc5168670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51689f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5168b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1dc517daa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1dc517daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1dc517c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc517c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc517caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1dc516fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc516fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516e210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1dc5178670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1dc5178670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51789f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1dc516e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1dc516e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc516e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc516eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1dc5166e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1dc5166e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5164610"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51647a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1dc515c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc515c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc515cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc515ccb0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc515ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc515b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc515b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1dc5147c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc5147c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5146210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1dc5152da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1dc5152da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5151180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1dc514bb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc514bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5149020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1dc5145670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc5145670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51459f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5145b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1dc513ee50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1dc513ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513d210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1dc5145e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1dc5145e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5144210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1dc51312f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc51312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5131670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5131800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1dc51332f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc51332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5133670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5133800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1dc514f120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc514f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1dc5139670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1dc5139670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51399f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5139b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1dc51342f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc51342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5134670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5134800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1dc5149c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1dc5149c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5148020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1dc5148c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5148c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5147020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1dc513f670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc513f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1dc5141e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1dc5141e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5140210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1dc5144670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc5144670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51449f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5144b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc5153760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc5153760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc5153ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc5153c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc5153e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1dc514eaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc514eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1dc514d120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1dc514d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1dc5138a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc5138a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5138df0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5137020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1dc514d870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc514d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1dc5134ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc5134ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5134e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5133020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1dc514fdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc514fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1dc513ae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1dc513ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5139210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1dc5148480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc5148480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5148800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5148990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1dc5149480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc5149480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5149800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5149990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1dc5152750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc5152750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5152ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1dc513be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc513be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513a210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1dc513d670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1dc513d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1dc513a670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc513a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1dc5132ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc5132ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5132e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5131020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1dc5133ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc5133ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5133e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5132020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1dc5140670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1dc5140670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51409f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5140b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1dc513de50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1dc513de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513b210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1dc5136ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc5136ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5136e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5134020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1dc5142670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc5142670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51429f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5142b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1dc5131ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc5131ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc5131e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc5130020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51301b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc5130340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc51304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1dc5152100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc5152100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5152480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1dc514b370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1dc514b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc514b6f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc514b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1dc5147480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc5147480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5147800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5147990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1dc513fe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc513fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513e210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1dc5144e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc5144e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5142210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1dc513e670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc513e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1dc5146670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc5146670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51469f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5146b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1dc5151450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1dc5151450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc51517d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1dc5146e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc5146e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5145210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc51549e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc51549e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc5154d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5153020"/>
        <function-ref name="request" scoped="" ref="0x7f1dc51531b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5153340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc51534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1dc514c020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc514c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1dc514ccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1dc514ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1dc51362f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1dc51362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5136670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5136800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1dc5137ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc5137ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5137e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5136020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1dc514e450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc514e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1dc51372f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc51372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5137670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5137800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1dc51322f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1dc51322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5132670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5132800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1dc5140e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc5140e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513f210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1dc513b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1dc513b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc513b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc513bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1dc5151aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1dc5151aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5151e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1dc514f770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc514f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1dc5142e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc5142e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5141210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1dc514c670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1dc514c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc514c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1dc5141670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1dc5141670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc51419f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5141b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1dc5139e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1dc5139e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5138610"/>
        <function-ref name="write" scoped="" ref="0x7f1dc51387a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1dc51307a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc51307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc5130b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc5130cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5130e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc512f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc512f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f1dc5128b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc5128b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1dc5125020"/>
        <function-ref name="changed" scoped="" ref="0x7f1dc51251b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1dc5125340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1dc51254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1dc5127d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc5127d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1dc51100e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1dc510c310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1dc510c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1dc510c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f1dc5109880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1dc5109880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc5109c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f1dc50fe020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1dc50fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f1dc50f5bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1dc50f5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50f8020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc50f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f1dc50f8530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f1dc50f8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc50f88b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc50f8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f1dc50f9140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1dc50f9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50f94c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f1dc50fdc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1dc50fdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50e4020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc50e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f1dc50e4540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f1dc50e4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc50e48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc50e4a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc50e4be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc50e4d70"/>
        <function-ref name="get" scoped="" ref="0x7f1dc50e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc50e31b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc50e3340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc50e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f1dc50db950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50db950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1dc50de780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f1dc50e0150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1dc50e0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50e04d0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc50e0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f1dc50e09f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f1dc50e09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc50e0d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc50df020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc50df1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc50df340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc50df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc50df660"/>
        <function-ref name="set" scoped="" ref="0x7f1dc50df7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc50df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1dc50e2ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50e2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1dc50baae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1dc50b8a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1dc50b8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1dc50a98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1dc50a8020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc50a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc50a8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc50a7800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc50a7340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc50a7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f1dc50a2530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1dc50a2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc50a13d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc50a1d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc50a1890"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc50a0260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1dc509b020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc509b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc509b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc509b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc509b6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc509b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc509b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc509bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc509bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc509a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc509a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc509a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc509a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc509fe50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc509fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3d460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1dc5f3d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc509dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc509c670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc509c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc509cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f1dc50e5590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f1dc50e5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc50e5910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc50e5aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc50e5c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc50e5dc0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5095020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc50951b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5095340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc50954d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1dc5092c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1dc5092c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5091020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc50911b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc5091340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc508f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5091660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc50917f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc5091980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc5091b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5091ca0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5091e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc5090020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc50901b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc5090340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc50905d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc5090760"/>
        <function-ref name="set" scoped="" ref="0x7f1dc50908f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc5090a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc5090c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc50914d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc5090da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1dc50949e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1dc50949e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5094d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5092020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc50921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc5092340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc50924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc5092660"/>
        <function-ref name="set" scoped="" ref="0x7f1dc50927f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5092980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc508a1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc508a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc508a530"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc508a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1dc507bcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc507bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc507a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc507a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc507a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc507a550"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc507a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc507a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1dc5077990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1dc5077990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1dc5077d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f1dc507b020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1dc507b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc507b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc507b530"/>
        <function-ref name="modify" scoped="" ref="0x7f1dc507b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc507b850"/>
        <function-ref name="resend" scoped="" ref="0x7f1dc507b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc507e6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc507e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc507ea40"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc507ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1dc5079150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1dc5079150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1dc50794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1dc506d970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc506d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc506dcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc506de80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc506c030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc506c1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc506c350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc506c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1dc5063950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1dc5063950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc5061020"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc5061750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc5062780"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5061e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1dc504c020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc504c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc504c3a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc504c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1dc504c890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc504c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc504cc10"/>
        <function-ref name="write" scoped="" ref="0x7f1dc504cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1dc506c900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1dc506c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1dc506cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f1dc504f530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc504f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc504f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f1dc505e880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1dc505e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1dc505ec00"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc505ed90"/>
        <function-ref name="captured" scoped="" ref="0x7f1dc505d020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1dc505d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f1dc506bae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f1dc506bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc5066390"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc5067360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc5067ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc5067820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc5066850"/>
        <function-ref name="start" scoped="" ref="0x7f1dc5068970"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc5068e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1dc5066d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc5066d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc50640a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc5064230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc50643c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc5064550"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc50646e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc5064870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f1dc5051550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc5051550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50518d0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5051a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1dc5051e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc5051e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc50501c0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5050350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f1dc5045d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc5045d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc50490e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1dc5049270"/>
        <function-ref name="sfd" scoped="" ref="0x7f1dc5049400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc506fbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc506fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc506d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc506d1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f1dc506d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc506d4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f1dc506d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f1dc5053d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc5053d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc50520e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc5052270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc5052400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f1dc504fc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc504fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc504e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1dc5056820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1dc5056820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5056ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc5056d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5055020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc50551b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5055340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc50554d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5055660"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc50557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc5070c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc5070c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc506f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc5064bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc5064bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc5063020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc50631b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc5063340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1dc5058be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc5058be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc505e020"/>
        <function-ref name="isSet" scoped="" ref="0x7f1dc505e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc505e340"/>
        <function-ref name="set" scoped="" ref="0x7f1dc505e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1dc504e3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc504e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc504e960"/>
        <function-ref name="write" scoped="" ref="0x7f1dc504eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1dc5053020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1dc5053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc50533a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc5053530"/>
        <function-ref name="request" scoped="" ref="0x7f1dc50536c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc5053850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc50539e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f1dc505d500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1dc505d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc505d980"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc505db10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc505dca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc505de30"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5056020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc50561b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5056340"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc50564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1dc504b130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc504b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc504b4b0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc504b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f1dc504b9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc504b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc504bd40"/>
        <function-ref name="write" scoped="" ref="0x7f1dc504a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1dc50506d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc50506d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc5050a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f1dc5055b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1dc5055b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc5054020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc50541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc5054340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc50544d0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5054660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc50547f0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5054980"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc5054b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc50496c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc50496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc5049a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc5049bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc5049d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc5048020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc50481b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc5048340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc50484d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc5048b10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc5048660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc50487f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc5048980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1dc504d5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc504d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc504d960"/>
        <function-ref name="write" scoped="" ref="0x7f1dc504daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc506f320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc506f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc506f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc506f830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f1dc5052780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc5052780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc5052b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc5052c90"/>
        <function-ref name="write" scoped="" ref="0x7f1dc5052e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc5051020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc50511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f1dc5050de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1dc5050de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc504f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f1dc504ee80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1dc504ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc504d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1dc506b0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1dc506b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1dc506b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1dc4fabc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc4fabc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4faa210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4faa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1dc4fb5020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1dc4fb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1dc4fafc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc4fafc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fad020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1dc4fa9670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4fa9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa99f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1dc4fa2e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1dc4fa2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa1210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1dc4fa9e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1dc4fa9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa8210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1dc4f952f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4f952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f95670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f95800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1dc4f972f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc4f972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f97670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f97800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1dc4fb3370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc4fb3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1dc4f9d670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1dc4f9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1dc4f982f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc4f982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f98670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1dc4fadc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1dc4fadc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fac020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1dc4facc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc4facc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fab020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1dc4fa3670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc4fa3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa39f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1dc4fa5e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1dc4fa5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa4210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1dc4fa8670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc4fa8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa89f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc4fb78f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc4fb78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc4fb7c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc4fb7e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc4fb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1dc4fb2d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc4fb2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1dc4fb1370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1dc4fb1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1dc4f9ca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc4f9ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1dc4fb1ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc4fb1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1dc4f98ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4f98ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f98e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1dc4fb2060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc4fb2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb23e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1dc4f9ee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1dc4f9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9d210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1dc4fac480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc4fac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fac800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fac990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1dc4fad480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc4fad480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fad800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1dc4fb6940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc4fb6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1dc4f9fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc4f9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9e210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1dc4fa1670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1dc4fa1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa19f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1dc4f9e670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc4f9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1dc4f96ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc4f96ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f96e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1dc4f97ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc4f97ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f97e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1dc4fa4670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1dc4fa4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa49f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1dc4fa1e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1dc4fa1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9f210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1dc4f9aad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc4f9aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9ae50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1dc4fa6670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc4fa6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa69f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1dc4f95ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4f95ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc4f95e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc4f94020"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f941b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc4f94340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc4f944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1dc4fb62f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc4fb62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1dc4faf490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1dc4faf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4faf810"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4faf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1dc4fab480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc4fab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fab800"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1dc4fa3e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc4fa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa2210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1dc4fa8e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc4fa8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa6210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1dc4fa2670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc4fa2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa29f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1dc4faa670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc4faa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4faa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4faab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1dc4fb5670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1dc4fb5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1dc4faae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4faae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa9210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4fb8c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4fb8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4fb7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4fb71b0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4fb7340"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4fb74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4fb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1dc4fb0160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4fb0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1dc4fb0e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1dc4fb0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4faf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1dc4f9a2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1dc4f9a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9a670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1dc4f9bad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc4f9bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9be50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1dc4fb26b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4fb26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb2a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1dc4f9b2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc4f9b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9b670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1dc4f962f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1dc4f962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f96670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f96800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1dc4fa4e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc4fa4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa3210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1dc4f9f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1dc4f9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1dc4fb5cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1dc4fb5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1dc4fb39c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc4fb39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1dc4fa6e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc4fa6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa5210"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1dc4fb07b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1dc4fb07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4fb0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1dc4fa5670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1dc4fa5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4fa59f0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4fa5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1dc4f9de50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1dc4f9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f9c610"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f9c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1dc4f947a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc4f947a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc4f94b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc4f94cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f94e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc4f93020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc4f931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1dc4f88df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc4f88df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4f851c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1dc4f85350"/>
        <function-ref name="sfd" scoped="" ref="0x7f1dc4f854e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4f857c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4f857c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4f85b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1dc4f83020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1dc4f83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1dc4f833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc4f885c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc4f885c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc4f88940"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4f88ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f1dc4f7c380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1dc4f7c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc4f7c700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc4f7c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc4f7ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc4f7cbb0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4f7cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc4f7b020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4f7b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc4f7b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1dc4f75b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc4f75b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1dc4f74020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1dc4f741b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1dc4f74340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1dc4f744d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1dc4f74660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1dc4f747f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1dc4f74980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1dc4f74b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1dc4f74ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1dc4f74e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1dc4f73020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1dc4f731b0"/>
        <function-ref name="sync" scoped="" ref="0x7f1dc4f73340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1dc4f735d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1dc4f73760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f1dc4f5e9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f1dc4f5e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4f5ed50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4f5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1dc4f73d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1dc4f73d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc4f70330"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc4f70a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc4f72ba0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4f6f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f1dc4f7b6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1dc4f7b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc4f7ba30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc4f7bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc4f7bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc4f7a020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4f7a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc4f7a340"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4f7a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc4f7a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1dc4f6ecb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4f6ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f6d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f6d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1dc4f6d590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc4f6d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f6d910"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f6daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f1dc4f6b6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4f6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f6ba50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f6bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1dc4f76330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f76330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc4f766b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc4f76840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc4f769d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc4f76b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc4f76cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc4f76e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1dc4f7f550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1dc4f7f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4f7f8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1dc4f7fa60"/>
        <function-ref name="sfd" scoped="" ref="0x7f1dc4f7fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f1dc4f773a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1dc4f773a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4f77720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1dc4f7d020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1dc4f7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc4f7d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc4f7d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc4f7d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc4f7d850"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4f7d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc4f7db70"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4f7dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc4f7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f1dc4f6a020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4f6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f6a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f6a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4f80620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4f80620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4f809a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc4f751e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4f751e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4f75560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4f756f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4f75880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4f7e020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4f7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4f7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1dc4f796e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1dc4f796e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4f79a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4f79bf0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4f79d80"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4f78020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4f781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1dc4f6de00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc4f6de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f6b1c0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f6b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f1dc4f78530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4f78530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc4f788b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc4f78a40"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f78bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc4f78d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc4f77020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1dc4f6a8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc4f6a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4f6ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1dc4f7e7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1dc4f7e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1dc4f7eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc4f69150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc4f69150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc4f694d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc4f69660"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc4f697f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc4f69980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc4f69b10"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4f69ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc4f69e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc4f684d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4f68020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc4f681b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc4f68340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1dc4f6e3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4f6e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4f6e760"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4f6e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f1dc4f6fb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4f6fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4f6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f1dc4f7aa50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1dc4f7aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc4f7add0"/>
        <function-ref name="disable" scoped="" ref="0x7f1dc4f79020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1dc4f791b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1dc4f79340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f1dc4f77ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4f77ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4f76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc4f80ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc4f80ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc4f7f0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4f7f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1dc4efda70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc4efda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1dc4efddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1dc4f01670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4f01670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc4f019f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc4f01b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc4f01d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc4efe020"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc4efe1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc4efe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1dc4efc550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4efc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc4efbb00"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc4ef92a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc4efb3d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4ef99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1dc4efd0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4efd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4efd440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4efd5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4efd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1dc4ef4480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc4ef4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4ef4800"/>
        <function-ref name="isSet" scoped="" ref="0x7f1dc4ef4990"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4ef4b20"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4ef4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1dc4ef8660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc4ef8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc4ef7ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc4ef5460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc4ef75b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4ef5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1dc4efe6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1dc4efe6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc4efea60"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc4efebf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc4efed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1dc4eee020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1dc4eee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1dc4eee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1dc4ef3d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4ef3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc4ef00e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc4ef0270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc4ef0400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc4ef0590"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc4ef0720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc4ef08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1dc4ee54a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4ee54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4ee5820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4ee59b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4ee5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4ee5cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4ee5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1dc4eeea80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1dc4eeea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc4eeb020"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc4eeb750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc4eec8d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4eebe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1dc4eef640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4eef640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4eef9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4eefb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4eefce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1dc4ee68b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1dc4ee68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4ee6c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f1dc4ee6dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4ee5020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4ee51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f1dc4ee0820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1dc4ee0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4ee24c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1dc4ee2b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1dc4ee2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4ee17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1dc4eeaaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1dc4eeaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1dc4ee70d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1dc4ee7800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1dc4ee8970"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4ee6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1dc4ef0c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1dc4ef0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc4eef020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc4eef1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc4eef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1dc4e90790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4e90790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4e863f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1dc4e86a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc4e86a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4e85890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4e84260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4e85d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc4e84720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1dc4e7f1d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4e7f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4e7b630"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4e7dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc4e7c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc4e7c550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc4e7a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc4e7bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4e7c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc4e7fdc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc4e7b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc4e7d2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4e7d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1dc4e7a610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4e7a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4e783d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4e803a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4e803a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4e80720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc4e4b870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc4e4b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4e47090"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4e48090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc4e48a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4e48550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc4e47550"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4e4a6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4e4abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4e4b020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4e4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4e4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc3f02260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc3f02260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc3f00b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3f01a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc3f004e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc3f00020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc3eff020"/>
        <function-ref name="start" scoped="" ref="0x7f1dc3f01090"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3f015a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc3f039d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc3f039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc3f03d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1dc3eeaa80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc3eeaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc3eeae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc3ee9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc3ee91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc3ee9340"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3ee94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1dc3eec020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc3eec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc3eec3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc3eec530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc3eec6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc3eec850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc3eec9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc3eecb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc3eecd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc3eeb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc3eeb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc3eeb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc3eeb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1dc3eeb760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc3eeb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc3eebae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc3eebc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc3eebe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc3eea020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc3eea1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc3eea340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc3eea4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc3eea660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc3eea7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1dc3ee0760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1dc3ee0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1dc3ee0ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1dc3ee0c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1dc3ee0e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1dc3edf020"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3edf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1dc3ee3dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1dc3ee3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc3ee2180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1dc3ee2310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc3ee24a0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc3ee2630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc3ee27c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc3ee2950"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc3ee2ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc3ee2c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc3ee2e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f1dc3ee1020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1dc3ee11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc3ee7bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc3ee7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc3ee34e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3ee44e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc3ee4e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc3ee49a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc3ee39a0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc3ee5a80"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3ee4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc3ee7360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc3ee7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc3ee76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1dc3ee1440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1dc3ee1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1dc3ee17c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1dc3ee1950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1dc3ee1ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1dc3ee1c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1dc3ee1e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1dc3ee0020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1dc3ee01b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1dc3ee0340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1dc3ee04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc4e6ab70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc4e6ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4e679b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4e66360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4e67e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc4e66820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1dc4e5fb90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1dc4e5fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4e5e9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4e5d4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4e5d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc4e5d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc4e62610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc4e62610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4e615b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4e5f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4e61a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc4e5f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1dc3efc5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc3efc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc3efae50"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3efbe00"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc3efa800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc3efa340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc3ef9340"/>
        <function-ref name="start" scoped="" ref="0x7f1dc3efb430"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3efb940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1dc3ef6d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1dc3ef6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc3ef3670"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3ef4550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc3ef3020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc3ef4a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc3ef3b30"/>
        <function-ref name="start" scoped="" ref="0x7f1dc3ef5b60"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3ef4090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1dc3ef99b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc3ef99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc3ef87e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc3ef61b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc3ef8ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc3ef6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1dc4e159c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f1dc4e159c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4e15d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4e13020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1dc4e18850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1dc4e18850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4e15090"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4e16090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1dc4e16a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4e16550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1dc4e15550"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4e176a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4e17bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc4e1e2f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc4e1e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4e1a870"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4e1ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc4e1bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc4e1b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc4e181e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc4e1acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4e1b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc4e1c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc4e1a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc4e1c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4e1c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1dc4d96020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1dc4d96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4d92630"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4d94a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc4d93920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc4d934a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc4d91020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc4d92ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4d93020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc4d96c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc4d92020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc4d94110"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4d945e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f1dc4d91450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f1dc4d91450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f1dc4d917d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc4d9d8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc4d9d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4d97020"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4d9a4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc4d99300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc4d9ae00"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc4d97960"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc4d974c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4d9a960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc4d9c560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc4d99930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc4d9ca50"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4d9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1dc3e84020" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1dc3e84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc3e843a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc3e84530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1dc3e8b180" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1dc3e8b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc3e88630"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3e8abf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc3e89990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc3e89510"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc3e86020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc3e88ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc3e89090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc3e8bd70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc3e88020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc3e8a2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3e8a770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f1dc3e858b0" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f1dc3e858b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f1dc3e85c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f1dc3e86410" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1dc3e86410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f1dc3e854d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f1dc3e85660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f1dc3e86ab0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1dc3e86c40"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f1dc3e86dd0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f1dc3e85020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f1dc3e851b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1dc3e85340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f1dc3e86790"/>
        <function-ref name="node_id" scoped="" ref="0x7f1dc3e86920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc3e93bc0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc3e93bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc3e8d220"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc3e90740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc3e8e570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc3e8e0d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc3e8db60"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc3e8d6c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc3e90be0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc3e91860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc3e8eba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc3e91d50"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3e902a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1dc4d8ea20" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1dc4d8ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4d8d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1dc4d8dd20" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc4d8dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4d8cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4d8b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4d8b090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc4d8ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc4d84ce0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc4d84ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4d6f220"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4d727c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc4d71590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc4d71110"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc4d6fb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc4d6f6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4d72c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc4d73940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc4d71ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc4d73e10"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4d72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1dc4d7b610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1dc4d7b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc4d78c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc4d791e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc4d78020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc4d79ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc4d76590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc4d76110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc4d79660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc4d7a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc4d78630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc4d7a860"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4d7ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1dc4d5e2f0" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1dc4d5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5e870"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1dc4d69670" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1dc4d69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d699f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1dc4d612f0" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1dc4d612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d61670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d61800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1dc4d5dce0" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1dc4d5dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1dc4d54500" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1dc4d54500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d54880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d54a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1dc4d5c500" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1dc4d5c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5c880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1dc4d49900" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1dc4d49900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d49c80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d49e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1dc4d4b900" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1dc4d4b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4bc80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1dc4d679c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1dc4d679c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d67d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1dc4d51ce0" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1dc4d51ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d500a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d50230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1dc4d4c900" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1dc4d4c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4cc80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4ce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1dc4d602f0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1dc4d602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d60670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d60800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1dc4d5f2f0" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1dc4d5f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5f670"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1dc4d57ce0" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1dc4d57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d560a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d56230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1dc4d58500" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1dc4d58500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d58880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d58a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1dc4d5cce0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1dc4d5cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1dc4d6a020" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1dc4d6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1dc4d6a3a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1dc4d6a530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1dc4d6a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1dc4d65370" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1dc4d65370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d656f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1dc4d659c0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1dc4d659c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d65e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1dc4d4f120" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1dc4d4f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4f4a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1dc4d64160" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1dc4d64160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d644e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1dc4d4b120" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1dc4d4b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4b4a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1dc4d666b0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1dc4d666b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d66a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1dc4d51500" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1dc4d51500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d51880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d51a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1dc4d60ad0" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1dc4d60ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d60e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1dc4d61ad0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1dc4d61ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d61e50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1dc4d69020" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1dc4d69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1dc4d52500" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1dc4d52500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d52880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d52a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1dc4d54ce0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1dc4d54ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d530a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d53230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1dc4d52ce0" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1dc4d52ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d510a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d51230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1dc4d49120" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1dc4d49120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d494a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d49630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1dc4d4a120" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1dc4d4a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4a4a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1dc4d58ce0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1dc4d58ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d570a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d57230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1dc4d53500" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1dc4d53500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d53880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d53a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1dc4d4c120" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1dc4d4c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4c4a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1dc4d5ace0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1dc4d5ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d590a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d59230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1dc4d48120" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1dc4d48120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc4d484a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc4d48630"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d487c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc4d48950"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc4d48ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1dc4d6a990" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1dc4d6a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d6ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1dc4d63ae0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1dc4d63ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d63e60"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1dc4d5fad0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1dc4d5fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5fe50"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1dc4d56500" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1dc4d56500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d56880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d56a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1dc4d5a500" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1dc4d5a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5a880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1dc4d56ce0" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1dc4d56ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d540a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d54230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1dc4d5ecd0" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1dc4d5ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1dc4d69cc0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1dc4d69cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d670a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1dc4d5d500" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1dc4d5d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d5d880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d5da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4d6b250" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4d6b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4d6b5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4d6b760"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4d6b8f0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4d6ba80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4d6bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1dc4d647b0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1dc4d647b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d64b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1dc4d63490" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1dc4d63490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d63810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1dc4d4e900" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1dc4d4e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4ec80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1dc4d4e120" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1dc4d4e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4e4a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1dc4d66d00" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1dc4d66d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d650a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1dc4d4f900" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1dc4d4f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4fc80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1dc4d4a900" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1dc4d4a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d4ac80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d4ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1dc4d57500" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1dc4d57500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d57880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d57a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1dc4d53ce0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1dc4d53ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d520a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d52230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1dc4d67370" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1dc4d67370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d676f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1dc4d66060" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1dc4d66060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d663e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1dc4d59500" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1dc4d59500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d59880"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d59a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1dc4d64e00" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1dc4d64e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1dc4d631c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1dc4d59ce0" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1dc4d59ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d580a0"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d58230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1dc4d50500" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1dc4d50500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1dc4d50c80"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d50e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1dc4d48db0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1dc4d48db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1dc4d46180"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1dc4d46310"/>
        <function-ref name="write" scoped="" ref="0x7f1dc4d464a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1dc4d46630"/>
        <function-ref name="readDone" scoped="" ref="0x7f1dc4d467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1dc4d1da20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1dc4d1da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1dc4d1dda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1dc4d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1dc4d1b920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1dc4d1b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4d1d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4d21990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4d21990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4d21d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1dc4d16a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1dc4d16a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1dc4d16da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1dc4d15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1dc4d17940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1dc4d17940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4d16560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4d17080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4d17080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4d17400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1dc4d1faa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc4d1faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc4d1fe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc4d18020"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc4d181b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc4d18340"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc4d184d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc4d18660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4cfb020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4cfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4cfb3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4cfb530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4cfb6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4cfb850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4cfb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc4cfc220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc4cfc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4cfc5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4cfc730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4cfc8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4cfca50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4cfcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4cf7e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4cf7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4cf6210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4cf63a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4cf6530"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4cf66c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4cf6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc4cfaa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc4cfaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4cfad90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4cf7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4cf71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4cf7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4cf74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1dc4cf48f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1dc4cf48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1dc4cf4c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f1dc4cf4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4cf7750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4cf7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4cf7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc4cf3170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4cf3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4cf34f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4cf3680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4cf3810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f1dc4cf6ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc4cf6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc4cf6e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc4cf4020"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc4cf41b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc4cf4340"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc4cf44d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc4cf4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1dc4cf8690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc4cf8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc4cf8a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc4cf8ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc4cf8d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc4ce2020"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc4ce21b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc4ce2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4cdc950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4cdc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cdccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4cdfaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4cdfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cdfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1dc4cdc200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1dc4cdc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cdc580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4cd73f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4cd73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cd7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4cd8b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4cd8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4cd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4cdbe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4cdbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cd81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc4cd7a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4cd7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4cd7df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4cd6020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4cd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1dc4cd8570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1dc4cd8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cd88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4ca8020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4ca8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4ca83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4ca86b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4ca86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4ca8a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4ca8bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4ca8d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4ca7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4ca71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc4cad8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc4cad8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4cadc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4caddf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4cac020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4cac1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4cac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1dc4cacc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc4cacc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4caa0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4caa230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4caa3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4caa550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4caa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4cac5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4cac5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4cac960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4caebe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4caebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4cad020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4cad1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4cad340"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4cad4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4cad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1dc4caaa50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc4caaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4caadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1dc4ca9170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1dc4ca9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4ca94f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4ca9680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4ca9810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4ca99a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4ca9b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4c9fd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c9fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c9e180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c9e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c9e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c9e630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c9e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4c9eb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c9eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4c9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f1dc4c6fdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f1dc4c6fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4c6e180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4c6e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1dc4c9c2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4c9c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc4c9c670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc4c9c800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc4c9c990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc4c9cb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc4c9ccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc4c9ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1dc4ca1a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1dc4ca1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4ca1da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4ca0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4ca01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4ca0340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4ca04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1dc4c9bb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1dc4c9bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1dc4c9a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1dc4c9a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1dc4c9a340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1dc4c9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc4c9b170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4c9b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c9b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4c9b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4c9b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1dc4ca1370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1dc4ca1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4ca16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4ca37b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4ca37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4ca3b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4ca3cc0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4ca3e50"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4ca2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4ca21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1dc4ca24d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1dc4ca24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4ca2850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4ca29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4ca2b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4ca2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4ca1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1dc4ca0840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1dc4ca0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4ca0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1dc4c9f020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1dc4c9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4c9f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4c9f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c9f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c9f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4c9f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4c4fdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4c4fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4c4e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1dc4c4e410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1dc4c4e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1dc4c4e790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1dc4c4e920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1dc4c4eab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1dc4c4ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc4c43b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4c43b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc4c42020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc4c421b0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4c42340"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4c424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4c41860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c41860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c41be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c41d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c40020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c401b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c40340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4c40690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c40690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4c40a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc4c47ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc4c47ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c440a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c44230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c443c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c44550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c446e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1dc4c43080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc4c43080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1dc4c43400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1dc4c43590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1dc4c43720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1dc4c438b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f1dc4c42800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f1dc4c42800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc4c42b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc4c42d10"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc4c41020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc4c411b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc4c41340"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc4c414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1dc4c40d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1dc4c40d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc4c3e180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc4c3e310"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4c3e4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4c3e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4c44980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4c44980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4c44d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1dc4c3b2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1dc4c3b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1dc4c3b650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1dc4c3b7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1dc4c3b970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1dc4c3bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1dc4c3d580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1dc4c3d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1dc4c3d900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1dc4c3da90"/>
        <function-ref name="isState" scoped="" ref="0x7f1dc4c3dc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1dc4c3ddb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1dc4c3c020"/>
        <function-ref name="forceState" scoped="" ref="0x7f1dc4c3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4c2ed70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c2ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c2d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c2d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c2d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c2d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c2d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc4c31350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc4c31350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c316d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c31860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c319f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c31b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c31d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1dc4c2e020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1dc4c2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1dc4c2e3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1dc4c2e530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1dc4c2e6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1dc4c2e850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1dc4c2e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1dc4c291c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc4c291c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc4c29540"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc4c296d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc4c29860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1dc4c2c410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1dc4c2c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1dc4c2c790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1dc4c2c920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1dc4c2cab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1dc4c2cc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1dc4c2cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4c09690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4c09690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4c09a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4c0b860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4c0b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c0bbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c0bd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c09020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c091b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c09340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1dc4c07610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1dc4c07610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1dc4c07990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1dc4c07b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1dc4c07cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1dc4c07e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1dc4c06020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1dc4c061b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1dc4c06340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1dc4c064d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1dc4c06660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1dc4c067f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1dc4c06980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1dc4c06b10"/>
        <function-ref name="sync" scoped="" ref="0x7f1dc4c06ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1dc4c05020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1dc4c051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1dc4c0c8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1dc4c0c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc4c0cc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc4c0cdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc4c0b020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc4c0b1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc4c0b340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc4c0b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1dc4c0dce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1dc4c0dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1dc4c0c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1dc4c041f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1dc4c041f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1dc4c04570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1dc4c04700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1dc4c04890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1dc4c04a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f1dc4c04bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1dc4c04d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc4c0ea80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4c0ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4c0ee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4c0d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c0d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c0d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4c0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc4c11020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc4c11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4c113a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c11530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4c116c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4c11850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4c119e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1dc4c10df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1dc4c10df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4c0f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1dc4c09ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1dc4c09ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1dc4c080a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1dc4c08230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1dc4c083c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1dc4c08550"/>
        <function-ref name="getPower" scoped="" ref="0x7f1dc4c086e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1dc4c08870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1dc4c054d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1dc4c054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1dc4c05950"/>
        <function-ref name="changed" scoped="" ref="0x7f1dc4c05ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1dc4c05c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1dc4c05e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1dc4c08b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1dc4c08b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4c07020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1dc4c071b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1dc4c07340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4c10210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4c10210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4c10590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc4c03d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc4c03d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc4c020e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc4c02270"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc4c02400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc4c02590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc4c02720"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4c028b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc4c02a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc4c011b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4c02bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc4c02d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc4c01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc4c0f470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4c0f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc4c0f7f0"/>
        <function-ref name="source" scoped="" ref="0x7f1dc4c0f980"/>
        <function-ref name="address" scoped="" ref="0x7f1dc4c0fb10"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc4c0fca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc4c0fe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc4c0e020"/>
        <function-ref name="type" scoped="" ref="0x7f1dc4c0e1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc4c0e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc4c0e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc4c0e660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc4c0e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f1dc4c030f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f1dc4c030f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4c03470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4c03600"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4c03790"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4c03920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4c03ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc4b795c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b795c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc4b79940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc4b79ad0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4b79c60"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4b79df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc4b76600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc4b76600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4b76980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4b76b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4b76ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4b76e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4b75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc4b75e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4b75e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4b741c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4b74350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4b744e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4b74670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4b74800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4b75800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4b75800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4b75b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc4b72b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc4b72b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc4b71020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc4b711b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc4b71340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc4b714d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc4b71660"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4b717f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc4b71980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc4b70020"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4b71b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc4b71ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc4b71e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1dc4b721a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc4b721a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc4b72520"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc4b726b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc4b72840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc4b74ab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4b74ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc4b74e30"/>
        <function-ref name="source" scoped="" ref="0x7f1dc4b73020"/>
        <function-ref name="address" scoped="" ref="0x7f1dc4b731b0"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc4b73340"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc4b734d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc4b73660"/>
        <function-ref name="type" scoped="" ref="0x7f1dc4b737f0"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc4b73980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc4b73b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc4b73ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc4b73e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1dc4b13120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1dc4b13120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4b134a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4b13630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4b137c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4b13950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4b13ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1dc4b13d70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1dc4b13d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4b12180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc4b17110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc4b17110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4b174b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4b17640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4b177d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4b17960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4b17af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc4b15a40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4b15a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4b15dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4b14020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4b141b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4b14340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4b144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4b17e70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4b17e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4b16240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1dc4b14720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1dc4b14720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc4b14aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc4b14c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc4b14dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc4b16490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4b16490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc4b16810"/>
        <function-ref name="source" scoped="" ref="0x7f1dc4b169a0"/>
        <function-ref name="address" scoped="" ref="0x7f1dc4b16b30"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc4b16cc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc4b16e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc4b15020"/>
        <function-ref name="type" scoped="" ref="0x7f1dc4b151b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc4b15340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc4b154d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc4b15660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc4b157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc4b0e8d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b0e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc4b0ec50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc4b0ede0"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4b0d020"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4b0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc4b0c480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc4b0c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1dc5fc2960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4b0c800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4b0c990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4b0cb20"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4b0ccb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4b0ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4b0e280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4b0e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4b0e600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc4b0d940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc4b0d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1dc5fc2960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc4b0dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc4b09dc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc4b09dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc4b04180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc4b04310"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc4b044a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc4b04630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc4b047c0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4b04950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc4b04ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc4b031b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4b04c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc4b04e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc4b03020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f1dc4b094a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1dc4b094a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1dc5fc2960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1dc4b09820"/>
        <function-ref name="offset" scoped="" ref="0x7f1dc4b099b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1dc4b09b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1dc4b002f0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1dc4b002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1dc4b00670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1dc4b00800"/>
        <function-ref name="start" scoped="" ref="0x7f1dc4b00990"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4b00b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f1dc4a99e40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f1dc4a99e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4a981e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4a98370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1dc4aef060" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1dc4aef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc4aef3e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4aef570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f1dc4ad1d10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f1dc4ad1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4acf0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4acf270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc4b03c70" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc4b03c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc4b00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f1dc4aecc50" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f1dc4aecc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f1dc4aee020"/>
        <function-ref name="flush" scoped="" ref="0x7f1dc4aee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f1dc4a9c400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f1dc4a9c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4a9c780"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4a9c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f1dc4af08e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1dc4af08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f1dc4af0c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f1dc4af0df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f1dc4afd020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f1dc4afd1b0"/>
        <function-ref name="putData" scoped="" ref="0x7f1dc4afd340"/>
        <function-ref name="putDone" scoped="" ref="0x7f1dc4afd4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f1dc4afd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc4afd8e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc4afd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc4afdc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc4afddf0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc4af5020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc4af51b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc4af5340"/>
        <function-ref name="get" scoped="" ref="0x7f1dc4af54d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc4af5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc4af5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc4af57f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc4af5980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc4af5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f1dc4a950c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f1dc4a950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4a95440"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4a955d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f1dc4afa130" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f1dc4afa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f1dc4afa4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f1dc4afa640"/>
        <function-ref name="startSend" scoped="" ref="0x7f1dc4afa7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f1dc4afa960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f1dc4af65c0" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1dc4af65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f1dc4af6940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f1dc4af6ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f1dc4af6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f1dc49cbc50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f1dc49cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc49ca020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc49ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc49cf830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc49cf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1dc5fc2960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc49cfbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc49cfd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc49ce020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc49ce1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc49ce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f1dc49ca480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f1dc49ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc49ca800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc49ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc49cf110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc49cf110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1dc5fc2960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc49cf4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f1dc49ce760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f1dc49ce760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1dc5fc2960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1dc49ceb00"/>
        <function-ref name="offset" scoped="" ref="0x7f1dc49cec90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1dc49cee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc49cc590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc49cc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc49cc910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc49ccaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc49ccc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc49ccdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc49cb020"/>
        <function-ref name="get" scoped="" ref="0x7f1dc49cb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc49cb340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc49cb980"/>
        <function-ref name="set" scoped="" ref="0x7f1dc49cb660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc49cb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc49cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f1dc49cd9d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f1dc49cd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f1dc49cdd50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f1dc49cc020"/>
        <function-ref name="startSend" scoped="" ref="0x7f1dc49cc1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f1dc49cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f1dc49cd0e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1dc49cd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f1dc49cd460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f1dc49cd5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f1dc49cd780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f1dc49b8d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1dc49b8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc49c30e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1dc49c3270"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc49c3400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1dc49c3590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1dc49c3720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1dc49c38b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc49c3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f1dc49c7b60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1dc49c7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f1dc49c4020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f1dc49c41b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f1dc49c4340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f1dc49c44d0"/>
        <function-ref name="putData" scoped="" ref="0x7f1dc49c4660"/>
        <function-ref name="putDone" scoped="" ref="0x7f1dc49c47f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f1dc49c4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc49c3cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc49c3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc49c20a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc49c2230"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc49c23c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc49c2550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc49c26e0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc49c2870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc49c2a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc49b71b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc49c2b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc49c2d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc49b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1dc499b020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1dc499b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc499b3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1dc499b530"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc499b6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1dc499b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1dc499d890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1dc499d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc499dc10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1dc499dda0"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc499c020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1dc499c1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1dc499c340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1dc499c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc499c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc499d080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc499d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc499d400"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc499d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc4809c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc4809c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc4808020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc48081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1dc4807440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1dc4807440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc48077c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1dc4807950"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc4807ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1dc4807c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1dc4806020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc4806020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc48063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1dc4808440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1dc4808440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc48087c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1dc4808950"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc4808ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1dc4808c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1dc4808e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1dc4807020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc48071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4809020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4809020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc48093a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4809530"/>
        <function-ref name="request" scoped="" ref="0x7f1dc48096c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4809850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc48099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1dc498ba30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc498ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc498bdb0"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc4989020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1dc4987020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1dc4987020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc49873a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1dc4987530"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc49876c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1dc4987850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1dc4984450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc4984450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc49847d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1dc4989860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1dc4989860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4989be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1dc4989d70"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc4988020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1dc49881b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1dc4988340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1dc49884d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4988660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1dc49851d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1dc49851d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4985550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc49856e0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4985870"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4985a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4985b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc498c7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc498c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc498cb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc498ccb0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc498ce40"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc498b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc498b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1dc49831d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc49831d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc4983550"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc49836e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1dc4918dc0" loc="47:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc4918dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc4917180"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc4917310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1dc4916890" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1dc4916890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4916c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1dc4916dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc4914020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1dc49141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1dc49133e0" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc49133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc4913780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1dc4913a50" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1dc4913a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc4913dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc4912020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc49121b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc4912340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc49124d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc4912660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc49127f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc4912980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc4912b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc4912ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc4912e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc4911020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc49111b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc4911440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc49115d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc4911760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc49118f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc4911a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc4911c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc4911da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc4910020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc49101b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc4910340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc49104d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc4910660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc49109f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc4910b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc4910d10"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc490f020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc490f1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc490f340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc490f4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc490f660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc490f7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc490f980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc490fb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc490fca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc490fe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc490e020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc490e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1dc49176d0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1dc49176d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc4917a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1dc4917c00"/>
        <function-ref name="receive" scoped="" ref="0x7f1dc4917d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1dc4916020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1dc49161b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1dc4916340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc49164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1dc490d020" loc="55:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc490d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc490de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc490c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc490c340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc490ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1dc49145b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1dc49145b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4914950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4914ae0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4914c70"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4914e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4913020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4918020" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4918020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc49183c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4918550"/>
        <function-ref name="request" scoped="" ref="0x7f1dc49186e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4918870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4918a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1dc490e5b0" loc="54:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1dc490e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc490e950"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc490eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc490b120" loc="56:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc490b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc490b4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc490b630"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc490b7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc490b950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc490bae0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc490bc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc490be00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc490a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc490a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc490a020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc490a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1dc48fb860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc48fb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc48fbbe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc48fbd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1dc48fe500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc48fe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc48fe880"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc48fea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1dc48fed30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc48fed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc49020e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc4902270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc4902400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc4902590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc4902720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc49028b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc4902a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc4902bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc4902d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc4901020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc49011b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc4901340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc49014d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc4901760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc49018f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc4901a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc4901c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc4901da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc48fd020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc48fd1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc48fd340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc48fd4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc48fd660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc48fd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc48fd980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc48fdd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc48fc020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc48fc1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc48fc340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc48fc4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc48fc660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc48fc7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc48fc980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc48fcb10"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc48fcca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc48fce30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc48fb020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc48fb1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc48fb340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc48fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1dc48ed890" loc="66:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1dc48ed890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc48edc10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc48edda0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc48ec020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc48ebc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc48ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc48ec4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc48ec660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc48ec7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc48ec980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc48ecb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc48ecca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc48ece30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc48eb020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc48eb2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc48eb440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc48eb5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc48eb760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc48ec1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc48eb8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc48eba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1dc48f2020" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1dc48f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc48f23a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc48f2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1dc48ea020" loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1dc48ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc48ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc48ea530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc48ea6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc48e84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc48ea9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc48eab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc48ead00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc48e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc48e91b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc48e9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc48e94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc48e9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc48e97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc48e9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc48e9c10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc48e9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc48e8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc48ea850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc48e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc48e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1dc48e8890" loc="68:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1dc48e8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc48e8c10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc48e8da0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc48e7020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc48e6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc48e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc48e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc48e7660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc48e77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc48e7980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc48e7b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc48e7ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc48e7e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc48e6020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc48e62b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc48e6440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc48e65d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc48e6760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc48e71b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc48e68f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc48e6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1dc48f73c0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1dc48f73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc48f7740"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc48f78d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc48f7a60"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc48f7bf0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc48f7d80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc48f6020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc48f61b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc48f6340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc48f64d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc48f6660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc48f67f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc48f6980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc48f6b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc48f6da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc48f5020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc48f51b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc48f5340"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc48f54d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc48f5660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc48f57f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc48f5980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc48f5b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc48f5ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc48f5e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc48f4020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc48f43b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc48f4540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc48f46d0"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc48f4860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc48f49f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc48f4b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc48f4d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc48f3020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc48f31b0"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc48f3340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc48f34d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc48f3660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc48f37f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc48f3980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc48f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1dc48fa9c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc48fa9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc48fad40"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc48f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1dc48ef020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1dc48ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc48ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc48ef530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc48ef6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc48ed4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc48ef9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc48efb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc48efd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc48ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc48ee1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1dc48ee340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc48ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc48ee660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc48ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc48eea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc48eec10"/>
        <function-ref name="set" scoped="" ref="0x7f1dc48eeda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc48ed020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc48ef850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc48ed1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc48ed340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1dc48f28f0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1dc48f28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1dc48f2c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1dc48f2e00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1dc48f1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1dc48f0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1dc48f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1dc48f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1dc48f1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1dc48f17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1dc48f1980"/>
        <function-ref name="get" scoped="" ref="0x7f1dc48f1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1dc48f1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1dc48f1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f1dc48f0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1dc48f02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f1dc48f0440"/>
        <function-ref name="set" scoped="" ref="0x7f1dc48f05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1dc48f0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f1dc48f11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1dc48f08f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1dc48f0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1dc48697c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1dc48697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3ec80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1dc5f3d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1dc4865620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1dc4864020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1dc4865ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1dc48644e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc3d84a90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc3d84a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc3d84e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc3d83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc3d7ebe0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc3d7ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc3d7d020"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc3d7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1dc3d7e440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1dc3d7e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc3d7e7c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc3d7e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc3d8ee00" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc3d8ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc3d841c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc3d84350"/>
        <function-ref name="request" scoped="" ref="0x7f1dc3d844e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc3d84670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc3d84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1dc3d83a50" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1dc3d83a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1dc3d83dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1dc3d82020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1dc3d821b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1dc3d82340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1dc3d824d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1dc3d82660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1dc3d827f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1dc3d82980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1dc3d82b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1dc3d82ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1dc3d82e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1dc3d81020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1dc3d811b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1dc3d81440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1dc3d815d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1dc3d81760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1dc3d818f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1dc3d81a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1dc3d81c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1dc3d81da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1dc3d80020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1dc3d801b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1dc3d80340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1dc3d804d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1dc3d80660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1dc3d809f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1dc3d80b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1dc3d80d10"/>
        <function-ref name="tx" scoped="" ref="0x7f1dc3d7f020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1dc3d7f1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1dc3d7f340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1dc3d7f4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1dc3d7f660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1dc3d7f7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1dc3d7f980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1dc3d7fb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1dc3d7fca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1dc3d7fe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1dc3d7e020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1dc3d7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc3d832b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc3d832b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc3d83630"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc3d837c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc484b510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc484b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc484b890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc484ba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc484aaf0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc484aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc484ae70"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc4849030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1dc484e510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1dc484e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc484e890"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc484ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc484d280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc484d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc484d600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc484d790"/>
        <function-ref name="request" scoped="" ref="0x7f1dc484d920"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc484dab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc484dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc484bd20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc484bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc484a0e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc484a270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1dc4846120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4846120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc48464a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc4846630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1dc4848230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1dc4848230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc48485d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc4848760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1dc4847ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1dc4847ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc4847e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1dc4848b60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1dc4848b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1dc4847020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1dc48472f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1dc48472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1dc4847670"/>
        <function-ref name="txDone" scoped="" ref="0x7f1dc4847800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc4842bd0" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc4842bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc4841020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc48411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc4840950" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc4840950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc4840cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc4840e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1dc4841400" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4841400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4841780"/>
        <function-ref name="requested" scoped="" ref="0x7f1dc4841910"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4841aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4841c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc4841dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc4843e30" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4843e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4842210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc48423a0"/>
        <function-ref name="request" scoped="" ref="0x7f1dc4842530"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc48426c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc4842850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f1dc483f0f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc483f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc483f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc4840060" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4840060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc48403e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc4840570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1dc3d18020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1dc3d18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1dc3d183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1dc3d18630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1dc3d18630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1dc3d189b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1dc3d18b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1dc3d18cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1dc3d18e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1dc3d156c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1dc3d156c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1dc3d15a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc3d15bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1dc3d129d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1dc3d129d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1dc3d12d70"/>
        <function-ref name="configure" scoped="" ref="0x7f1dc3d11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1dc3d112b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1dc3d112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1dc3d11630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1dc3d117c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1dc3d11950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1dc3d11ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1dc3d15e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc3d15e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc3d131e0"/>
        <function-ref name="requested" scoped="" ref="0x7f1dc3d13370"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc3d13500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc3d13690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc3d13820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1dc3d11d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1dc3d11d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1dc3d100e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1dc3d10270"/>
        <function-ref name="led1On" scoped="" ref="0x7f1dc3d10400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1dc3d10590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1dc3d10720"/>
        <function-ref name="get" scoped="" ref="0x7f1dc3d108b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1dc3d10a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f1dc3d0f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1dc3d10d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1dc3d10bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1dc3d0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1dc3d16850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc3d16850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc3d16bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc3d16d80"/>
        <function-ref name="request" scoped="" ref="0x7f1dc3d15020"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc3d151b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc3d15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f1dc3d122d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f1dc3d122d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc3d12650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1dc3d13a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc3d13a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc3d13df0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc3d12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1dc3d0f480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1dc3d0f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc3d0f800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc3d0f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1dc4839780" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1dc4839780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1dc4839b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1dc4839d50" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc4839d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc4822100"/>
        <function-ref name="requested" scoped="" ref="0x7f1dc4822290"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4822420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc48225b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc4822740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1dc4839020" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc4839020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc48393a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4839530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1dc4822990" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc4822990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc4822d10"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc4821020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1dc3cdae00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1dc3cdae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1dc3cd91c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1dc3cd9410" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1dc3cd9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc3cd9790"/>
        <function-ref name="requested" scoped="" ref="0x7f1dc3cd9920"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc3cd9ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc3cd9c40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1dc3cd9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1dc3cda6a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1dc3cda6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc3cdaa20"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc3cdabb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1dc3cd8060" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1dc3cd8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1dc3cd83e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1dc3cd8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f1dc48028e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1dc48028e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1dc4802c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1dc4801020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1dc4801020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1dc48013a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1dc4801530"/>
        <function-ref name="request" scoped="" ref="0x7f1dc48016c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1dc4801850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1dc48019e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1dc4802080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1dc4802080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1dc4802400"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc4802590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f1dc47efa30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f1dc47efa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1dc47efdb0"/>
        <function-ref name="offset" scoped="" ref="0x7f1dc47eb020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1dc47eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc47dd060" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerTramaTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc47dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc47d9630"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc47dcac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc47db920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc47db4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc47d8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc47d9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc47db020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc47ddc50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc47d9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc47dc170"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc47dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1dc47d7b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1dc47d7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1dc5f3e4d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1dc5f3e840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1dc47d2110"/>
        <function-ref name="fired" scoped="" ref="0x7f1dc47d55b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1dc47d34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1dc47d3020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1dc47d2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1dc47d2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1dc47d5a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1dc47d6750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1dc47d3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1dc47d6c20"/>
        <function-ref name="stop" scoped="" ref="0x7f1dc47d5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc4744020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc4744020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc47443a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4744530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc47446c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4744850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc47449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc4744c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4744c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4743020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc47431b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4743340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc47434d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc4743660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc47438b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc47438b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc4743c30"/>
        <function-ref name="source" scoped="" ref="0x7f1dc4743dc0"/>
        <function-ref name="address" scoped="" ref="0x7f1dc4742020"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc47421b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc4742340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc47424d0"/>
        <function-ref name="type" scoped="" ref="0x7f1dc4742660"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc47427f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc4742980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc4742b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc4742ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1dc4741020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1dc4741020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc47413a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc4741530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc47416c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc3cc6920" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc3cc6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc3cc6ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc3cc6e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc3cc5020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc3cc51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc3cc5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc3cc5590" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc3cc5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc3cc5910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc3cc5aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc3cc5c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc3cc5dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc3cc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc3cc3270" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc3cc3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc3cc35f0"/>
        <function-ref name="source" scoped="" ref="0x7f1dc3cc3780"/>
        <function-ref name="address" scoped="" ref="0x7f1dc3cc3910"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc3cc3aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc3cc3c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc3cc3dc0"/>
        <function-ref name="type" scoped="" ref="0x7f1dc3cc2020"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc3cc21b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc3cc2340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc3cc24d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc3cc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1dc3cc28f0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1dc3cc28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1dc3cc2c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f1dc3cc2e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1dc3cc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1dc3cb8390" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc3cb8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc3cb8710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc3cb88a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc3cb8a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc3cb8bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc3cb8d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1dc3cb7060" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc3cb7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc3cb73e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc3cb7570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc3cb7700"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc3cb7890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc3cb7a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1dc3cb7c70" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc3cb7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc3cb6020"/>
        <function-ref name="source" scoped="" ref="0x7f1dc3cb61b0"/>
        <function-ref name="address" scoped="" ref="0x7f1dc3cb6340"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc3cb64d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc3cb6660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc3cb67f0"/>
        <function-ref name="type" scoped="" ref="0x7f1dc3cb6980"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc3cb6b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc3cb6ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc3cb6e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc3cb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc47ac930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc47ac930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc47accb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc47ace40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc47a9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc47a91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc47a9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1dc4759400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1dc4759400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc47597a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4759930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4759ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc4759c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc4759de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1dc475bdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1dc475bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1dc475a1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc475a350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc475a4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1dc475a670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1dc475a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1dc4757720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4757720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc4757aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4757c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc4757dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4756020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc47561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f1dc475ab80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f1dc475ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f1dc4759020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1dc4756480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1dc4756480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4756800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc4756990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1dc4756c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1dc4756c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1dc4755020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1dc47551b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1dc4758060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4758060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc47583e0"/>
        <function-ref name="source" scoped="" ref="0x7f1dc4758570"/>
        <function-ref name="address" scoped="" ref="0x7f1dc4758700"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc4758890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc4758a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc4758bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1dc4758d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc4757020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc47571b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc4757340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc47574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1dc4737020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1dc4737020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1dc47373a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1dc4737530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1dc47376c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1dc4737850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1dc47379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1dc473e910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1dc473e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1dc473ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1dc4737c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1dc4737c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1dc4736020"/>
        <function-ref name="source" scoped="" ref="0x7f1dc47361b0"/>
        <function-ref name="address" scoped="" ref="0x7f1dc4736340"/>
        <function-ref name="destination" scoped="" ref="0x7f1dc47364d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1dc4736660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1dc47367f0"/>
        <function-ref name="type" scoped="" ref="0x7f1dc4736980"/>
        <function-ref name="setType" scoped="" ref="0x7f1dc4736b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1dc4736ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1dc4736e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1dc4735020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1dc606fc60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1dc6070770" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f1dc6064d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f1dc6060c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f1dc6060940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f1dc6065030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f1dc6066870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f1dc6062b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f1dc6062550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f1dc60628b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f1dc6060020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f1dc6061cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f1dc60615a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f1dc6061320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f1dc60645b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f1dc60660e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f1dc6065dd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f1dc60657e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f1dc6065b40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1dc6022b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1dc6025de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1dc6022420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1dc6025700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f1dc60235a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f1dc60288f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1dc6025020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1dc6023cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1dc61907e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1dc6458700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f1dc60b6a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f1dc60b41f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1dc60b62b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1dc622e020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1dc6bcee80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1dc6516e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1dc6516610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1dc650a770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1dc6508020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1dc5fb35c0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1dc5fb3340" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1dc5fb2ab0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1dc5fb2830" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1dc5fb4920" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1dc5fb3e10" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1dc5f60060" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
              <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f626e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1dc5f62a30" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5f62d60" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1dc5f5d110" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5fafe20" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1dc5f5b2a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f5b020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1dc5f59620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f59020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5f59350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1dc5f586d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1dc5f5a730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f5a170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5f5a4a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1dc5f6b2c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1dc5f6d7e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1dc5f6db60" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5f6b020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1dc5f67970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f67370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5f676a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1dc5f66a60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1dc5f6a630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f6a3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1dc5f68b80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5f685a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1dc5f688f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc5f3ddd0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc5f3ddd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1dc5f35c10" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1dc5f39420" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1dc5f372b0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1dc5f38bd0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1dc5f37020" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1dc5f38420" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1dc5f34c60" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1dc5f343e0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1dc5f39c00" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1dc5f3c970" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1dc5f3c6f0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1dc5f352b0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1dc5f37c50" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1dc5f35020" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1dc5f3a4d0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1dc5f3a250" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1dc5f3acd0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1dc5f25570" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1dc5f25d20" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1dc5f23540" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1dc5f224d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1dc5f21c20" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1dc5f20480" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1dc5f23cd0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1dc5f1e020" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1dc5f20d70" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1dc5f26db0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1dc5f22cb0" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1dc5f21470" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1dc5f472a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f47020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1dc5f51d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f51ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1dc5f541f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1dc5f54cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f54a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1dc5f4e7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f4e1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1dc5f4e510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1dc5f502b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f52c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1dc5f50020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1dc5f4bbf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f4b970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1dc5f4d020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f499a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1dc5f49cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1dc5fc4de0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1dc5f4c9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f4c770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1dc5f46730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1dc5f46150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1dc5f464a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1dc5f45580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1dc5e918a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1dc5e8f020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1dc5e92a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1dc5e8fe80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1dc5e91190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1dc5e8f740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1dc5e95c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1dc5e92350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1dc5e66880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1dc5e64020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1dc5e61b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1dc5e61890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f1dc5e5e5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1dc5e67120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1dc5e63020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1dc5e5ed60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f1dc5e5d860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1dc5e5d5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1dc5e64760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1dc5e660e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f1dc5e5c190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1dc5e62770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f1dc5e5fe30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1dc5e678c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f1dc5e5f3e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1dc5e68270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1dc5e637a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1dc5e61020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1dc5e62020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1dc5e689a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc5bb61e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc5bb61e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1dc5bb6420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5bb6420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f1dc5bb42a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5bb6420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bb4020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1dc5bb3430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bb31b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f1dc5bb5020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bb6d60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1dc5bb1740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5bb6420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bb1150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1dc5bb14b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5bb6420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1dc5ba5990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5ba5370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1dc5ba5700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1dc5ba3b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5ba38b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1dc5ba7ae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1dc5ba7120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1dc5baae80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1dc5bbc5f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bbc370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1dc5bba7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bba550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1dc5bb8940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5bb86c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f1dc5b7c6e0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b7c460" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f1dc5b7e980" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b7e700" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f1dc5b800b0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1dc5b81dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f1dc5b81520" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1dc5b812a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f1dc5b80ae0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f1dc5b80860" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f1dc5b7d860" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b7d5e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1dc5b6f020" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1dc5b708b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1dc5b70c30" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f1dc5b8b420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b8ce10" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f1dc5b8b190" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f1dc5b87b20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b87520" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f1dc5b87890" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f1dc5b89020" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1dc6bc2110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b8bc80" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f1dc5b88a30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b887b0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f1dc5b8c610" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b8c390" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f1dc5b89b50" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b898d0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1dc5b74830" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b745b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1dc5b788f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b782d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1dc5b78660" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1dc5b75810" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b75590" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1dc5b76d20" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b76700" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1dc5b76a90" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1dc5b73810" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b73590" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1dc5b83430" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b831b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1dc5b623c0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b69dd0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5b62130" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1dc5b5e970" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b5e370" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5b5e6a0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1dc5b5daa0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1dc5b616c0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b61440" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1dc5b60b80" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b605a0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1dc5b608f0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1dc5b66390" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1dc5b67390" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1dc5b6aa00" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1dc5b67b80" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1dc5b66de0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1dc5b3d3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b41dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f1dc5b3d110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1dc5b3c6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f1dc5b39e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1dc5b39060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1dc5b398a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc5b39bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1dc5b3a840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1dc5b3a260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1dc5b3a5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f1dc5b3de30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f1dc5b3dbb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1dc5b350e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f1dc5b3e870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1dc5b42a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1dc5b3f270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f1dc5b2f2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b2f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f1dc5b30710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f1dc5fadde0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f1dc5fab7d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b30410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f1dc5b2e620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f1dc5fa93b0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f1dc5fa8c60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc5b2e320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f1dc5b456e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f1dc5b43840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f1dc5b43070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f1dc5b4ae20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f1dc5b46e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f1dc5b44020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f1dc5b44840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f1dc5b466c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f1dc5b29d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f1dc5b2a350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f1dc5b29530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f1dc5b292b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f1dc5b2aac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f1dc5b2b020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1dc5b32c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f1dc5b2bad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1dc5b2b850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f1dc5acc870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f1dc5acc290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f1dc5acc5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f1dc5acd1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f1dc5acf880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f1dc5acf210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f1dc5acf5f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f1dc5ad5c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1dc5ad5990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f1dc5acda70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f1dc5ad1730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1dc5ad14b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1dc5ad4d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1dc5ad4ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f1dc5acbae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f1dc5ad09c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1dc5ad0740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f1dc5acb2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f1dc5ad24d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1dc5ba9e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1dc5ba05a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f1dc5ad2cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f1dc5ad51f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1dc5ad4390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f1dc5ad0020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1dc5ac94a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1dc5ac94a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1dc5ac9d60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1dc5ac5ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1dc5ac94a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1dc5ac5510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f1dc5ac5830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1dc5ac94a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1dc5a9cc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc5a9c990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1dc5a9b710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc5a9b490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f1dc5abbc50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1dc5ba9e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1dc5ba05a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc5ab7020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc5ab7020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1dc5ab7260" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1dc5ab3e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1dc5ab6e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1dc5ab3460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1dc5ab5e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1dc5ab31d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1dc5ab5640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1dc5ab2620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1dc5ab7dc0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1dc5ab7b40" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5ab7260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1dc5ab6680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f1dc5aa4560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1dc5aa34f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1dc5aa4d40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1dc5aa5cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f1dc5aa56f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1dc5fc3210"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1dc5aa5a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1dc5fc35f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f1dc5a97e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1dc5aa1e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1dc5aa1020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1dc5aa1890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc5aa1be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1dc5a9e610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1dc5a9f770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1dc5a9e020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc5a9e370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1dc5aa8c30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1dc5aa8470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f1dc5aa9ce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f1dc5aa9420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1dc59dd560" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1dc59dc020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1dc59ddc60" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1dc59dca00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1dc59dc780" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1dc59db410" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1dc59db190" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1dc59dbb00" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1dc59ea3e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1dc59e9c60" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1dc59e99e0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1dc59eab10" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1dc59ee650" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1dc59e9270" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1dc59ed570" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1dc59ebcc0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1dc59eede0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1dc59edc80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1dc59eb5c0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1dc59eb340" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1dc59e86a0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1dc59e8420" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1dc59e2bc0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1dc59e25f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f1dc59e2930" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1dc59efb60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1dc6019550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1dc6017020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1dc59e05c0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1dc59df4d0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1dc59e3d30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1dc59e0d00" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1dc59e4350" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1dc59e4ae0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1dc59e35a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1dc6019550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1dc6017020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1dc59e3320" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1dc6019550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1dc6017020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1dc59c8020" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1dc59c56a0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1dc59c5420" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1dc59c42a0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1dc59c4020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1dc59c6c10" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1dc59c6350" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1dc59c89d0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1dc59c8750" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1dc599a1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc584be10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc584be10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1dc5845070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5845070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1dc5845990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc5845070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1dc5844ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1dc5844270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1dc5843270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f1dc5778190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1dc5776350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1dc5778b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1dc57788b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f1dc577b8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1dc574d5a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1dc5749020" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1dc574edc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f1dc574b6d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f1dc574b450" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f1dc574cd30" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1dc574e620" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f1dc574c5d0" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1dc574dda0" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f1dc55f8810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f1dc55f70e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f1dc55f7920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f1dc55cf420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc55d0e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc55cf190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f1dc55ca700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc55cbd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc55ca110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1dc55ca460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1dc55cb020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc55cd970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc55cdcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f1dc55d0020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1dc5fae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc55d29d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc55d2d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1dc55ceb90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc55ce250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1dc55ce5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1dc55ce8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1dc55afa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1dc55af0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1dc55af460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc55af7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1dc55ab020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1dc55ae2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1dc55ae630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc55ae970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1dc55aece0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f1dc55b18f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f1dc55b1670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1dc54d1b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1dc54ce4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1dc54ccaa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1dc55022b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1dc5503e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f1dc54cb6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc54cb470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f1dc54cab30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc54ca8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f1dc54ca020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1dc54c95f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc54c9370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1dc54bf020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1dc54c0750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f1dc54b8740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc54b84c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f1dc54bbcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f1dc54937c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f1dc549f2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f1dc54ab020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551f020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1dc551f860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1dc54aecf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551f020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1dc551f860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f1dc54a13b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f1dc54a9530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551a020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1dc551a860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1dc54a92b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551a020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1dc551a860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1dc54989e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1dc5494020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f1dc54aaa90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551dec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1dc551c680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f1dc54a9d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551a020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1dc551a860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f1dc54a5b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1dc54a5910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1dc54a51f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f1dc54982b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f1dc54aa2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551dec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1dc551c680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1dc54aa020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551dec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1dc551c680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1dc54a6020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f1dc5497190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1dc54a6a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1dc54a6780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f1dc54a2480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f1dc54a2c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1dc549a420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f1dc549c190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f1dc54a0350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1dc549ab60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f1dc549fab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f1dc54978b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1dc54a4390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1dc5525d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f1dc55214d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f1dc5496070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f1dc5493020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f1dc54a8700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f1dc54a8480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f1dc54922a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc5492020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f1dc54ab800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1dc551f020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1dc551f860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f1dc54a1b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f1dc549d270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f1dc549bba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1dc54edb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1dc54ed730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1dc549b920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1dc54edb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1dc54ed730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f1dc549cca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1dc55022b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1dc5503e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1dc549ca20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1dc55022b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1dc5503e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f1dc5492ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1dc5496860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f1dc54a4ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1dc5494780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f1dc549d9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f1dc54a0b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1dc542b020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f1dc54049d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f1dc5415020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f1dc540a620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1dc540a3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f1dc541e5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f1dc5407c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f1dc540f5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f1dc5417070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f1dc5414020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1dc5418020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f1dc5419d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f1dc541a4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f1dc5411020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f1dc5409550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f1dc5404270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f1dc540bc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f1dc53ff350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f1dc53fb9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f1dc541d420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f1dc5413740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f1dc54101f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f1dc54188e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f1dc5420350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f1dc540b460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1dc540b1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f1dc5424c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f1dc54074d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f1dc5402190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f1dc53fdb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f1dc53fb270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f1dc5406b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f1dc54028c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f1dc540adb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f1dc5400390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f1dc541db40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f1dc540e7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f1dc54017b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f1dc5405ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f1dc5410de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f1dc5410b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f1dc53fc2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f1dc540da60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f1dc5406420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f1dc5420e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f1dc54da4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1dc54da080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1dc5420b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f1dc54da4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1dc54da080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f1dc5413020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f1dc541ccb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1dc541ca30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f1dc5411980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc5411700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f1dc5400b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f1dc5419620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f1dc541c350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f1dc540d2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f1dc540d020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f1dc541ece0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f1dc5401020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f1dc5405350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f1dc5409cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f1dc540e020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f1dc540fd30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f1dc5414740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f1dc54177b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f1dc53fca40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f1dc541ae30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1dc541abb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f1dc53ffb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f1dc5415750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f1dc53fd350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1dc5356020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1dc5356880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1dc5321dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1dc531e020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1dc5321530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1dc53206d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1dc531e950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f1dc531db20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1dc53124c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1dc531b490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1dc5312240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1dc531b490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1dc5315420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1dc5313020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1dc531b490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1dc5315ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1dc531b490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1dc5313930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1dc531b490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1dc51095e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1dc5109360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1dc50f6b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f1dc50f61c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1dc50f6530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc50f6860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1dc50f5880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1dc50f52c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc50f55f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc50dc530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc50dc530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1dc50dc770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc50dc770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f1dc50db2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc50dc770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1dc50db060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1dc50dc770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f1dc5077580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1dc50459e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f1dc5045020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f1dc5045750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f1dc50467f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f1dc5046020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1dc504ad30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f1dc505b3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc505b150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f1dc505c3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc505c150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1dc5058350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc50580d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1dc505a390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc505a110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1dc4ee3910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1dc4ee3910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1dc4ee0270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1dc6bc1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f1dc4e02e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1dc6bc2930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f1dc4e02c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1dc6bc2930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f1dc4d1e5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1dc4d1e5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f1dc4d1b2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1dc4d1e5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f1dc4d1b020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1dc4d1e5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f1dc4b05b00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc4b054f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f1dc4b05870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f1dc4b0ac70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f1dc4b06b60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1dc4b06560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1dc5f70940"/>
                <typename><typedef-ref name="message_t" ref="0x7f1dc5f6d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f1dc4b068d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f1dc4aec960" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f1dc4aec1f0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f1dc4afec20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f1dc4af30e0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f1dc4af1d00" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc4af1a80" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f1dc4af3960" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f1dc4af47e0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc4af4560" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f1dc4af05b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f1dc4af1270" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f1dc4afc780" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f1dc4afb0e0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f1dc4affd80" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f1dc4affb00" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f1dc4afbc60" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1dc4afb9e0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f1dc4af98f0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f1dc4af75b0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1dc4af7330" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f1dc4af60b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1dc4af7e00" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1dc49c1c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1dc49c1670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc49c19b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f1dc49bca70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1dc49bc7f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1dc49bb890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1dc49bb2c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc49bb600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f1dc49be610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f1dc49b82c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1dc49b9820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc49b9b60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1dc49b8020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f1dc49bc020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1dc49c0610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1dc49bfbd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1dc49c0020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1dc6bc1520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1dc49c0370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
              <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1dc49995b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1dc4999330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f1dc4999df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1dc4998cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1dc4998700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f1dc4998a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1dc6bc1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f1dc4995b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <short>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1dc498e4c0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1dc54edb50"/></typename>
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1dc54ed730"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1dc4900860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1dc48fe0e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1dc6514020"/>
            <typename><typedef-ref name="error_t" ref="0x7f1dc650f1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1dc4837ce0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f1dc47a01f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1dc651a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
