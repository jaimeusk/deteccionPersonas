<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f49d7cd9660"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f49d7d90a20"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f49d7d90a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f49d7cf2110"/></to>
    </wire>
    <wire loc="19:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f49d7cd8020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d689b5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d689b5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d68308d0"/></to>
    </wire>
    <wire loc="21:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f49d7cd2020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d6898600"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d6898600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d6839110"/></to>
    </wire>
    <wire loc="22:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f49d7c80e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6897800"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d6897800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6839e70"/></to>
    </wire>
    <wire loc="23:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f49d7c77870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d6897e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d6897e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d6837a40"/></to>
    </wire>
    <wire loc="24:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f49d7c679b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d6896ab0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d6896ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d6838490"/></to>
    </wire>
    <wire loc="34:BaseStationC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d7c78160"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d6466c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d6466c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d59e7590"/></to>
    </wire>
    <wire loc="35:BaseStationC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d7c78dd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d64658b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d64658b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d59e5270"/></to>
    </wire>
    <wire loc="36:BaseStationC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f49d7cd8bc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d78e6020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d78e6020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d78b7080"/></to>
    </wire>
    <wire loc="37:BaseStationC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d7c65440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d6466020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d6466020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d59e8920"/></to>
    </wire>
    <wire loc="38:BaseStationC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d7c630c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6460910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d6460910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d78e4210"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:BaseStationC.nc">
      <from><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f49d7c62270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d64ff060"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d64ff060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6a9d610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:BaseStationC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f49d7c52650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d64f9b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d64f9b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6a9d610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d7c40500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bb9bc0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d5a3a020"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6830280"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6971dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d69fab70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6a19750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6a39080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6ba23a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6ca2620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6d92c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7733c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d5d5c020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7263020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d77e44a0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f49d7cf2780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f49d82371e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f49d82371e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f49d7ddc140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f49d7cf11d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7d8b020"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d7d8b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7d7e1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7cf18d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f49d7d81130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f49d7d7e810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f49d7d7c020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f49d7d66900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f49d7d66900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7d4d850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f49d7d7c700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7d80640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f49d7d7cde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7b90600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d7d4d850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7d331c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f49d7d44de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f49d7d33830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f49d7eb2c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f49d7d32af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d7ddb040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f49d7dd6490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f49d800f9a0"/></to>
    </wire>
    <wire loc="88:BaseStationP.nc">
      <from><interface-ref name="RadioSendTask" scoped="" ref="0x7f49d7c33bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f49d7c34c80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d7b90600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d7bb95c0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f49d7bb01d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f49d7bbad80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f49d7bbad80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d7914480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f49d7bb64d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f49d7b92020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f49d7b92020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d78feb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f49d7bb57f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f49d7b91380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f49d7b91380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d78f81b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d7902610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f49d7b248a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f49d7b248a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79ceb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d78fdde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f49d7b21020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f49d7b21020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79c8060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d78f7480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f49d7b1f8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f49d7b1f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79c2540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f49d7b75580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a7c060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f49d7b5c710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a46740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f49d7ad3d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a35540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f49d7ad8d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7996060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f49d7b00d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a30b90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f49d7b57710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a3a060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f49d7b3e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a04740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f49d7b108a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79a2540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f49d7afbd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a25540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f49d7ae7d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79b7060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f49d7ac9d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7991540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f49d7b6ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a6c060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f49d7af8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a20b90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f49d7b69d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a61b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f49d7b50e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a2a060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f49d7b35020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79f4540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f49d7b1c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79bdb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f49d7b08020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7991540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f49d7b7b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a87740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f49d7b61580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a51d10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f49d7b48710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a1a060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f49d7b03580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a35540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f49d7adf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79a7060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f49d7acb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7991540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f49d7aee580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79d3540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f49d7b43710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a0fdc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f49d7b298a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79d8060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f49d7b158a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79adb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f49d7addd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79a2540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f49d7af6d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79e3540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f49d7b73d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a77540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f49d7b5ae50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a40b90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f49d7b1a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79b7060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f49d7b55e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a35540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f49d7b3a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79ffb90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f49d7b0d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d799db90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f49d7af1d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79d8060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f49d7b7e530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7ac0d10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f49d7b66580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a5b060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f49d7b4d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a25540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f49d7b338a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79efb90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f49d7aecd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a1a060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f49d7ae4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79b2540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f49d7ad5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7991540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f49d7b2e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79e3540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f49d7ae9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a14540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f49d7b79d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a82b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f49d7b5fe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a4b260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f49d7b46e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a14540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f49d7af3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79deb90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f49d7ada570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d799db90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f49d7b40020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a09260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f49d7b26020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79d3540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f49d7b12020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79a7060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f49d7b70580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a72b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f49d7b17020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79b2540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f49d7b6b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a66540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f49d7b52710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a30b90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f49d7b388a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79f9060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f49d7b0b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7996060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f49d7b8bd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a8c260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f49d7b64d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a56540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f49d7b4be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a20b90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f49d7b30020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79e8060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f49d7ae2d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79adb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f49d7ad0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a2a060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f49d7afd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a2a060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f49d7b2b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79deb90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f49d7aced40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7996060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f49d7ac5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d79bdb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f49d7b068f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f49d7a3a060"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d78b7080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d788d340"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d78e5050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d78b61d0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d78b61d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d6933020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f49d78e4df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f49d78b3020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f49d78b3020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f49d6932df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d78e3450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d78b2c20"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d78b2c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d6930a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d78df430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c1e550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c1e550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c10a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d78c4430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d78a6e70"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d78a6e70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d7879080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d78e4210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d78b43f0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d78b43f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6932210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d78d9350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d78b0c80"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d78b0c80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d787a020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d78e2120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d78b3650"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d78b3650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d6931470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d78d0660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d6c1a660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d6c1a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d6c0caf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d788d340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d6965b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d78a6020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d692e8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f49d789c020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f49d692fce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d78a9dc0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d787b140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d787b140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d7879080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d6965080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d787a020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f49d6c206e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f49d78930d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f49d7879b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f49d7879b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f49d6950020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d78a5e00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d787a9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d787a9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d6c1fa70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f49d69250f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d7887770"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d692d860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f49d7885d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f49d7885d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f49d69cec90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d692b690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d787ea90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d787ea90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d69cca50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d69274d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d6e4ab20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d692bce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c15d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d692ab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c11640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f49d6929610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f49d77edb80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f49d77edb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f49d77e3970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f49d69261f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d7873330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d7873330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d786e7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d6925d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d6965b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f49d6962d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d6c1fa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d6c10020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f49d6950020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f49d694e410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f49d69cec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f49d69c3a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d6965080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d695d2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f49d7886820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d69ce5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d69ce5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f49d69c3370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f49d6c206e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f49d6c12c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d7887770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d69d0be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d69d0be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d69c57b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f49d787da30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d69cf8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d69cf8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f49d69c44d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f49d7885020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f49d69cb170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f49d69cb170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f49d69c1020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d69cca50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d69c2840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f49d6962d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d7875390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d7875390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d7872e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d69ca6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d6a1e220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d6a1e220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d6a1ca10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d6a1d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d6953350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d6953350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f49d6950d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d6950d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d6969ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d6969ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f49d6963860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d6963860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d7875e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d7875e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d786f990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d69ca020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6966980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d6966980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f49d6962690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d6962690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6a01aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d6a01aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d69fde30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d69fe950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d7874b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d7874b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6ca77c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d6ca77c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d6ca0020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d786d640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d77fe720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d77fe720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d77e4b10"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f49d7865b00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f49d77f8a60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f49d77f8a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f49d77e1740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f49d7861610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d6da06c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f49d7861610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d6caa5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f49d6caa5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d6ca2ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f49d6da06c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d6d91320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f49d785a260"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f49d6d9d020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f49d6d9d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d6d91bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f49d7863020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d6d9dcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d6d9dcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d6d8f970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d7858330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d7850920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f49d78573b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f49d6a3fa20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f49d6a3fa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f49d6a38a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f49d7853020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d6a41aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f49d6a41aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d72671d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d7857b80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f49d78469e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f49d7847a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f49d7848a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f49d77eb020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f49d77e0b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f49d77d4d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d7730690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d7730690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d74e75f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f49d77d1060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f49d74e0690"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f49d74e0690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74d1020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f49d77d0380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f49d74dc020"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f49d74dc020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74c0020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f49d77cf6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f49d74d96a0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f49d74d96a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74b6b00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f49d77cd0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f49d749c400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f49d749c400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f49d733a680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f49d77b71d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6ed5e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6ed5e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f49d77b62b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f49d6ed27b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f49d6ed27b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f49d77b69c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6ed1ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6ed1ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f49d77b8a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6ed3ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6ed3ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d77b8120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6ecd160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6ecd160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f49d77bdb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6ec5870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6ec5870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f49d77c43d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6ec3880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6ec3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f49d77c4c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6ec20a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6ec20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d77bf5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6ecae50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6ecae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d77bb020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6ec8670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6ec8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f49d77c8520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f49d6eb5500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f49d6eb5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f49d77c0a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6eb6ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6eb6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d77bb8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6ec6e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6ec6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f49d77ba1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f49d6ec8e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f49d6ec8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d77baa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6ec7e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6ec7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f49d77b5d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6ea3a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6ea3a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f49d77b5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6e769e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6e769e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d77c5810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d6e4ab20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d77dc020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d6e49d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d6e49d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d6e2e310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f49d77a9820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f49d77aa940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d7733c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d772bd40"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d772bd40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6055340"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d74e75f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d6055b90"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d6055340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d604e3d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f49d6055b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d6047020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d604e3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6032ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f49d6041780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d604ec20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f49d604ec20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d60315b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d60433d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d75658c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d75658c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d7548cf0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d602d710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d60379d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d60379d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d602cda0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d6035120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d6035120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d602a0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d6034440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d6034440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f49d76df5a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f49d76df5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d76286d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f49d76dda20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f49d76dda20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d7627ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f49d76d8d40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f49d76d8d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d7618220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f49d76d6160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f49d76d6160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d7617610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f49d76d4020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f49d76d4020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d76106d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f49d76d3570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f49d76d3570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d760fac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f49d76d1410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f49d76d1410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d7609b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f49d76d0890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f49d76d0890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d7607020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f49d76ce8c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f49d76ce8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d7600220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f49d76cdd40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f49d76cdd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d75ff610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f49d76cba50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f49d76cba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d75f96d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f49d76c9020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f49d76c9020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d75f8ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f49d76e4a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d762f220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f49d76e5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d7636cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f49d76d23e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d760e7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f49d76ebbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d7636020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f49d76c9da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d75f77a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f49d76ef280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d76846d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f49d76d9da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d761ecb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f49d76d9020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d761e020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f49d76dba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d7620b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f49d76e2da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d762d2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f49d76cf890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d7607cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f49d76e2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d762e610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f49d76f3a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d76923e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f49d76ec730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f49d7638b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f49d76e6690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d763d7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f49d76d5020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d76162f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f49d76ee700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f49d763eac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f49d76ccae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d75fe2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f49d76dca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d76267a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f49d76902f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7691bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f49d7690940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f49d75f03f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f49d768e020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f49d75f0b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d763c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d76923e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d763bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7691bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d7635b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d76923e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d76322f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7691bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d762c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d76923e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d762b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7691bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f49d7688100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f49d7688750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f49d75ee430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f49d7688da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f49d75eebc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d7625610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d7624c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d761db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d761b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d7615160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d76147a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d760d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d760cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d7606b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d76042f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d75fd160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d75fc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d75f6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f49d75f5c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f49d752b0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f49d75638e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f49d75638e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d755db80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d754ec50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f49d74df9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74cc630"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f49d74decf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74c7b00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f49d74e13e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74d7a20"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f49d74db370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74bb630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74d6c50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f49d7b75580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74d02f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f49d7b3e8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74cb7a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f49d7b79d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74c6c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f49d7b7e530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74bf2f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f49d7b338a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74ba7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f49d7b40020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74b5c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f49d7b35020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f49d7498700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f49d7490c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f49d749b060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f49d7329b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d747e760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f49d76dba50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f49d747da80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f49d76d9da0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f49d747c930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f49d7b40020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f49d73392f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f49d7468020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f49d7468020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f49d74513f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f49d73287a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f49d746b3d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f49d746b3d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f49d74597a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f49d745c3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f49d74453f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f49d7465a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f49d744ed50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f49d7462020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f49d744b3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f49d7471a30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f49d7455d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f49d745fa30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f49d7448d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f49d74673f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f49d7450710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f49d745b710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f49d7444710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f49d74613f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f49d744a710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f49d746ad50"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f49d7452020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f49d745d020"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f49d7446100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f49d7466710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f49d744fa30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f49d7464d50"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f49d744c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f49d7472710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f49d7456a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f49d7460710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f49d7449a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f49d6ed2160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6ec4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f49d6ebc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f49d6ec30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6eb0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6eb2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6ed1490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f49d6eb8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6eb3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6ebe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f49d6ebf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6ed4a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72de660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6ecde00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f49d6ecc490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6eb7c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6eccbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6eb3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f49d6eb80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6ec7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6eb90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f49d6ebc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6eb9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6eb1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6eb2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f49d6ebf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f49d6eba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6eb5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6ec2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6eb0ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6ed3480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f49d6eca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6ec6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6ebd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6ebd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6ec40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6ecb2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f49d6eca020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6ecd7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6eb6500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f49d6eb1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6ebe0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f49d6eba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f49d6ed2e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6ec00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f49d6ecb940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f49d6ec0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f49d6eb70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6eaf9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72dc890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72dbba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72daa30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d72dd510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72d98b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f49d72cbb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d726c770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f49d726c770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d72671d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f49d72d7060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d724ac40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d724ac40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d5ddfa00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f49d72d3c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f49d72498f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f49d72498f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f49d5ddd020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f49d72cb2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f49d6efb020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f49d6efb020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f49d5ddc120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d72d4a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f49d72c7bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f49d72671d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d7263b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f49d5ddc120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f49d71e3850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f49d5ddd020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f49d71e4110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d5ddfa00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d71e8d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5dde760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5dd42c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5dd42c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d70642c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f49d71e4110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f49d7168a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d5ddd630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d71e4790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d71e4790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d7167060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d71dea40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d5ddc8c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5dc6760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d71e18e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f49d71df690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d5dd5640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d5dd5640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d7065020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d71dab40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d5dcec10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d5dcec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f49d70684d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d71e18e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d7168250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f49d71e3850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f49d7167c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d71e8d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d7169470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d71653e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d71dea40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f49d71665b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f49d71df690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d715f480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d71dab40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f49d7165a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d7155020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d7155020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f49d714c700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d715fc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f49d715d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f49d714d2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d7147c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d7151d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f49d71472d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f49d7118bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f49d7b03580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f49d71143e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f49d7b00d50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f49d7112bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f49d7afd580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f49d710f3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f49d7af8580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f49d710dbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f49d7afbd50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f49d711dd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f49d6fbbd40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f49d5dcd440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d70663f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f49d5dcda50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f49d6fc2020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f49d6fc2020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f49d6fbbd40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d5dd22b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d7155020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5dd4a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d7064ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d7064ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6fcde80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d70638a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5dc6760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d70642c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d6fcea60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d6fcea60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5d586c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f49d70684d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f49d7061d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d7065020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6fd0ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6fd0ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d5d59850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d70663f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d7060710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6fcde80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5d57a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d6fcc790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d70638a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d704ebf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6fcde80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f49d7060d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d7151d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f49d704e5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f49d714d2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d6fcd270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d5d58e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5d569d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d6fcc790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d5d562d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d6fcb020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f49d5d552b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f49d5d5c630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f49d5d53480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f49d6fb2bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f49d714c700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f49d6fac700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f49d7b03580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f49d6faae40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f49d7afd580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6e96c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f49d6ea0da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6e99b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6e93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f49d6e8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f49d6e93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6e7f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6e822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6e9e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f49d6e88670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6e832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f49d6e98c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6e97c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6e8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f49d6e90e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6e92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6ea2760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6e9daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f49d6e9c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6e86a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6e9c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6e83ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6e9edc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f49d6e89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6e97480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6e98480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6ea0750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6e8ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f49d6e8b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6e89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6e81ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6e82ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f49d6e8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f49d6e8be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6e84ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6e91670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6e7fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6ea0100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f49d6e99370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6e96480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6e8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6e92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6e8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6e94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f49d6e9f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6e94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6e9a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f49d6e9acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f49d6e842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6e85ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6e9d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6e852f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f49d6e812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6e8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f49d6e8a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f49d6e9faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6e9e770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6e91e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f49d6e9a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f49d6e90670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f49d6e88e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6e7e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6e69c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f49d6e74da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6e6db50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6e67670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f49d6e60e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f49d6e67e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6e532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6e552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6e71120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f49d6e5b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6e562f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f49d6e6bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6e6ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6e61670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f49d6e63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6e66670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6e75760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6e70aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f49d6e6f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6e5aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6e6f870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6e56ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6e71dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f49d6e5ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6e6a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6e6b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6e74750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6e5de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f49d6e5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6e5c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6e54ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6e55ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f49d6e62670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f49d6e5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6e58ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6e64670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6e53ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6e74100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f49d6e6d370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6e69480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6e61e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6e66e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6e60670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6e68670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f49d6e73450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6e68e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6e6e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f49d6e6ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f49d6e582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6e59ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6e70450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6e592f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f49d6e542f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6e62e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f49d6e5d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f49d6e73aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6e71770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6e64e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f49d6e6e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f49d6e63670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f49d6e5be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6e527a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e2b880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e20020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e20020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e1b140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f49d6e17bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f49d6e1fc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f49d6e1fc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f49d6e02150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f49d6e1a530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d6dac1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f49d6e06540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f49d6e07590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f49d6e07590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f49d6db69e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f49d6dfd950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f49d6e04ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f49d6e04ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f49d6ddaa90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f49d6e029f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f49d6e06540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d6dca020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f49d6dc4530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f49d6dc4530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d6dc1e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d6dbd020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f49d76f3a30"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d6db4c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f49d7b61580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f49d6d99990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f49d6d8e900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f49d6d9b150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f49d6d8d0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f49d6d8dae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d7730690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f49d6d7f500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f49d74e13e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f49d6d78820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f49d74e0690"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f49d6d77b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f49d74db370"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f49d6d80880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f49d7498700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f49d6d75020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6cdac30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6cdac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6d75d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6cd98f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6cd98f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6d726d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f49d6cd82f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6cd82f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f49d6d72de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f49d6cd7cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f49d6cd7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6d71530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6cd5370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6cd5370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6d71c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6cd4d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6cd4d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6d73e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6ccec60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6ccec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6d74780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6cb67a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6cb67a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6d73550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6cba2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6cba2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6d703e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6ccf480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6ccf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6d6f5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6ccce50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6ccce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6d6e020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6ccb670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6ccb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f49d6d70e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f49d6cd27b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f49d6cd27b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6d6d9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6cb8ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6cb8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6d6e890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f49d6cb92f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6cb92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6d6d130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f49d6cb9ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6cb9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6d67d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6caadf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6caadf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6ca1550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6d88d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6d86bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f49d6d85950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c1e550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6d7abe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6c16480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6c16480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6c088b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d6d6b6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6ccdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f49d6cd7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6cd1c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f49d6cc4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f49d6ccbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6cb72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f49d6cbf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f49d6ccfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6cc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f49d6cc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6cca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f49d6cd3370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6cbea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6cd3ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6cbaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6cd4060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f49d6cc0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6cce480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6cd8940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6cc1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f49d6cc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6cc0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f49d6cc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f49d6cc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6cbcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6cc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6cb7ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f49d6cd1490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6ccd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6cc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6ccae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6cc4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6ccc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f49d6cd7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6cd2160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f49d6cd2e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f49d6cbc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6cbdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6cd46b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6cbd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f49d6cb82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6cc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f49d6cc1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6cd59c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6cc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f49d6cc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f49d6cbfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f49d6ca5020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f49d6ca07c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d6c8b150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f49d6c9f020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f49d74e0690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f49d6c9e380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f49d74df9c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f49d6c9d6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f49d74decf0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f49d6c9ca50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f49d749b060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f49d6c9b6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6a8d250"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6a8d250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6c9a530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6a6a120"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6a6a120"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6c99ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6a88d00"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6a88d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f49d6c993a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f49d6a879c0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f49d6a879c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c98330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c971e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f49d6c95d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c1e550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f49d6c97b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f49d77edb80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6c903e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6a7f500"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6a7f500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6c90cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6a7fce0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6a7fce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6c91b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6a867b0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6a867b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6c8d6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6a6b900"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6a6b900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6c8f590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f49d6a6d900"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f49d6a6d900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6c8fe00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f49d6a6c120"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f49d6a6c120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6c8c020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6a6d120"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6a6d120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6c8c8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f49d6a8c990"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f49d6a8c990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f49d6c809d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d6ba8a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d75658c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f49d6c02820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f49d6bb2790"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f49d6c04b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f49d6b9c610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f49d6b9c610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f49d6ab0a20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6ba11d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d6abf8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d6abf8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d5bb5bc0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d6ba23a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6b6d020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d6b6d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d5c259d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f49d6ab8020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f49d6b402f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f49d6b3a850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d6b6d870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f49d6b6d870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d5c1e5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d6aafd20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d6b8cb70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d6b8cb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d6b84610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d5c259d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d5c09360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f49d5c18d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d5c24260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f49d5c24260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f49d5c09bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d5c1b9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d6b8cb70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d5c05dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d5c0e020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d5c0e020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d5c03440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d5c0d760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d5c0d760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d5c02760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d5c0ca80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d5c0ca80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f49d6b81b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f49d75638e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f49d6b379c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f49d5bad180"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f49d6ab8020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f49d5ba78b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f49d6ab3450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f49d5ba8410"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f49d7d81130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f49d5ba6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f49d6aa6ce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6a9d610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6a9d610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6ba11d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6a802f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f49d6a8b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6a832f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f49d6a76500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f49d6a7e500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6a899c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f49d6a73ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6a6e900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f49d6a822f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6a812f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6a79ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f49d6a7a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6a7ece0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6a8c020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6a87370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6a71120"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6a86160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6a886b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f49d6a73500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6a82ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6a83ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6a8b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6a74500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f49d6a76ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6a74ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6a6b120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f49d6a7ace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f49d6a75500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6a6e120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6a7cce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f49d6a85ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6a81ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6a78500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6a7c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6a78ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6a80cd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f49d6a8bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f49d6a85490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f49d6a70900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6a70120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6a71900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f49d6a6c900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6a79500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f49d6a75ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f49d6a89370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6a88060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6a7b500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f49d6a86e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f49d6a7bce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f49d6a72500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6a6adb0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f49d6a3d920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f49d6a39940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d6a43990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6a39080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d6a19e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f49d6a1d020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f49d6a18ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d6a1a690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f49d6a1a690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d72671d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f49d6a168f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f49d6a3fa20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6a15170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f49d69fe200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f49d69fa570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d69f93f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f49d69fe950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d69f9a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d69c1d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f49d69ca6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d69c0b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f49d69ca020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d69be2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d69bd170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f49d69bdb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f49d6970410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f49d6991db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f49d6964800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d695f580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f49d695f580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f49d72671d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d694b1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d787a020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f49d68308d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f49d68222f0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d68941a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d6836720"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f49d6830280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f49d6825c70"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d682bdc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d6894b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f49d6835120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d682e480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f49d6835d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d682f940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f49d682b4a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f49d6511a30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d682e480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d66f1830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f49d682f940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f49d66f1110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f49d66f0760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f49d682b4a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d681f8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d682bdc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d66ee590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d682bdc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d66e5cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d682bdc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f49d66ef0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f49d68185c0"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f49d66ef9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f49d681c130"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f49d68128e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f49d66e9b60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f49d6811060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d66bf080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f49d66bf080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f49d6524080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f49d66dad20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f49d66bf890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f49d66bf890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f49d652a440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f49d67bbe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f49d67f3d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f49d67be400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f49d67b70c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f49d66edc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f49d66ec480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f49d66bd020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f49d6529440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f49d6529440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f49d66a9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f49d652a440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f49d66ab860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d6528020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d65248e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6523020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d652b020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d652b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d66ae7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d652bc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5aa6a90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5aa6a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d656d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d66a6450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d6528020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5aa0be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d66ada30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f49d66a71d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d5ab0e00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d5ab0e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d656f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d66a51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d5aa0440"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d5aa0440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f49d6570510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d66ada30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d663adc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f49d66a9020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f49d6638890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f49d66ab860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f49d66396d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d66ae7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d663a020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d66353e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d66a6450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f49d66365b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f49d66a71d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d66305b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d66a51d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f49d6635a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d6620d30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d6620d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f49d66193c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d662f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f49d658b7c0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f49d658b7c0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f49d75638e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f49d662d120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d661d860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f49d6614020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d6620500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d661c9c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f49d66148f0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f49d7af3580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f49d6611020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f49d7af1d50"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f49d660f890"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f49d7aee580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f49d660c020"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f49d7ae9580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f49d660a890"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f49d7aecd50"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d5aa5a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d6620d30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5aa52b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d656dd20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d656dd20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6562060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d656caf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5aa0be0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d656d510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d6564bd0"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d6564bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5a376c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f49d6570510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f49d656a230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d656f280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d6565e30"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f49d6565e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f49d5a38850"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6562060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5a35a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f49d65692f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d661d860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d6562950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d656caf0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6568120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6562060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d655bd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d6563400"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d6563400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d5a37e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d655b020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d6620500"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5a349d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d6562950"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d5a342d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d65610f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f49d5a332b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f49d5a3a630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f49d5a31480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d59fc6a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d655b020"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f49d59fce00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f49d655b780"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d59fb410"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d655bd50"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d59fa060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6544990"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d59e8920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d59da390"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d59e7590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d78e3450"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d59e5270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d78e2120"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f49d6463020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f49d59e48f0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f49d59e48f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d78d9350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d59d9060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d64ce930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d59d9c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d78e2120"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f49d64ce930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f49d647ddf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f49d647b400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f49d78e5050"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d647a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d78e2120"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d6479720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d78e3450"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f49d6478480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f49d6478c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f49d6459020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f49d78e3450"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f49d6459c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f49d78e2120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="14:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6b31530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="44(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
        <short>&#10; An HPL abstraction of USART1 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART1 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="56(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="96(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.TimerTramaTDMA" loc="44(BaseStationC.TimerTramaTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.TimerLeds" loc="44(BaseStationC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC" loc="47(BaseStationC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC" loc="47(BaseStationC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BaseStationC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseStationC.AMReceiverC" loc="43(BaseStationC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f49d7abf1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f49d7abf580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f49d7abf930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f49d7abfce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f49d7abe0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f49d76c4930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f49d76c4cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f49d76c20d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f49d76c2450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f49d76c27d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f49d76c2b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f49d76c1020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f49d76c13b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f49d76c1780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f49d7686c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f49d76830d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f49d75a0cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f49d75a0cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f49d755ea40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f49d755ea40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f49d7547570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f49d7547570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f49d7547d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f49d7547d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f49d7546160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f49d7546160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f49d7546940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f49d7546940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f49d7546d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f49d7545540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f49d7545540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f49d7525620" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f49d7525620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f49d7525df0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f49d7525df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f49d7523220" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f49d7523220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f49d7523a00" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f49d7523a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f49d7523dd0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f49d70495e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f49d703d9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f49d7022cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6dd8020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6dd8020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f49d6dd87b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d6dd87b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6bb3d00" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6bb3d00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6b68cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6b68cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6b31530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6b31530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f49d6b31880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6b23980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6b23980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f49d6b23cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f49d64f0360" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f49d64e9140" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f49d64e1020" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f49d64c9c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f49d645f330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f49d7d8f020" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7d8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f49d7d90a20" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f49d7d90a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f49d7d90da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7d8b020" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7d8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f49d7d81130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f49d7d81130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f49d7d8a1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f49d7d8a340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f49d7d817d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f49d7d81960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f49d7d81af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f49d7d81c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f49d7d81e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f49d7d8a020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f49d7d814b0"/>
        <function-ref name="node_id" scoped="" ref="0x7f49d7d81640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f49d7d7c700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f49d7d7c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d7ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7d7e1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7d7e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d7e520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f49d7d7c020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f49d7d7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f49d7d7cde0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f49d7d7cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d7b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f49d7d7e810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f49d7d7e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f49d7d7d980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f49d7d7db10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f49d7d7d020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f49d7d7d1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f49d7d7d340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f49d7d7d4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f49d7d7d660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f49d7d7d7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f49d7d7eb90"/>
        <function-ref name="node_id" scoped="" ref="0x7f49d7d7ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7d80640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7d80640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d809c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f49d7d66900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f49d7d66900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d66c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f49d7d44de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f49d7d44de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f49d7d49c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f49d7d49310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f49d7d494a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f49d7d49630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f49d7d49180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f49d7d497c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f49d7d49950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f49d7d49ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7d4d850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7d4d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d4dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f49d7d33830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f49d7d33830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f49d7d327f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f49d7d33d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f49d7d32020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f49d7d321b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f49d7d33bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f49d7d32340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f49d7d324d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f49d7d32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f49d7d32af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f49d7d32af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f49d7d32e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7d331c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7d331c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7d33540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f49d7eb2c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f49d7eb2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f49d808d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f49d800f9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f49d800f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f49d800fd20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f49d812a020"/>
        <function-ref name="sleep" scoped="" ref="0x7f49d812a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f49d7f503d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f49d7f503d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f49d7f50750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f49d7d4b8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f49d7d4b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f49d7cfe7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f49d7d4bdc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f49d7cfe020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f49d7cfe1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f49d7d4bc30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f49d7cfe340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f49d7cfe4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f49d7cfe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f49d7cf18d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f49d7cf18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7cf1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f49d7cf2110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f49d7cf2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f49d7cf2490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f49d7cf11d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f49d7cf11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7cf1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f49d7cf2780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f49d7cf2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7cf2b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f49d7cf2c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f49d7cf2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f49d822a940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f49d822a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d822acc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d822ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f49d82371e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f49d82371e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d8237560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f49d82376f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f49d8237880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f49d7ddb040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f49d7ddb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d7ddb3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d7ddb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f49d7dd6490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f49d7dd6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f49d7dd6810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f49d7dd69a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f49d7dd6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f49d7ddc140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f49d7ddc140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7ddc4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f49d7ddc650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f49d7ddc7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f49d7cd8bc0" loc="18:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f49d7cd8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d7cd7020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d7cd71b0"/>
        <function-ref name="start" scoped="" ref="0x7f49d7cd7340"/>
        <function-ref name="stop" scoped="" ref="0x7f49d7cd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSendTask" ref="0x7f49d7c33bf0" loc="88:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSendTask" scoped="" ref="0x7f49d7c33bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d7c32020"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d7c321b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f49d7cd9660" loc="16:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f49d7cd9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f49d7cd99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f49d7cd8020" loc="17:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f49d7cd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d7cd83a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d7cd8530"/>
        <function-ref name="start" scoped="" ref="0x7f49d7cd86c0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d7cd8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f49d7c80e30" loc="21:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7f49d7c80e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d7cd11e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f49d7c78160" loc="28:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d7c78160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7c784e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d7c78670"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d7c78800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d7c78990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d7c78b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f49d7c65440" loc="30:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d7c65440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d7c657c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d7c65950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d7c65ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d7c65c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d7c65e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTramaTDMA" ref="0x7f49d7c62270" loc="33:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerTramaTDMA" scoped="" ref="0x7f49d7c62270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d7c536e0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7c61cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d7c55a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d7c555f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d7c52020"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d7c53b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d7c55170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d7c62e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d7c530d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d7c61360"/>
        <function-ref name="stop" scoped="" ref="0x7f49d7c61830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f49d7c34c80" loc="87:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7f49d7c34c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d7c330a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d7c33230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f49d7c630c0" loc="31:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d7c630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d7c63440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d7c40500" loc="35:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d7c40500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d7c40880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d7c40a10"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d7c40ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d7c40d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d7c4c020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7c4c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d7c4c340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d7c4c980"/>
        <function-ref name="set" scoped="" ref="0x7f49d7c4c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d7c4c660"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d7c4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f49d7c77870" loc="22:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7f49d7c77870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7c77bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d7c77d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d7c86020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d7c861b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d7c86340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f49d7cd2020" loc="20:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7f49d7cd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d7cd23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d7cd2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d7cd26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d7cd2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d7cd29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f49d7c679b0" loc="23:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7f49d7c679b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d7c67d30"/>
        <function-ref name="source" scoped="" ref="0x7f49d7c81020"/>
        <function-ref name="address" scoped="" ref="0x7f49d7c811b0"/>
        <function-ref name="destination" scoped="" ref="0x7f49d7c81340"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d7c814d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d7c81660"/>
        <function-ref name="type" scoped="" ref="0x7f49d7c817f0"/>
        <function-ref name="setType" scoped="" ref="0x7f49d7c81980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d7c81b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d7c81ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d7c81e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f49d7c78dd0" loc="29:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d7c78dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d7c66180"/>
        <function-ref name="source" scoped="" ref="0x7f49d7c66310"/>
        <function-ref name="address" scoped="" ref="0x7f49d7c664a0"/>
        <function-ref name="destination" scoped="" ref="0x7f49d7c66630"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d7c667c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d7c66950"/>
        <function-ref name="type" scoped="" ref="0x7f49d7c66ae0"/>
        <function-ref name="setType" scoped="" ref="0x7f49d7c66c70"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d7c66e00"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d7c65020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d7c651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f49d7c52650" loc="34:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f49d7c52650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d7c4ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7c501e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d7c4e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d7c50ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d7c4d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d7c4d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d7c50660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d7c51390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d7c4e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d7c51860"/>
        <function-ref name="stop" scoped="" ref="0x7f49d7c51d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f49d7bbd240" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d7bbd240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d7bbd5c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d7bbd750"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d7bbd8e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d7bbda70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d7bbdc00"/>
        <function-ref name="get" scoped="" ref="0x7f49d7bbdd90"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d7bbc020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d7bbc660"/>
        <function-ref name="set" scoped="" ref="0x7f49d7bbc1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d7bbc340"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d7bbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f49d7bb01d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f49d7bb01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7bb0550"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7bb06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7bb0870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7bb0a00"/>
        <function-ref name="get" scoped="" ref="0x7f49d7bb0b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7bb0d20"/>
        <function-ref name="set" scoped="" ref="0x7f49d7bb6020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7bb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7bb95c0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7bb95c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7bb9940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f49d7bb64d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f49d7bb64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7bb6850"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7bb69e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7bb6b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7bb6d00"/>
        <function-ref name="get" scoped="" ref="0x7f49d7bb5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7bb51b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7bb5340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7bb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f49d7bb9bc0" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d7bb9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d7bb8020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d7bb81b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d7bb8340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d7bb84d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d7bb8660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7bb87f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d7bb8980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d7bb7020"/>
        <function-ref name="set" scoped="" ref="0x7f49d7bb8b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d7bb8ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d7bb8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f49d7bb57f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f49d7bb57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7bb5b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7bb5d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7baf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7baf1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7baf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7baf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7baf660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7baf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f49d7bbad80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f49d7bbad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b93180"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b93310"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b934a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b93630"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b937c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b93950"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b93ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b93c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f49d7b92020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f49d7b92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b92530"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b92850"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b929e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b92b70"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b92d00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f49d7b90600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7b90600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7b90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f49d7b91380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f49d7b91380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b91700"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b91890"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b91a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b91bb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b91d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b90020"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b901b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f49d7b75580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f49d7b75580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b75900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b75a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b75c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b73980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b74340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b74660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b747f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b74980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b74b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b74ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b73020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b731b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b73340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b734d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b75db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b73660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f49d7b5c710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f49d7b5c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b5ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b5cc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b5cdb0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b5aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b5b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b5b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b5b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b5b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b5b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b5b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b5bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b5bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b5be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b5a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b5a2b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b5a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b5a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b5b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b5a760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b5a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f49d7ad3d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f49d7ad3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ad20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ad2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ad2400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ad01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ad2720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ad28b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ad2a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ad2bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ad2d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ad1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ad11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ad1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ad14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ad1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ad18f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ad1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ad1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ad2590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ad1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ad0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f49d7ad8d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f49d7ad8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ad70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ad7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ad7400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ad51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ad7720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ad78b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ad7a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ad7bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ad7d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ad6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ad61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ad6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ad64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ad6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ad68f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ad6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ad6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ad7590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ad6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ad5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f49d7b00d50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f49d7b00d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7aff100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7aff290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7aff420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7afd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7aff740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7aff8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7affa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7affbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7affd80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7afe020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7afe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7afe340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7afe4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7afe760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7afe8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7afea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7afec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7aff5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7afeda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7afd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f49d7b57710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f49d7b57710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b57a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b57c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b57db0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b55a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b56340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b564d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b56660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b567f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b56980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b56b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b56ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b56e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b55120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b552b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b55440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b555d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b56020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b55760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f49d7b3e8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f49d7b3e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b3ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b3edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b3c020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b3bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b3c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b3c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b3c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b3c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b3c980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b3cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b3cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b3ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b3b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b3b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b3b440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b3b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b3b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b3c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b3b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b3ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f49d7b248a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f49d7b248a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b24c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b24db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b23020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b22c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b23340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b234d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b23660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b237f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b23980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b23b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b23ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b23e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b22020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b222b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b22440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b225d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b22760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b231b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b228f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b22a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f49d7b108a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f49d7b108a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b10c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b10db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b0f020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b0ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b0f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b0f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b0f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b0f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b0f980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b0fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b0fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b0fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b0e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b0e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b0e440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b0e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b0e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b0f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b0e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b0ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f49d7afbd50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f49d7afbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7afa100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7afa290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7afa420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7af81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7afa740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7afa8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7afaa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7afabf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7afad80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7af9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7af91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7af9340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7af94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7af9760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7af98f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7af9a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7af9c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7afa5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7af9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7af8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f49d7ae7d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f49d7ae7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ae60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ae6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ae6400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ae41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ae6720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ae68b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ae6a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ae6bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ae6d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ae5020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ae51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ae5340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ae54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ae5760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ae58f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ae5a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ae5c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ae6590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ae5da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ae4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f49d7ac9d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f49d7ac9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ac7100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ac7290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ac7420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ac51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ac7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ac78d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ac7a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ac7bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ac7d80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ac6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ac61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ac6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ac64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ac6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ac68f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ac6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ac6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ac75b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ac6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ac5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f49d7b6ed50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f49d7b6ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b6d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b6d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b6d420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b6b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b6d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b6d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b6da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b6dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b6dd80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b6c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b6c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b6c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b6c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b6c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b6c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b6ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b6cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b6d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b6cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f49d7af8580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f49d7af8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7af8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7af8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7af8c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7af6980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7af7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7af71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7af7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7af74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7af7660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7af77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7af7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7af7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7af7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7af6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7af61b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7af6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7af64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7af8db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7af6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7af67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f49d7b69d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f49d7b69d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b68100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b68290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b68420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b661b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b68740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b688d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b68a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b68bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b68d80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b67020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b671b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b67340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b674d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b67760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b678f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b67a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b67c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b685b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b67da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f49d7b50e50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f49d7b50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b4f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b4f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b4f530"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b4d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b4f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b4f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b4fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b4fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b4e020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b4e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b4e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b4e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b4e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b4e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b4ea80"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b4ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b4eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b4f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b4d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f49d7b35020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f49d7b35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b35530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b356c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b334d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b359e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b35b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b35d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b34020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b341b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b34340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b344d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b34660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b34a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b34c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b34da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b33020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b35850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b331b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b33340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f49d7b1c020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f49d7b1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b1c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b1c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b1c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b1a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b1c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b1cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b1cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b1b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b1b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b1b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b1b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b1b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b1ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b1bc10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b1bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b1a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b1c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b1a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b1a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f49d7b08020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f49d7b08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b08530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b086c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b064d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b089e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b08b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b08d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b071b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b07340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b07660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b07a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b07c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b07da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b06020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b08850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b061b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f49d7b7b580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f49d7b7b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b7b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b7ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b7bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b79980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b7a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b7a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b7a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b7a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b7a660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b7a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b7a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b7ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b7aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b79020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b791b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b79340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b794d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b7bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b79660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f49d7b61580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f49d7b61580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b61a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b61b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b61d20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b5fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b60340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b604d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b60660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b607f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b60980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b60b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b60ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b60e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b5f120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b5f2b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b5f440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b5f5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b60020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b5f760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f49d7b48710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f49d7b48710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b48a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b48c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b48db0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b46a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b471b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b47340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b474d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b47660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b477f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b47980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b47b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b47ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b47e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b46120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b462b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b46440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b465d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b47020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b46760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f49d7b03580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f49d7b03580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b03900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b03a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b03c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b00980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b01020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b011b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b01340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b01660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b017f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b01980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b01b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b01ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b00020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b001b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b00340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b004d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b03db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b00660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f49d7adf570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f49d7adf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7adf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7adfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7adfc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7add980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ade020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ade1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ade340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ade4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ade660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ade7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ade980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7adeb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7adeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7add020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7add1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7add340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7add4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7adfda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7add660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7add7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f49d7acb570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f49d7acb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7acb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7acba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7acbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ac9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7aca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7aca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7aca340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7aca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7aca660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7aca7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7aca980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7acab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7acaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ac9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ac91b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ac9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ac94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7acbda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ac9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ac97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f49d7aee580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f49d7aee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7aee900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7aeea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7aeec20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7aec980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7aed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7aed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7aed340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7aed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7aed660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7aed7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7aed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7aedb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7aedca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7aec020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7aec1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7aec340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7aec4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7aeedb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7aec660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7aec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f49d7b43710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f49d7b43710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b43c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b43e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b42020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b41c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b42340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b424d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b42660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b427f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b42980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b42b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b42ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b42e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b41020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b412b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b41440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b415d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b41760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b421b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b418f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b41a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f49d7b298a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f49d7b298a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b29c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b29db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b28020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b27c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b28340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b284d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b28660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b287f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b28980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b28b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b28ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b28e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b27020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b272b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b27440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b275d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b27760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b281b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b278f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b27a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f49d7b158a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f49d7b158a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b15c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b15db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b14020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b13c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b14340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b14660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b147f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b14980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b14b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b14ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b14e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b13020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b132b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b13440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b135d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b13760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b141b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b138f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b13a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f49d7addd40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f49d7addd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7adc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7adc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7adc400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ada1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7adc720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7adc8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7adca40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7adcbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7adcd60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7adb020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7adb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7adb340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7adb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7adb760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7adb8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7adba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7adbc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7adc590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7adbda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ada020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f49d7af6d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f49d7af6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7af50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7af5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7af5400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7af31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7af5720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7af58b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7af5a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7af5bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7af5d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7af4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7af41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7af4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7af44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7af4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7af48f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7af4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7af4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7af5590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7af4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7af3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f49d7b73d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f49d7b73d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b72100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b72290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b72420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b701b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b72740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b728d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b72a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b72bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b72d80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b71020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b711b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b71340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b714d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b71760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b718f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b71a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b71c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b725b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b71da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f49d7b5ae50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f49d7b5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b59210"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b593a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b59530"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b57340"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b59850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b59b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b59d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b58020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b581b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b58340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b584d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b58660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b588f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b58a80"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b58c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b58da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b596c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b57020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f49d7b1a8a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f49d7b1a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b1ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b1adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b19020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b18c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b19340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b19660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b197f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b19980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b19b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b19ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b19e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b18020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b182b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b18440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b185d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b18760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b191b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b188f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b18a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f49d7b55e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f49d7b55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b54210"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b543a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b54530"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b52340"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b54850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b54b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b54d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b53020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b531b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b53340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b534d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b53660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b538f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b53a80"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b53c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b53da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b546c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b52020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f49d7b3a020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f49d7b3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b3a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b3a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b384d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b3a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b3ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b3ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b39020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b391b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b39340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b39660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b39a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b39c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b39da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b38020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b3a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b381b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f49d7b21020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f49d7b21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b21530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b216c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b1f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b219e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b21b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b21d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b20020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b201b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b20340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b204d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b20660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b207f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b20a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b20c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b20da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b1f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b21850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b1f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f49d7b0d020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f49d7b0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b0d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b0d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b0d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b0b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b0d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b0db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b0dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b0c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b0c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b0c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b0c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b0ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b0cc10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b0cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b0b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b0d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b0b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b0b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f49d7af1d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f49d7af1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7af0100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7af0290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7af0420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7aee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7af0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7af08d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7af0a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7af0bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7af0d80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7aef020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7aef1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7aef340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7aef4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7aef760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7aef8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7aefa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7aefc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7af05b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7aefda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7aee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f49d7b7e530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f49d7b7e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b7e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b7ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b7ebd0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b8b980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b8c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b8c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b8c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b8c660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b8c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b8c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b8cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b8cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b8b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b8b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b8b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b8b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b7ed60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b8b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b8b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f49d7b66580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f49d7b66580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b66900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b66a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b66c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b64980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b65340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b65660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b657f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b65980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b65b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b65ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b64020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b641b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b64340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b644d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b66db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b64660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f49d7b4d710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f49d7b4d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b4da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b4dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b4ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b4ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b4c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b4c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b4c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b4c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b4c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b4c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b4cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b4cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b4ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b4b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b4b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b4b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b4b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b4c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b4b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b4b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f49d7b338a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f49d7b338a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b33c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b33db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b32020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b31c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b32340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b324d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b32660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b327f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b32980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b32b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b32ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b32e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b31020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b312b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b31440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b315d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b31760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b321b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b318f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b31a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f49d7aecd50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f49d7aecd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7aeb100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7aeb290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7aeb420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ae91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7aeb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7aeb8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7aeba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7aebbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7aebd80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7aea020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7aea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7aea340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7aea4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7aea760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7aea8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7aeaa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7aeac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7aeb5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7aeada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ae9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f49d7ae4570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f49d7ae4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ae48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ae4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ae4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ae2980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ae3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ae31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ae3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ae34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ae3660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ae37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ae3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ae3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ae3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ae2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ae21b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ae2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ae24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ae4da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ae2660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ae27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f49d7ad5570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f49d7ad5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ad58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ad5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ad5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ad3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ad4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ad41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ad4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ad44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ad4660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ad47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ad4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ad4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ad4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ad3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ad31b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ad3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ad34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ad5da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ad3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ad37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f49d7b2e8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f49d7b2e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b2ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b2edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b2d020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b2cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b2d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b2d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b2d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b2d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b2d980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b2db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b2dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b2de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b2c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b2c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b2c440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b2c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b2c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b2d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b2c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b2ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f49d7ae9580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f49d7ae9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ae9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ae9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ae9c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ae7980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ae8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ae81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ae8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ae84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ae8660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ae87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ae8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ae8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ae8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ae7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ae71b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ae7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ae74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ae9db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ae7660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ae77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f49d7b79d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f49d7b79d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b77100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b77290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b77420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b77740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b778d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b77a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b77bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b77d80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b76020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b761b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b76340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b764d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b76760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b768f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b76a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b76c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b775b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b76da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f49d7b5fe50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f49d7b5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b5e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b5e3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b5e530"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b5c340"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b5e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b5e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b5eb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b5ed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b5d020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b5d1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b5d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b5d4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b5d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b5d8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b5da80"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b5dc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b5dda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b5e6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b5c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f49d7b46e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f49d7b46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b45210"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b453a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b45530"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b43340"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b45850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b45b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b45d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b44020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b441b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b44340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b444d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b44660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b448f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b44a80"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b44c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b44da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b456c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b43020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f49d7af3580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f49d7af3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7af3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7af3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7af3c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7af1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7af2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7af21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7af2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7af24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7af2660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7af27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7af2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7af2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7af2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7af1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7af11b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7af1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7af14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7af3db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7af1660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7af17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f49d7ada570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f49d7ada570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ada8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7adaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7adac10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ad8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ad9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ad91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ad9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ad94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ad9660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ad97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ad9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ad9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ad9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ad8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ad81b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ad8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ad84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7adada0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ad8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ad87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f49d7b40020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f49d7b40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b40530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b406c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b3e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b409e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b40b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b40d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b3f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b3f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b3f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b3f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b3f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b3f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b3fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b3fc10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b3fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b3e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b40850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b3e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f49d7b26020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f49d7b26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b263a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b26530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b266c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b244d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b269e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b26b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b26d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b251b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b25340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b254d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b25660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b257f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b25a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b25c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b25da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b24020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b26850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f49d7b12020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f49d7b12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b12530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b126c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b104d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b129e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b12b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b12d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b111b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b11340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b11660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b11a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b11c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b11da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b10020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b12850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f49d7b70580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f49d7b70580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b70900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b70a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b70c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b6e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b6f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b6f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b6f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b6f660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b6f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b6f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b6fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b6fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b6e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b6e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b6e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b6e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b70db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b6e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f49d7b17020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f49d7b17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b17530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b176c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b154d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b179e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b17b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b17d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b161b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b16340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b16660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b16a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b16c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b16da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b15020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b17850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f49d7b6b580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f49d7b6b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b6b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b6ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b6bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b69980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b6a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b6a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b6a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b6a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b6a660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b6a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b6a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b6ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b6aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b69020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b691b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b69340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b694d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b6bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b69660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f49d7b52710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f49d7b52710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b52a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b52c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b52db0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b50a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b51340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b514d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b51660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b517f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b51980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b51b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b51ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b51e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b50120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b502b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b50440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b505d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b51020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b50760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f49d7b388a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f49d7b388a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b38c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b38db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b37020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b36c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b37340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b374d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b37660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b377f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b37980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b37b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b37ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b37e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b36020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b362b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b36440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b365d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b36760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b371b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b368f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b36a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f49d7b1f8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f49d7b1f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b1fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b1fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b1e020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b1dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b1e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b1e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b1e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b1e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b1e980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b1eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b1eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b1ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b1d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b1d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b1d440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b1d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b1d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b1e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b1d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b1da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f49d7b0b8a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f49d7b0b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b0bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b0bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b0a020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b09c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b0a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b0a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b0a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b0a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b0a980"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b0ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b0aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b0ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b09020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b092b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b09440"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b095d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b09760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b0a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b098f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b09a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f49d7b8bd50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f49d7b8bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b7d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b7d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b7d420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b7b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b7d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b7d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b7da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b7dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b7dd80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b7c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b7c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b7c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b7c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b7c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b7c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b7ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b7cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b7d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b7cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f49d7b64d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f49d7b64d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b63100"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b63290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b63420"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b611b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b63740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b638d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b63a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b63bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b63d80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b62020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b621b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b62340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b624d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b62760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b628f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b62a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b62c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b635b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b62da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f49d7b4be50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f49d7b4be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b4a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b4a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b4a530"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b48340"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b4a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b4a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b4ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b4ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b49020"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b491b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b49340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b494d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b49660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b498f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b49a80"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b49c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b49da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b4a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b48020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f49d7b30020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f49d7b30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b30530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b306c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b2e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b309e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b30b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b30d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b2f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b2f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b2f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b2f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b2f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b2fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b2fc10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b2fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b2e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b30850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b2e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f49d7ae2d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f49d7ae2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ae10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ae1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ae1400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7adf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ae1720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ae18b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ae1a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ae1bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ae1d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ae0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ae01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ae0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ae04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ae0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ae08f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ae0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ae0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ae1590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ae0da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7adf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f49d7ad0560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f49d7ad0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ad08e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ad0a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ad0c00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ace980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7acf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7acf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7acf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7acf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7acf660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7acf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7acf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7acfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7acfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ace020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ace1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ace340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ace4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ad0d90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ace660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ace7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f49d7afd580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f49d7afd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7afd900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7afda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7afdc20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7afb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7afc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7afc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7afc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7afc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7afc660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7afc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7afc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7afcb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7afcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7afb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7afb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7afb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7afb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7afddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7afb660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7afb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f49d7b2b020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f49d7b2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b2b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b2b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b2b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b294d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b2b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b2bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b2bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b2a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b2a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b2a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b2a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b2a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b2a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b2aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b2ac10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b2ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b29020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b2b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b291b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f49d7aced40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f49d7aced40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7acd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7acd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7acd400"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7acb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7acd720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7acd8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7acda40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7acdbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7acdd60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7acc020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7acc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7acc340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7acc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7acc760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7acc8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7acca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7accc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7acd590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7accda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7acb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f49d7ac5580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f49d7ac5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7ac5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7ac5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7ac5c20"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7ac3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7ac4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7ac41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7ac4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7ac44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7ac4660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7ac47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7ac4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7ac4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7ac4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7ac3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7ac31b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7ac3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7ac34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7ac5db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7ac3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7ac37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f49d7b068f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f49d7b068f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7b050a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7b05230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7b053c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7b031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7b056e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7b05870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7b05a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7b05b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7b05d20"/>
        <function-ref name="get" scoped="" ref="0x7f49d7b04020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7b041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7b04340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7b044d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7b04760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7b048f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7b04a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7b04c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7b05550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7b04da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7b03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7ac0d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7ac0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a910e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a91270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a91400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a8f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a91720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a918b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a91a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a91bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a91d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a90020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a90340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a90760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a908f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a90a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a90c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a90da0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a91590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a8c260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a8c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a8c5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a8c770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a8c900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a8a660"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a8cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a8cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a8b020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a8b340"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a8b4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a8b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a8b7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a8b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a8bc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a8bda0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a8a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a8a1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a8a340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a8ca90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a87740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a87740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a87ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a87c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a87de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a85a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a86340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a864d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a86660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a867f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a86980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a86b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a86ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a86e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a85120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a852b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a85440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a855d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a85760"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a86020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a858f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a82b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a82b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a81020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a811b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a81340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a7f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a81660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a817f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a81980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a81b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a81ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a81e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a80020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a801b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a80340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a805d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a80760"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a808f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a80a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a80c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a814d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a80da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a7c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a7c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a7c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a7c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a7a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a7ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a7cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a7cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a7b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a7b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a7b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a7b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a7ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a7bc10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a7bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a7a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a7a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a7c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a77540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a77540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a778c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a77a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a77be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a75980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a76340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a76660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a767f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a76980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a76b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a76ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a75020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a751b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a75340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a754d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a75660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a77d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a72b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a72b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a71020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a711b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a71340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a6f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a71660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a717f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a71980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a71b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a71ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a71e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a70020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a701b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a70340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a705d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a70760"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a708f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a70a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a70c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a714d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a70da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a6c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a6c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a6c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a6c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a6c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a694d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a6ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a6cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a6cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a6a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a6a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a6a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a6a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a6a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a6a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a6aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a6ac10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a6ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a69020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a6c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a66540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a66540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a668c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a66a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a66be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a64980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a65340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a65660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a657f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a65980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a65b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a65ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a64020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a641b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a64340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a644d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a64660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a66d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a61b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a61b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a60020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a60340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a5e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a60660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a607f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a60980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a60b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a60ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a60e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a5f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a5f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a5f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a5f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a5f760"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a5f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a5fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a5fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a604d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a5fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a5b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a5b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a5b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a5b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a594d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a5ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a5bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a5bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a5a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a5a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a5a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a5a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a5a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a5a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a5aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a5ac10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a5ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a59020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a5b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a56540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a56540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a568c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a56a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a56be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a54980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a55020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a551b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a55340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a55660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a557f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a55980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a55b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a55ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a54020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a541b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a54340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a544d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a54660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a56d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a547f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a51d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a51d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a500e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a50270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a50400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a4e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a50720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a508b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a50a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a50bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a50d60"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a4f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a4f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a4f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a4f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a4f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a4f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a4fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a4fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a4fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a50590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a4b260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a4b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a4b5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a4b770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a4b900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a49660"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a4bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a4bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a4a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a4a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a4a340"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a4a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a4a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a4a7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a4a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a4ac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a4ada0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a49020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a491b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a49340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a4ba90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a46740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a46740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a46ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a46c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a46de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a44a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a45340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a454d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a45660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a457f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a45980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a45b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a45ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a45e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a44120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a442b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a44440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a445d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a44760"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a45020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a40b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a40b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a3f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a3f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a3f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a3d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a3f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a3f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a3f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a3fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a3fca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a3fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a3e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a3e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a3e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a3e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a3e760"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a3e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a3ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a3ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a3f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a3eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a3a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a3a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a3a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a3a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a384d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a3aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a3abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a3ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a39020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a391b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a39340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a39660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a397f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a39a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a39c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a39da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a38020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a3a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a35540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a35540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a358c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a35a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a35be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a33980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a34020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a34340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a34660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a347f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a34980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a34b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a34ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a33020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a331b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a33340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a334d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a33660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a35d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a30b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a30b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a2f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a2f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a2f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a2d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a2f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a2f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a2f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a2fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a2fca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a2fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a2e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a2e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a2e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a2e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a2e760"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a2e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a2ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a2ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a2f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a2a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a2a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a2a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a2a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a284d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a2aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a2abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a2ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a29020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a291b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a29340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a294d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a29660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a297f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a29a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a29c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a29da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a28020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a281b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a2a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a25540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a25540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a258c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a25a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a25be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a23980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a24020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a241b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a24340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a24660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a247f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a24980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a24b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a24ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a23020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a231b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a23340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a234d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a23660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a25d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a20b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a20b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a1f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a1f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a1f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a1d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a1f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a1f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a1f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a1fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a1fca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a1fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a1e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a1e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a1e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a1e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a1e760"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a1e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a1ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a1ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a1f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a1eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a1a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a1a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a1a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a1a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a1a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a174d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a1aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a1abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a1ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a18020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a181b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a18340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a18660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a18a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a18c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a18da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a17020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a1a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a14540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a14540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a148c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a14a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a14be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a12980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a13020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a13340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a13660"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a137f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a13980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a13b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a13ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a12020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a121b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a12340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a124d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a12660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a14d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a0fdc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a0fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a0e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a0e310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a0e4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a0c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a0e7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a0e950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a0eae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a0ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a0ee00"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a0d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a0d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a0d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a0d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a0d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a0d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a0da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a0dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a0dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a0e630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a09260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a09260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a095e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a09770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a09900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a07660"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a09c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a09db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a08020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a08340"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a084d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a08660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a087f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a08980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a08c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a08da0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a07020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a071b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a07340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a09a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7a04740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7a04740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7a04ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7a04c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7a04de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7a02a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7a031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7a03340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7a034d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7a03660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7a037f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7a03980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7a03b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7a03ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7a03e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7a02120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7a022b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7a02440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7a025d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7a02760"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7a03020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7a028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79ffb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79ffb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79fe020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79fe1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79fe340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79fe660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79fe7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79fe980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79feb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79feca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79fee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79fd1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79fd5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79fd760"/>
        <function-ref name="set" scoped="" ref="0x7f49d79fd8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79fda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79fdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79fe4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79f9060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79f93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79f9570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79f9700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79f74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79f9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79f9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79f9d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79f81b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79f8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79f84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79f8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79f8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79f8c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d79f8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79f7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79f71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79f9890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79f4540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79f4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79f48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79f4a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79f4be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79f2980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79f31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79f3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79f3660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79f37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79f3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79f3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79f3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79f2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79f21b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d79f2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79f24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79f2660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79f4d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79efb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79efb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79ed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79ed1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79ed340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79ed660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79ed7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79ed980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79edb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79edca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79ede30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79ec1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79ec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79ec5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79ec760"/>
        <function-ref name="set" scoped="" ref="0x7f49d79ec8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79eca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79ecc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79ed4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79e8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79e8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79e83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79e8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79e8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79e64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79e8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79e8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79e8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79e71b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79e7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79e74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79e7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79e77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79e7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79e7c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d79e7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79e6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79e8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79e3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79e3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79e38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79e3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79e3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79e1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79e21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79e2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79e2660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79e27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79e2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79e2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79e2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79e1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79e11b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d79e1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79e14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79e1660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79e3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79deb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79deb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79dd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79dd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79dd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79dd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79dd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79dd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79ddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79ddca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79dde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79dc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79dc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79dc760"/>
        <function-ref name="set" scoped="" ref="0x7f49d79dc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79dca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79dcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79dd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79d8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79d8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79d83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79d8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79d8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79d64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79d8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79d8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79d8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79d71b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79d7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79d74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79d7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79d7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79d7c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d79d7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79d6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79d61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79d8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79d3540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79d3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79d38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79d3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79d3be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79d1980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79d2340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79d24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79d2660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79d27f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79d2b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79d2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79d1020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79d11b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d79d1340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79d14d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79d1660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79d3d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79ceb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79ceb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79cd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79cd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79cb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79cd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79cd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79cd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79cdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79cdca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79cde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79cc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79cc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79cc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79cc760"/>
        <function-ref name="set" scoped="" ref="0x7f49d79cc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79cca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79ccc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79cd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79ccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79c8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79c8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79c83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79c8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79c8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79c64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79c8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79c8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79c8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79c7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79c71b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79c7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79c74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79c7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79c77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79c7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79c7c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d79c7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79c6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79c61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79c8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79c2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79c28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79c2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79c2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79c0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79c1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79c11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79c1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79c1660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79c17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79c1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79c1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79c1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79c0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79c01b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d79c0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79c04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79c0660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79c2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79bdb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79bdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79bc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79bc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79bc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79bc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79bc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79bcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79bcca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79bce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79bb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79bb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79bb760"/>
        <function-ref name="set" scoped="" ref="0x7f49d79bb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79bba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79bc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79b7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79b73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79b7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79b7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79b54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79b7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79b7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79b7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79b6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79b61b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79b6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79b64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79b6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79b6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79b6c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d79b6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79b5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79b51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79b7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79b2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79b2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79b28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79b2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79b2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79b0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79b11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79b1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79b1660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79b17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79b1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79b1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79b1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79b0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79b01b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d79b0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79b04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79b0660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79b2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79adb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79adb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79ac1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79ac340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79ac660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79ac7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79ac980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79acb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79acca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79ace30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79ab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79ab1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79ab340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79ab5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79ab760"/>
        <function-ref name="set" scoped="" ref="0x7f49d79ab8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79aba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79abc10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79ac4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79abda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79a7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79a73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79a7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79a7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79a54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79a7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79a7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79a7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79a61b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d79a6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79a64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79a6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79a67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79a6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79a6c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d79a6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79a5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79a51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79a7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d79a2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d79a2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79a28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d79a2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d79a2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79a0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d79a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79a11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d79a1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79a14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79a1660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79a17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79a1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d79a1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79a1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d79a0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79a01b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d79a0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79a04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79a0660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d79a2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d799db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d799db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d799b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d799b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d799b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7999020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d799b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d799b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d799b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d799bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d799bca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d799be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d799a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d799a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d799a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d799a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d799a760"/>
        <function-ref name="set" scoped="" ref="0x7f49d799a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d799aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d799ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d799b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d799ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7996060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7996060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79963e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7996570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7996700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d79944d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7996a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7996bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7996d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7995020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d79951b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7995340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d79954d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7995660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d79957f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7995a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7995c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d7995da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7994020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d79941b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7996890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7994340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f49d7991540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f49d7991540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d79918c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7991a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7991be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d798f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7990020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79901b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7990340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7990660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79907f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7990980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7990b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7990ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d798f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d798f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d798f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d798f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d798f660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7991d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d798f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d7902610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d7902610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7902990"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7902b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7902cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7900980"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7901020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d79011b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7901340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d79014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7901660"/>
        <function-ref name="get" scoped="" ref="0x7f49d79017f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7901980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7901b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7901ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7900020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d79001b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d7900340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d79004d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7900660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7902e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d79007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d7914480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d7914480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7914800"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d7914990"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7914b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7914cb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7914e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7902020"/>
        <function-ref name="set" scoped="" ref="0x7f49d79021b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7902340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d78fdde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d78fdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d78fc180"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d78fc310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d78fc4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d78fa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d78fc7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d78fc950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d78fcae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d78fcc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d78fce00"/>
        <function-ref name="get" scoped="" ref="0x7f49d78fb020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d78fb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d78fb340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d78fb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d78fb760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d78fb8f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d78fba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d78fbc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d78fbda0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d78fc630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d78fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d78feb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d78feb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d78fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d78fd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d78fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d78fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d78fd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d78fd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d78fd980"/>
        <function-ref name="clr" scoped="" ref="0x7f49d78fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d78f7480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d78f7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d78f7800"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d78f7990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d78f7b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d78f57f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d78f7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d78f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d78f61b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d78f6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d78f64d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d78f6660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d78f67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d78f6980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d78f6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d78f6da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d78f5020"/>
        <function-ref name="set" scoped="" ref="0x7f49d78f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d78f5340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d78f54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d78f7cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d78f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d78f81b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d78f81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d78f8530"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d78f86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d78f8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d78f89e0"/>
        <function-ref name="get" scoped="" ref="0x7f49d78f8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d78f8d00"/>
        <function-ref name="set" scoped="" ref="0x7f49d78f7020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d78f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d78e6020" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d78e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d78e63a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d78e6530"/>
        <function-ref name="start" scoped="" ref="0x7f49d78e66c0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d78e6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d78e5050" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d78e5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d78e53d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d78e5560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d78e56f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d78e5880"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d78e5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f49d78e4df0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f49d78e4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d78e31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d78e3450" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d78e3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d78e37d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d78e3960"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d78e3af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d78e3c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d78e3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f49d78df430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d78df430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d78dbb00"/>
        <function-ref name="clear" scoped="" ref="0x7f49d78d12a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d78db3d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d78d19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f49d78c4430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d78c4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f49d78c47b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f49d78c4940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f49d78c4ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f49d78c4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d78e4210" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d78e4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d78e4590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f49d78d9350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d78d9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d78d96d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d78d9860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d78d99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d78e2120" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d78e2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d78e24a0"/>
        <function-ref name="source" scoped="" ref="0x7f49d78e2630"/>
        <function-ref name="address" scoped="" ref="0x7f49d78e27c0"/>
        <function-ref name="destination" scoped="" ref="0x7f49d78e2950"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d78e2ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d78e2c70"/>
        <function-ref name="type" scoped="" ref="0x7f49d78e2e00"/>
        <function-ref name="setType" scoped="" ref="0x7f49d78e1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d78e11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d78e1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d78e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f49d78d0660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d78d0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d78cfce0"/>
        <function-ref name="clear" scoped="" ref="0x7f49d78cd460"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d78cf5b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d78cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d78b7080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d78b7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d78b7400"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d78b7590"/>
        <function-ref name="start" scoped="" ref="0x7f49d78b7720"/>
        <function-ref name="stop" scoped="" ref="0x7f49d78b78b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f49d78a6020" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d78a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d78a63a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d78a6530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d78a66c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d78a6850"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d78a69e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d78a6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f49d789c020" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f49d789c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f49d789c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d78b2c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d78b2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d78b1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d78b11b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d78b1340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d78b14d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d78b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d78b61d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d78b61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d78b6550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d78b66e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d78b6870"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d78b6a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d78b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f49d78b3020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f49d78b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d78b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f49d78a9dc0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d78a9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d78b0180"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d78b0310"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d78b04a0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d78b0630"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d78b07c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d78b0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f49d78a6e70" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d78a6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f49d78a4220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f49d78a43b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f49d78a4540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f49d78a46d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d78b43f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d78b43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d78b4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f49d78b0c80" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d78b0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d78af0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d78af230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d78af3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f49d78930d0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f49d78930d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f49d7893450"/>
        <function-ref name="setRetries" scoped="" ref="0x7f49d78935e0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f49d7893770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f49d7893900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f49d7893a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d78b3650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d78b3650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d78b39d0"/>
        <function-ref name="source" scoped="" ref="0x7f49d78b3b60"/>
        <function-ref name="address" scoped="" ref="0x7f49d78b3cf0"/>
        <function-ref name="destination" scoped="" ref="0x7f49d78b3e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d78b2030"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d78b21c0"/>
        <function-ref name="type" scoped="" ref="0x7f49d78b2350"/>
        <function-ref name="setType" scoped="" ref="0x7f49d78b24e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d78b2670"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d78b2800"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d78b2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f49d78a5e00" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d78a5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f49d78a71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d788d340" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d788d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d788d6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d788d850"/>
        <function-ref name="start" scoped="" ref="0x7f49d788d9e0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d788db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f49d787a9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d787a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f49d787ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f49d7879b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f49d7879b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f49d7878020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f49d78781b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f49d7878340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f49d78784d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f49d7878660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f49d787b140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d787b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d787b4c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d787b650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d787b7e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d787b970"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d787bb00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d787bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f49d7885d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f49d7885d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d787e0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d787e270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d787e400"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d787e590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d787e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f49d7879080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d7879080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f49d7879400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f49d7879590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f49d7879720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f49d78798b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f49d7886820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f49d7886820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d7886ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f49d787a020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d787a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d787a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d787a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d787a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d7887770" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d7887770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d7887af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d7887c80"/>
        <function-ref name="request" scoped="" ref="0x7f49d7887e10"/>
        <function-ref name="granted" scoped="" ref="0x7f49d788b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d788b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f49d787da30" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f49d787da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d787ddb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d7886020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d78861b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d7886340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d78864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f49d7885020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f49d7885020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d78853a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d7885530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d78856c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d7885850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d78859e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f49d787ea90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d787ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d787ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d7875390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d7875390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d7875710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d78758a0"/>
        <function-ref name="start" scoped="" ref="0x7f49d7875a30"/>
        <function-ref name="stop" scoped="" ref="0x7f49d7875bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f49d7873330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d7873330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d78736b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d7873840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d78739d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d7873b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d7873cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d7873e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d7875e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d7875e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d7874220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d78743b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d7874540"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d78746d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d7874860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d7874b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d7874b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d7873020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d7872e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d7872e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d786f220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d786f3b0"/>
        <function-ref name="start" scoped="" ref="0x7f49d786f540"/>
        <function-ref name="stop" scoped="" ref="0x7f49d786f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f49d786e7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d786e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d786eb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d786ecf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d786ee80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d786d030"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d786d1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d786d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f49d7863020" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f49d7863020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d78633a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d7863530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d78636c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d7863850"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d78639e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d7863b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f49d7858330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d7858330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d78586b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d7858840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d78589d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d7858b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d7858cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d7858e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f49d785a260" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f49d785a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d785a5e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d785a770"/>
        <function-ref name="modify" scoped="" ref="0x7f49d785a900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d785aa90"/>
        <function-ref name="resend" scoped="" ref="0x7f49d785ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d786f990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d786f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d786fd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d786e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d786e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d786e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d786e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f49d78573b0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f49d78573b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f49d7857730"/>
        <function-ref name="rand32" scoped="" ref="0x7f49d78578c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f49d7861610" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f49d7861610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d7861990"/>
        <function-ref name="stop" scoped="" ref="0x7f49d7861b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d7850920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d7850920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d7850ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d7850e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d7854020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f49d7865b00" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f49d7865b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f49d7865e80"/>
        <function-ref name="rfOff" scoped="" ref="0x7f49d786b030"/>
        <function-ref name="rxOn" scoped="" ref="0x7f49d786b1c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f49d786b350"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f49d786b4e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f49d786b670"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f49d786b800"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f49d786b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d7857b80" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d7857b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d7859020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d78591b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d7859340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d78594d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d7859660"/>
        <function-ref name="get" scoped="" ref="0x7f49d78597f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d7859980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d7858020"/>
        <function-ref name="set" scoped="" ref="0x7f49d7859b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d7859ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d7859e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f49d786d640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d786d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d786d9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d786db50"/>
        <function-ref name="request" scoped="" ref="0x7f49d786dce0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d786de70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d786c030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f49d7853020" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f49d7853020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d78534a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d7853630"/>
        <function-ref name="isState" scoped="" ref="0x7f49d78537c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d7853950"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d7853ae0"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d7853c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f49d78469e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f49d78469e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d7846d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d7844020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f49d7847a10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f49d7847a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d7847d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d7846020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f49d7848a00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f49d7848a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d7848d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d7847020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f49d77edb80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f49d77edb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f49d77f9020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f49d77f91b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f49d77f9340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f49d77f94d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f49d77f9660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f49d77f97f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f49d77f9980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f49d77f9b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f49d77f9ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f49d77f9e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f49d77f8020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f49d77f81b0"/>
        <function-ref name="sync" scoped="" ref="0x7f49d77f8340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f49d77f85d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f49d77f8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f49d77eb020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f49d77eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77ebc10"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d77ea0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f49d77f8a60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f49d77f8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f49d77f8de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f49d77ec020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f49d77ec1b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f49d77ec340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f49d77ec4d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f49d77ec660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f49d77ec7f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f49d77ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d77fe720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d77fe720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d77feaa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d77fec30"/>
        <function-ref name="request" scoped="" ref="0x7f49d77fedc0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d77fa020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d77fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f49d77e3970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f49d77e3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f49d77e3cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f49d77e3e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f49d77e2030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f49d77e21c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f49d77e2350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f49d77e24e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f49d77e2670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f49d77e2800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f49d77e2990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f49d77e2b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f49d77e2cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f49d77e2e40"/>
        <function-ref name="sync" scoped="" ref="0x7f49d77e1020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f49d77e12b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f49d77e1440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f49d77bb8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d77bb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77bbc60"/>
        <function-ref name="write" scoped="" ref="0x7f49d77bbdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f49d77dc020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d77dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f49d77dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f49d77d4d90" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f49d77d4d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d77d2670"/>
        <function-ref name="fired" scoped="" ref="0x7f49d77da5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d77d2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d77daa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d77d2b30"/>
        <function-ref name="start" scoped="" ref="0x7f49d77dbbc0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d77da110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f49d77bf5f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d77bf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77bf970"/>
        <function-ref name="write" scoped="" ref="0x7f49d77bfb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f49d77d0380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f49d77d0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d77d0700"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d77d0890"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d77d0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d77d0bb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d77d0d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d77cf020"/>
        <function-ref name="set" scoped="" ref="0x7f49d77cf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d77cf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f49d77e0b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f49d77e0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77df750"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d77dfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f49d77a9820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f49d77a9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d77a9ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d77a9d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f49d77ba1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f49d77ba1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77ba540"/>
        <function-ref name="write" scoped="" ref="0x7f49d77ba6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f49d77baa70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d77baa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77badf0"/>
        <function-ref name="write" scoped="" ref="0x7f49d77b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f49d77c43d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f49d77c43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77c4750"/>
        <function-ref name="write" scoped="" ref="0x7f49d77c48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f49d77c5810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d77c5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f49d77c5b90"/>
        <function-ref name="changed" scoped="" ref="0x7f49d77c5d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f49d77cc020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f49d77cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f49d77d1060" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f49d77d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d77d13e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d77d1570"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d77d1700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d77d1890"/>
        <function-ref name="get" scoped="" ref="0x7f49d77d1a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d77d1bb0"/>
        <function-ref name="set" scoped="" ref="0x7f49d77d1d40"/>
        <function-ref name="clr" scoped="" ref="0x7f49d77d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f49d77b8120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d77b8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d77b86a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f49d77cf6a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f49d77cf6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d77cfa20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d77cfbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d77cfd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d77ce020"/>
        <function-ref name="get" scoped="" ref="0x7f49d77ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d77ce340"/>
        <function-ref name="set" scoped="" ref="0x7f49d77ce4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d77ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d77e44a0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d77e44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d77e4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f49d77bb020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d77bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77bb3a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d77bb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f49d77b8a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f49d77b8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d77b8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f49d77b71d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f49d77b71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d77b7550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d77b76e0"/>
        <function-ref name="request" scoped="" ref="0x7f49d77b7870"/>
        <function-ref name="granted" scoped="" ref="0x7f49d77b7a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d77b7b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f49d77b5d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f49d77b5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d77b4180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d77b4310"/>
        <function-ref name="request" scoped="" ref="0x7f49d77b44a0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d77b4630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d77b47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f49d77e1740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f49d77e1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f49d77e1ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f49d77e1c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f49d77e1de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f49d77e0020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f49d77e01b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f49d77e0340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f49d77e04d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f49d77e0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f49d77c4c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f49d77c4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77bf0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d77bf230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f49d77bdb00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f49d77bdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77bde80"/>
        <function-ref name="write" scoped="" ref="0x7f49d77c4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f49d77b62b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f49d77b62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d77b6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d77b4a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d77b4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d77b4e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d77b3020"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d77b31b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d77b3340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d77b34d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d77b3660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d77b37f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d77b3e30"/>
        <function-ref name="set" scoped="" ref="0x7f49d77b3980"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d77b3b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d77b3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f49d77aa940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f49d77aa940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d77aacc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d77aae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d77e4b10" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d77e4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d77e3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d77e31b0"/>
        <function-ref name="request" scoped="" ref="0x7f49d77e3340"/>
        <function-ref name="granted" scoped="" ref="0x7f49d77e34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d77e3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f49d77c8520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f49d77c8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77c88a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d77c8a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f49d77c0a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f49d77c0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d77c8020"/>
        <function-ref name="write" scoped="" ref="0x7f49d77c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f49d77cd0e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f49d77cd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d77cd460"/>
        <function-ref name="disable" scoped="" ref="0x7f49d77cd5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f49d77cd780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f49d77cd910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f49d77b5020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f49d77b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d77b53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d77b5530"/>
        <function-ref name="request" scoped="" ref="0x7f49d77b56c0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d77b5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d77b59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f49d77b69c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f49d77b69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d77b6d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7733c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7733c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d7730020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f49d7730690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d7730690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d772d020"/>
        <function-ref name="fired" scoped="" ref="0x7f49d772e020"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d772e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d772e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d772d4e0"/>
        <function-ref name="start" scoped="" ref="0x7f49d772f5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d772fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d772bd40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d772bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d74e70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f49d74e75f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f49d74e75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d74e5e50"/>
        <function-ref name="fired" scoped="" ref="0x7f49d74e6e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d74e5800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d74e5340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d74e4340"/>
        <function-ref name="start" scoped="" ref="0x7f49d74e6430"/>
        <function-ref name="stop" scoped="" ref="0x7f49d74e6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d6055b90" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d6055b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d60524e0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d60534e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d6053e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d60539a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d60529a0"/>
        <function-ref name="start" scoped="" ref="0x7f49d60549d0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6055340" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6055340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d60556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d604ec20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d604ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d604a4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d604b4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d604be60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d604b9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d604a9a0"/>
        <function-ref name="start" scoped="" ref="0x7f49d604ca80"/>
        <function-ref name="stop" scoped="" ref="0x7f49d604b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d604e3d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d604e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d604e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f49d6034440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d6034440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d60347c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d6034950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d6034ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d6034c70"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6034e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f49d60379d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d60379d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6037d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d6036020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d60361b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6036340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d60364d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6036660"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d60367f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6036980"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6036b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d6036ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d6036e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f49d6035120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d6035120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d60354a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d6035630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d60357c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d6035950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d6035ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d6035c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d6035e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d6034020"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d60341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f49d76f43f0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d76f43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76f4770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76f4900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76f4a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76f4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76f4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f49d7700cd0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d7700cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d76f80a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d76f8230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76f83c0"/>
        <function-ref name="get" scoped="" ref="0x7f49d76f8550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76f86e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76f8870"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d76f8a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76f8b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d76f8d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d76f7020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d76f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f49d76f7a40" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d76f7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76f7dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76f6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76f61b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76f6340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76f64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76f6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76f67f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76f6980"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76f6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f49d76e4a50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f49d76e4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76e4dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76e3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76e31b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76e3340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76e34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76e3660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76e37f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76e3980"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76e3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f49d76df5a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f49d76df5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76df920"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76dfab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76dfc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76dfdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76dd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76dd1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76dd340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76dd4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f49d76e5a20" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f49d76e5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76e5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76e4020"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76e41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76e4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76e44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f49d76d23e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f49d76d23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d2760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76d28f0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76d2a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76d2c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76d2da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f49d76ebbb0" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f49d76ebbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76e5020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76e51b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76e5340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76e54d0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f49d76d3570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f49d76d3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d38f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76d3a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76d3c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76d3da0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f49d76c9da0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f49d76c9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76c8180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76c8310"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76c84a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76c8630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76c87c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76c8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f49d76d1410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f49d76d1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76d1790"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76d1920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76d1ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76d1c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76d1dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76d0020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76d01b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76d0340"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f49d76ef280" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f49d76ef280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76ef600"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76ef790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76ef920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76efab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76efc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76efdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76ee020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76ee1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f49d76d9da0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f49d76d9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d8180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76d8310"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76d84a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76d8630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76d87c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76d8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f49d76d9020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f49d76d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76d9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76d96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76d9850"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f49d76dba50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f49d76dba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76dbdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76da020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76da1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76da340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76da4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76da660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76da7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76da980"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76dab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f49d76e2da0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f49d76e2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76e1180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76e1310"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76e14a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76e1630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76e17c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76e1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f49d76cf890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f49d76cf890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76cfc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76cfda0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76ce020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76ce1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76ce340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f49d76d8d40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f49d76d8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76d70e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76d7270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76d7400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76d7590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76d7720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76d78b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76d7a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76d7bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76d7d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f49d76e2020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f49d76e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76e23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76e2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76e26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76e2850"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76e29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f49d76f3a30" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f49d76f3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d76f3db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d76f0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76f01b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d76f0340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76f04d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76f0660"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d76f07f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76f0980"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d76f0b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d76f0ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d76f0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f49d76d0890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f49d76d0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d0e10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76cf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76cf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76cf340"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f49d76ec730" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f49d76ec730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76ecab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76ecc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76ecdd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76eb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76eb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76eb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76eb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76eb660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76eb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f49d76ce8c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f49d76ce8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76cec40"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76cedd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76cd020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76cd1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76cd340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76cd4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76cd660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76cd7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f49d76e6690" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f49d76e6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76e6a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76e6ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76e6d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76ec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76ec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f49d76d5020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f49d76d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d53a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76d5530"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76d56c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76d5850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76d59e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76d5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f49d76ee700" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f49d76ee700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76eea80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76eec10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76eeda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76ed020"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f49d76d6160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f49d76d6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76d64e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76d6670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76d6800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76d6990"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76d6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f49d76ccae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f49d76ccae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76cce60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76cb020"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76cb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76cb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76cb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f49d76d4020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f49d76d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76d43a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76d4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76d46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76d4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76d49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76d4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76d4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76d3020"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f49d76e1cd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f49d76e1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d76e00a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d76e0230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76e03c0"/>
        <function-ref name="get" scoped="" ref="0x7f49d76e0550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76e06e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76e0870"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d76e0a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76e0b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d76e0d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d76df020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d76df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f49d76dca20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f49d76dca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76dcda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d76db020"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76db1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76db340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76db4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d76db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f49d76cdd40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f49d76cdd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76cc0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76cc270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76cc400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76cc590"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76cc720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f49d76c9020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f49d76c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76c93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76c9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76c96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76c9850"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f49d76dda20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f49d76dda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76dc020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d76dc1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76dc340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d76dc4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f49d76cba50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f49d76cba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76cbdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76ca020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76ca1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76ca340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76ca4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76ca660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76ca7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76ca980"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76cab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f49d7690940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f49d7690940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7690cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f49d76902f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f49d76902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7690670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f49d768e020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f49d768e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d768e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f49d7691bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d7691bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7690020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d76923e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d76923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7692760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d76928f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7692a80"/>
        <function-ref name="get" scoped="" ref="0x7f49d7692c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7692da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d7691020"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d76911b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d7691340"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d76914d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d7691660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d76917f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f49d7688750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f49d7688750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7688ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f49d7688100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f49d7688100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7688480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f49d7688da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f49d7688da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7687180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f49d7689a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d7689a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7689e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d768a260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d768a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d768a5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d768a770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d768a900"/>
        <function-ref name="get" scoped="" ref="0x7f49d768aa90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d768ac20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d768adb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7689020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76891b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d7689340"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d76894d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d7689660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d763d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d763d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d763db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d763dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d763de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d763c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d763c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d763c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d76846d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d76846d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d7684a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d7684be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7684d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d763e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d763e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d763e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d763e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d763e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d763e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d763bc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d763bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d763a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d763eac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d763eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d763ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d763d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d763d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d763d340"/>
        <function-ref name="fired" scoped="" ref="0x7f49d763d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d763c610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d763c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d763c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d763cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d763ccb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d763ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d763b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d763b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d763b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d763b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d763b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d763b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d763b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d7636cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d7636cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76350a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d7635230"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76353c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d7635550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76356e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d7635870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d7638b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d7638b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d7637020"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76371b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7637340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76374d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d7637660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76377f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d7637980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d7637b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d7637ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d76322f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d76322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7632670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d7636020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d7636020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76363a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d7636530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76366c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d7636850"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d7635b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d7635b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7633020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d76331b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7633340"/>
        <function-ref name="get" scoped="" ref="0x7f49d76334d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7633660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76337f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7633980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d7633b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d7633ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d7633e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d7632020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d762d2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d762d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d762d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d762d800"/>
        <function-ref name="captured" scoped="" ref="0x7f49d762d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d762db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d762dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d762de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d762f220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d762f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d762f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d762f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d762f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d762fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d762fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d762fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d762e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d762e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d762e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d762b7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d762b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d762bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d762e610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d762e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d762e990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d762eb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d762ecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d762ee40"/>
        <function-ref name="fired" scoped="" ref="0x7f49d762d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d762c160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d762c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d762c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d762c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d762c800"/>
        <function-ref name="get" scoped="" ref="0x7f49d762c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d762cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d762ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d762ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d762b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d762b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d762b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d762b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d76267a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d76267a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d7626b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d7626cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d7626e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d7625020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76251b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d7625340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d76286d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d76286d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d7628a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d7628be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7628d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d7627020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d76271b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7627340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d76274d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d7627660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d76277f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d7624c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d7624c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7622020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d7627ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d7627ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d7627e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d7626020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76261b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d7626340"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76264d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d7625610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d7625610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7625990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d7625b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7625cb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7625e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7624020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76241b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7624340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76244d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d7624660"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d76247f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d7624980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d761ecb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d761ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d761d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d761d230"/>
        <function-ref name="captured" scoped="" ref="0x7f49d761d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d761d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d761d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d761d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d7620b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d7620b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d761f020"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d761f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d761f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d761f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d761f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d761f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d761f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d761fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d761fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d761b2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d761b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d761b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d761e020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d761e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d761e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d761e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d761e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d761e850"/>
        <function-ref name="fired" scoped="" ref="0x7f49d761e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d761db40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d761db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d761c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d761c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d761c340"/>
        <function-ref name="get" scoped="" ref="0x7f49d761c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d761c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d761c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d761c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d761cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d761cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d761ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d761b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d76162f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d76162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d7616670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d7616800"/>
        <function-ref name="captured" scoped="" ref="0x7f49d7616990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d7616b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d7616cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d7616e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d7618220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d7618220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76185a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d7618730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76188c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d7618a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d7618be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7618d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d7617020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d76171b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d7617340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d76147a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d76147a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7614b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d7617610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d7617610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d7617990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d7617b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d7617cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d7617e40"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7616020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d7615160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d7615160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d76154e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d7615670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7615800"/>
        <function-ref name="get" scoped="" ref="0x7f49d7615990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7615b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d7615cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7615e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d7614020"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d76141b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d7614340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d76144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d760e7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d760e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d760eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d760ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d760ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d760d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d760d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d760d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d76106d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d76106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d7610a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d7610be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7610d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d760f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d760f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d760f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d760f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d760f660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d760f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d760cc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d760cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d760b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d760fac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d760fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d760fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d760e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d760e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d760e340"/>
        <function-ref name="fired" scoped="" ref="0x7f49d760e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d760d610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d760d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d760d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d760db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d760dcb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d760de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d760c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d760c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d760c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d760c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d760c660"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d760c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d760c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d7607cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d7607cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76060a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d7606230"/>
        <function-ref name="captured" scoped="" ref="0x7f49d76063c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d7606550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d76066e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d7606870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d7609b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d7609b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d7608020"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d76081b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7608340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d76084d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d7608660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d76087f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d7608980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d7608b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d7608ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d76042f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d76042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7604670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d7607020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d7607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d76073a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d7607530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d76076c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d7607850"/>
        <function-ref name="fired" scoped="" ref="0x7f49d76079e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d7606b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d7606b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7605020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d76051b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d7605340"/>
        <function-ref name="get" scoped="" ref="0x7f49d76054d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7605660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d76057f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7605980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d7605b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d7605ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d7605e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d7604020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d75fe2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d75fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d75fe670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d75fe800"/>
        <function-ref name="captured" scoped="" ref="0x7f49d75fe990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d75feb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d75fecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d75fee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d7600220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d7600220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d76005a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d7600730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d76008c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d7600a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d7600be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d7600d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d75ff020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d75ff1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d75ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d75fc7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d75fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d75fcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d75ff610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d75ff610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d75ff990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d75ffb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d75ffcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d75ffe40"/>
        <function-ref name="fired" scoped="" ref="0x7f49d75fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d75fd160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d75fd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d75fd4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d75fd670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d75fd800"/>
        <function-ref name="get" scoped="" ref="0x7f49d75fd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d75fdb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d75fdcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d75fde40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d75fc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d75fc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d75fc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d75fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d75f77a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d75f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d75f7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d75f7cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d75f7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d75f6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d75f61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d75f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f49d75f96d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f49d75f96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d75f9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d75f9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d75f9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d75f8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d75f81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d75f8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d75f84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d75f8660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d75f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f49d75f5c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f49d75f5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d75f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f49d75f8ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f49d75f8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d75f8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d75f7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d75f71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d75f7340"/>
        <function-ref name="fired" scoped="" ref="0x7f49d75f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f49d75f6610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d75f6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d75f6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d75f6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d75f6cb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d75f6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d75f5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d75f51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d75f5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d75f54d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d75f5660"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d75f57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d75f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f49d75eebc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f49d75eebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d75ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f49d75f03f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f49d75f03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d75f0770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f49d75f0b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f49d75f0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d75ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f49d75ee430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f49d75ee430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d75ee7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f49d602a0c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d602a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d602a440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d602a5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d602a760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d602a8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d602aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f49d602d710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d602d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d602da90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d602dc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d602ddb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d602c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d602c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d602c340"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d602c4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d602c660"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d602c7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d602c980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d602cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d60315b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d60315b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d602fdf0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6030df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d602f7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d602f2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d602d2e0"/>
        <function-ref name="start" scoped="" ref="0x7f49d6030420"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6030930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6032ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6032ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d60310a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f49d602cda0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d602cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d602b180"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d602b310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d602b4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d602b630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d602b7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d602b950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d602bae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d602bc70"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d602be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d75658c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d75658c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d756a700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d75690d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d756abc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d7569590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f49d75638e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f49d75638e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d7560780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d755f150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d7560c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d755f610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f49d754ec50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d754ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d754d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d754d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d754d340"/>
        <function-ref name="get" scoped="" ref="0x7f49d754d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d754d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d754d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d754d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d754db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d754dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d754de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d754c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d755db80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d755db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d755c9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d754e360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d755ce70"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d754e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f49d752b0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f49d752b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d7529020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d75299a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d75294e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d7529e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d7548cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d7548cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d752db60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d752c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d752c090"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d752ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d6047020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d6047020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6044870"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6046840"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d6044220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6046d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d6044d30"/>
        <function-ref name="start" scoped="" ref="0x7f49d6047e30"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6046380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f49d6041780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f49d6041780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d603d020"/>
        <function-ref name="fired" scoped="" ref="0x7f49d603e020"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d603e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d603e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d603d4e0"/>
        <function-ref name="start" scoped="" ref="0x7f49d60405d0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6040ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f49d60433d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d60433d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6042240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6042bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6042700"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d60410d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f49d74df9c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f49d74df9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74dfd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74de020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74de340"/>
        <function-ref name="get" scoped="" ref="0x7f49d74de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74de660"/>
        <function-ref name="set" scoped="" ref="0x7f49d74de7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74de980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f49d74decf0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f49d74decf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74dd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74dd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74dd550"/>
        <function-ref name="get" scoped="" ref="0x7f49d74dd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74dd870"/>
        <function-ref name="set" scoped="" ref="0x7f49d74dda00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74ddb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f49d74dc020" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f49d74dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74dc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74dc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74dc850"/>
        <function-ref name="get" scoped="" ref="0x7f49d74dc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74dcb70"/>
        <function-ref name="set" scoped="" ref="0x7f49d74dcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f49d74e0690" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f49d74e0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74e0a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74e0ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74e0d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74df020"/>
        <function-ref name="get" scoped="" ref="0x7f49d74df1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74df340"/>
        <function-ref name="set" scoped="" ref="0x7f49d74df4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f49d74d96a0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f49d74d96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74d9a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74d9bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74d9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74d8020"/>
        <function-ref name="get" scoped="" ref="0x7f49d74d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74d8340"/>
        <function-ref name="set" scoped="" ref="0x7f49d74d84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f49d74e13e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f49d74e13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74e1760"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74e18f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74e1a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74e1c10"/>
        <function-ref name="get" scoped="" ref="0x7f49d74e1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74e0020"/>
        <function-ref name="set" scoped="" ref="0x7f49d74e01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f49d74db370" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f49d74db370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74db6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74db880"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74dba10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74dbba0"/>
        <function-ref name="get" scoped="" ref="0x7f49d74dbd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74d9020"/>
        <function-ref name="set" scoped="" ref="0x7f49d74d91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74d9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74d6c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74d6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74d5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74d51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74d5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74d3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74d5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74d57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74d5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74d5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74d5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d74d5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74d41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74d4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74d45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74d4760"/>
        <function-ref name="set" scoped="" ref="0x7f49d74d48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74d4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74d4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74d54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74d4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74d7a20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74d7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74d7da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74d6340"/>
        <function-ref name="get" scoped="" ref="0x7f49d74d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74d6660"/>
        <function-ref name="set" scoped="" ref="0x7f49d74d67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74d6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74d02f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74d0670"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74d0800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74d0990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74ce660"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74d0cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74d0e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74cf020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74cf340"/>
        <function-ref name="get" scoped="" ref="0x7f49d74cf4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74cf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74cf7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74cf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74cfc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74cfda0"/>
        <function-ref name="set" scoped="" ref="0x7f49d74ce020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74ce1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74ce340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74d0b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74d1020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74d1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74d16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74d1850"/>
        <function-ref name="get" scoped="" ref="0x7f49d74d19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74d1b70"/>
        <function-ref name="set" scoped="" ref="0x7f49d74d1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74cb7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74cb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74cbb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74cbcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74cbe40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74c9a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74ca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74ca340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74ca4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74ca660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74ca7f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d74ca980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74cab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74caca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74cae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74c9120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74c92b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d74c9440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74c95d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74c9760"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74ca020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74cc630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74cc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74cc9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74ccb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74cccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74cce60"/>
        <function-ref name="get" scoped="" ref="0x7f49d74cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d74cb340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74c6c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74c5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74c51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74c5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74c3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74c5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74c57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74c5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74c5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74c5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d74c5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74c41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74c4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74c45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74c4760"/>
        <function-ref name="set" scoped="" ref="0x7f49d74c48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74c4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74c4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74c54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74c4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74c7b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74c7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74c7e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74c6030"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74c61c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74c6350"/>
        <function-ref name="get" scoped="" ref="0x7f49d74c64e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74c6670"/>
        <function-ref name="set" scoped="" ref="0x7f49d74c6800"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74c6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74bf2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74bf670"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74bf800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74bf990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74bd660"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74bfcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74bfe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74be020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74be340"/>
        <function-ref name="get" scoped="" ref="0x7f49d74be4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74be660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74be7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74be980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74bec10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74beda0"/>
        <function-ref name="set" scoped="" ref="0x7f49d74bd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74bd1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74bd340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74bfb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74c0020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74c0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74c06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74c0850"/>
        <function-ref name="get" scoped="" ref="0x7f49d74c09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74c0b70"/>
        <function-ref name="set" scoped="" ref="0x7f49d74c0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74ba7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74ba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74bab20"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74bacb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74bae40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74b8a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74b91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74b9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74b94d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74b9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74b97f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d74b9980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74b9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74b9ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74b9e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74b8120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74b82b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d74b8440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74b85d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74b8760"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74b88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74bb630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74bb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74bb9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74bbb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74bbcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74bbe60"/>
        <function-ref name="get" scoped="" ref="0x7f49d74ba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74ba1b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d74ba340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d74b5c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d74b5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74b4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74b41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d74b4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d74b2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74b4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74b47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d74b4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d74b4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74b4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d74b4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d74b3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d74b31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d74b3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74b35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d74b3760"/>
        <function-ref name="set" scoped="" ref="0x7f49d74b38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d74b3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74b3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74b44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d74b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d74b6b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d74b6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d74b6e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d74b5030"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d74b51c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d74b5350"/>
        <function-ref name="get" scoped="" ref="0x7f49d74b54e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d74b5670"/>
        <function-ref name="set" scoped="" ref="0x7f49d74b5800"/>
        <function-ref name="clr" scoped="" ref="0x7f49d74b5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f49d7498700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f49d7498700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f49d7498a80"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7498c10"/>
        <function-ref name="captured" scoped="" ref="0x7f49d7498da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f49d749c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f49d749c400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f49d749c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d749c780"/>
        <function-ref name="disable" scoped="" ref="0x7f49d749c910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f49d749caa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f49d749cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f49d749b060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f49d749b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d749b3e0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d749b570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f49d749b700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f49d749b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f49d747da80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f49d747da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d747de00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f49d747c020"/>
        <function-ref name="captured" scoped="" ref="0x7f49d747c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d747c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d747c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f49d747c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f49d7490c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f49d7490c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f49d747e020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d747e1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f49d747e340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f49d747e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f49d747e760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d747e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d747eae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d747ec70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d747ee00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d747d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d747d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d747d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d747d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d747d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d747d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f49d747c930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d747c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d747ccb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d747ce40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d747a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7479c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d747a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d747a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d747a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d747a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d747a980"/>
        <function-ref name="get" scoped="" ref="0x7f49d747ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d747aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d747ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7479020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d74792b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7479440"/>
        <function-ref name="set" scoped="" ref="0x7f49d74795d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7479760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d74798f0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d747a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7479a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f49d7468020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f49d7468020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d74683a0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7468530"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74686c0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7468850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74689e0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7468b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7468d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7467020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f49d745c3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f49d745c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d745c770"/>
        <function-ref name="fired" scoped="" ref="0x7f49d745c900"/>
        <function-ref name="disable" scoped="" ref="0x7f49d745ca90"/>
        <function-ref name="edge" scoped="" ref="0x7f49d745cc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d745cdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d745b020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d745b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d745b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f49d7465a30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f49d7465a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7465db0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7464020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74641b0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7464340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74644d0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7464660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74647f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7464980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f49d7462020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f49d7462020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d74623a0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7462530"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74626c0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7462850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74629e0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7462b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7462d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7461020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f49d7471a30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f49d7471a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7471db0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d746a020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d746a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d746a340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d746a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d746a660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d746a7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d746a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f49d745fa30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f49d745fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d745e020"/>
        <function-ref name="fired" scoped="" ref="0x7f49d745e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d745e340"/>
        <function-ref name="edge" scoped="" ref="0x7f49d745e4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d745e660"/>
        <function-ref name="enable" scoped="" ref="0x7f49d745e7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d745e980"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d745eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f49d74673f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f49d74673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7467770"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7467900"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7467a90"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7467c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7467db0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7466020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74661b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7466340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f49d745b710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f49d745b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d745ba90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d745bc20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d745bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d745a020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d745a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d745a340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d745a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d745a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f49d746b3d0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f49d746b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d746b750"/>
        <function-ref name="fired" scoped="" ref="0x7f49d746b8e0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d746ba70"/>
        <function-ref name="edge" scoped="" ref="0x7f49d746bc00"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d746bd90"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7472020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74721b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7472340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f49d74613f0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f49d74613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7461770"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7461900"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7461a90"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7461c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7461db0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7460020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74601b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7460340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f49d746ad50" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f49d746ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7469100"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7469290"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7469420"/>
        <function-ref name="edge" scoped="" ref="0x7f49d74695b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7469740"/>
        <function-ref name="enable" scoped="" ref="0x7f49d74698d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7469a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7469bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f49d745d020" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f49d745d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d745d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d745d530"/>
        <function-ref name="disable" scoped="" ref="0x7f49d745d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d745d850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d745d9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d745db70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d745dd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d745c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f49d7466710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f49d7466710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7466a90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7466c20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7466db0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7465020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74651b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7465340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74654d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7465660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f49d7464d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f49d7464d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7463100"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7463290"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7463420"/>
        <function-ref name="edge" scoped="" ref="0x7f49d74635b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7463740"/>
        <function-ref name="enable" scoped="" ref="0x7f49d74638d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7463a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7463bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f49d7472710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f49d7472710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7472a90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7472c20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7472db0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7471020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74711b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7471340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74714d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7471660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f49d7460710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f49d7460710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7460a90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7460c20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7460db0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d745f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d745f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d745f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d745f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d745f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f49d74513f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f49d74513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7451770"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7451900"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7451a90"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7451c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7451db0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7450020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74501b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7450340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f49d74453f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f49d74453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7445770"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7445900"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7445a90"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7445c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7445db0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7444020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74441b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7444340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f49d744ed50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f49d744ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d744d100"/>
        <function-ref name="fired" scoped="" ref="0x7f49d744d290"/>
        <function-ref name="disable" scoped="" ref="0x7f49d744d420"/>
        <function-ref name="edge" scoped="" ref="0x7f49d744d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d744d740"/>
        <function-ref name="enable" scoped="" ref="0x7f49d744d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d744da60"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d744dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f49d744b3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f49d744b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d744b770"/>
        <function-ref name="fired" scoped="" ref="0x7f49d744b900"/>
        <function-ref name="disable" scoped="" ref="0x7f49d744ba90"/>
        <function-ref name="edge" scoped="" ref="0x7f49d744bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d744bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d744a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d744a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d744a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f49d7455d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f49d7455d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7453100"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7453290"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7453420"/>
        <function-ref name="edge" scoped="" ref="0x7f49d74535b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7453740"/>
        <function-ref name="enable" scoped="" ref="0x7f49d74538d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7453a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7453bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f49d7448d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f49d7448d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7447210"/>
        <function-ref name="fired" scoped="" ref="0x7f49d74473a0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7447530"/>
        <function-ref name="edge" scoped="" ref="0x7f49d74476c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7447850"/>
        <function-ref name="enable" scoped="" ref="0x7f49d74479e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7447b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7447d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f49d7450710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f49d7450710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7450a90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7450c20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7450db0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d744f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d744f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d744f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d744f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d744f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f49d7444710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f49d7444710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7444a90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7444c20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7444db0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7443020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74431b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7443340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74434d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7443660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f49d74597a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f49d74597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7459b20"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7459cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7459e40"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7456020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74561b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7456340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74564d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7456660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f49d744a710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f49d744a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d744aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f49d744ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f49d744adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7449020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74491b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7449340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74494d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7449660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f49d7452020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f49d7452020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d74523a0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7452530"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74526c0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7452850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74529e0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7452b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7452d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7451020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f49d7446100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f49d7446100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7446480"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7446610"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74467a0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7446930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7446ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7446c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d7446de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f49d744fa30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f49d744fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d744fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d744e020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d744e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d744e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d744e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d744e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d744e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d744e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f49d744c020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f49d744c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d744c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d744c530"/>
        <function-ref name="disable" scoped="" ref="0x7f49d744c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d744c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d744c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d744cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d744cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d744b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f49d7456a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f49d7456a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7456db0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7455020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74551b0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7455340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74554d0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7455660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74557f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7455980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f49d7449a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f49d7449a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7449db0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7448020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d74481b0"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7448340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d74484d0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7448660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d74487f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7448980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f49d73392f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f49d73392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7339670"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7339800"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7339990"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7339b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d7339cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7339e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d732a020"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d732a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f49d733a680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f49d733a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d733aa00"/>
        <function-ref name="disable" scoped="" ref="0x7f49d733ab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f49d733ad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f49d7339020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f49d73287a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f49d73287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d7328b20"/>
        <function-ref name="fired" scoped="" ref="0x7f49d7328cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d7328e40"/>
        <function-ref name="edge" scoped="" ref="0x7f49d7327020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f49d73271b0"/>
        <function-ref name="enable" scoped="" ref="0x7f49d7327340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f49d73274d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f49d7327660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f49d7329b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f49d7329b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7328020"/>
        <function-ref name="disable" scoped="" ref="0x7f49d73281b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f49d7328340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f49d73284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f49d6ec6e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6ec6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec5410"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f49d6ed2160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f49d6ed2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f49d6ecae50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6ecae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec8210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f49d6ec4880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6ec4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec4c00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f49d6ebc0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f49d6ebc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebc420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f49d6ec30a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f49d6ec30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec3420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f49d6eb0500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6eb0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb0880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f49d6eb2500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6eb2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb2880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f49d6ed1490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6ed1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f49d6eb8880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f49d6eb8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb8c00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f49d6eb3500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6eb3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb3880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f49d6ec8e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f49d6ec8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec7210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f49d6ec7e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6ec7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec6210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f49d6ebe880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6ebe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebec00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f49d6ebf0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f49d6ebf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebf420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f49d6ec3880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6ec3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec3c00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d6ed4a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6ed4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d6ed4e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d6ed3020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d6ed31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f49d6ecde00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6ecde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f49d6ecc490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f49d6ecc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecc910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f49d6eb7c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6eb7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb60a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f49d6eccbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6eccbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f49d6eb3ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6eb3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb20a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f49d6ecd160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6ecd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f49d6eb80a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f49d6eb80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb8420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f49d6ec7670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6ec7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec79f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f49d6ec8670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6ec8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec89f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f49d6ed3ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6ed3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed3e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f49d6eb90a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6eb90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb9420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f49d6ebc880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f49d6ebc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebcc00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f49d6eb9880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6eb9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb9c00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f49d6eb1ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6eb1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb00a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f49d6eb2ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6eb2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb10a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f49d6ebf880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f49d6ebf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebfc00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f49d6eba0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f49d6eba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eba420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f49d6eb5ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6eb5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb30a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f49d6ec2880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6ec2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec2c00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f49d6eb0ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6eb0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6eaf0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6eaf230"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eaf3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6eaf550"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6eaf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f49d6ed3480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6ed3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f49d6eca670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f49d6eca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ecab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f49d6ec6670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6ec6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec69f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f49d6ebd0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6ebd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebd420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f49d6ec20a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6ec20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec2420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f49d6ebd880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6ebd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebdc00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f49d6ec5870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6ec5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec5bf0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f49d6ed27b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f49d6ed27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f49d6ec40a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6ec40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec4420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6ed5e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6ed5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6ed41c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6ed4350"/>
        <function-ref name="request" scoped="" ref="0x7f49d6ed44e0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6ed4670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6ed4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f49d6ecb2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6ecb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f49d6eca020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f49d6eca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6eca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f49d6eb5500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f49d6eb5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb5880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f49d6eb6ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6eb6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb50a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f49d6ecd7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6ecd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f49d6eb6500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6eb6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb6880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f49d6eb1500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f49d6eb1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb1880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f49d6ebe0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6ebe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebe420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebe5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f49d6eba880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f49d6eba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ebac00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ebad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f49d6ed2e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f49d6ed2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f49d6ed1ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6ed1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ed1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f49d6ec00a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6ec00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec0420"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f49d6ecb940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f49d6ecb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ecbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f49d6ec0880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f49d6ec0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ec0c00"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ec0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f49d6eb70a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f49d6eb70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6eb7820"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eb79b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f49d6eaf9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6eaf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6eafd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6eae020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6eae1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6eae340"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6eae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f49d72e52c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f49d72e52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d72e5640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d72e57d0"/>
        <function-ref name="write" scoped="" ref="0x7f49d72e5960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d72e5af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d72e5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d72e7350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72e7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d72e76d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d72e7860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d72e79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f49d72e4540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f49d72e4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d72e48c0"/>
        <function-ref name="write" scoped="" ref="0x7f49d72e4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f49d72e3370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f49d72e3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d72e36f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d72e3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d72e84d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d72e84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d72e8850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d72e89e0"/>
        <function-ref name="request" scoped="" ref="0x7f49d72e8b70"/>
        <function-ref name="granted" scoped="" ref="0x7f49d72e8d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d72e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f49d72e21d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f49d72e21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d72e2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f49d72cb2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f49d72cb2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d72cb660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d72cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f49d72dc890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f49d72dc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d72dcc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d72dcda0"/>
        <function-ref name="write" scoped="" ref="0x7f49d72db020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d72db1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d72db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d72de660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d72de660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d72de9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d72deb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d72ded00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f49d72d3c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f49d72d3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f49d72d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f49d72cbb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f49d72cbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d72d4020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d72d41b0"/>
        <function-ref name="isState" scoped="" ref="0x7f49d72d4340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d72d44d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d72d4660"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d72d47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f49d72d7060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f49d72d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d72d73e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d72d7570"/>
        <function-ref name="request" scoped="" ref="0x7f49d72d7700"/>
        <function-ref name="granted" scoped="" ref="0x7f49d72d7890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d72d7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f49d72dbba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f49d72dbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d72da020"/>
        <function-ref name="write" scoped="" ref="0x7f49d72da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f49d72daa30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f49d72daa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d72dadb0"/>
        <function-ref name="write" scoped="" ref="0x7f49d72d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d72d4a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d72d4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d72d4df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d72d2020"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d72d21b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d72d2340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d72d24d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d72d2660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d72d27f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d72d2e30"/>
        <function-ref name="set" scoped="" ref="0x7f49d72d2980"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d72d2b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d72d2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d72dd510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d72dd510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d72dd890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d72dda20"/>
        <function-ref name="request" scoped="" ref="0x7f49d72ddbb0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d72ddd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d72dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f49d72c7bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f49d72c7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d72c6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d72c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f49d72d98b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f49d72d98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d72d9c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f49d726c770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d726c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d726caf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d726cc80"/>
        <function-ref name="isState" scoped="" ref="0x7f49d726ce10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d7268020"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d72681b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d7268340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f49d72671d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d72671d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d7267550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d72676e0"/>
        <function-ref name="isState" scoped="" ref="0x7f49d7267870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d7267a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d7267b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d7267d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d7263020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d7263020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d72633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f49d7263b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d7263b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d7262020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d72621b0"/>
        <function-ref name="isState" scoped="" ref="0x7f49d7262340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d72624d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d7262660"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d72627f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f49d6efb020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f49d6efb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6efb3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6efb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f49d72498f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f49d72498f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f49d7249c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d724ac40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d724ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d7249020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d72491b0"/>
        <function-ref name="request" scoped="" ref="0x7f49d7249340"/>
        <function-ref name="granted" scoped="" ref="0x7f49d72494d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d7249660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d5dde760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5dde760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d5ddeae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5ddec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f49d5ddc120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f49d5ddc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d5ddc4a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d5ddc630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f49d5ddc8c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d5ddc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d5ddcc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f49d5ddd020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f49d5ddd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f49d5ddd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d5ddfa00" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d5ddfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5ddfd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d5dde020"/>
        <function-ref name="request" scoped="" ref="0x7f49d5dde1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5dde340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5dde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f49d5ddd630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d5ddd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f49d5ddd9b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f49d5dddb40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f49d5dddcd0"/>
        <function-ref name="write" scoped="" ref="0x7f49d5ddde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f49d71e18e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d71e18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d71e1c60"/>
        <function-ref name="configure" scoped="" ref="0x7f49d71e1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f49d71e3850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f49d71e3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d71e3bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d71e3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f49d71dea40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d71dea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d71dedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f49d71e4110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f49d71e4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f49d71e4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f49d71df690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f49d71df690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d71dfa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d71dfba0"/>
        <function-ref name="request" scoped="" ref="0x7f49d71dfd30"/>
        <function-ref name="granted" scoped="" ref="0x7f49d71de020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d71de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d71e8d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d71e8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d71e5180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d71e5310"/>
        <function-ref name="request" scoped="" ref="0x7f49d71e54a0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d71e5630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d71e57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f49d71e4790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d71e4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f49d71e4b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f49d71e4ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f49d71e4e30"/>
        <function-ref name="write" scoped="" ref="0x7f49d71e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f49d71dab40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d71dab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d71dc020"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d71dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f49d7168250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d7168250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d71685f0"/>
        <function-ref name="configure" scoped="" ref="0x7f49d7168780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f49d7167c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f49d7167c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d7166020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d71661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f49d71653e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f49d71653e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d7165780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f49d7168a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f49d7168a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f49d7168d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f49d7165a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f49d7165a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d7165dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d7163020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d71631b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d7163340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d71634d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d7163660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d71637f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d7163980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d7163b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d7163ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d7163e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d7162020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d71621b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d7162440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d71625d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d7162760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d71628f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d7162a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d7162c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d7162da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d7161020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d71611b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d7161340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d71614d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7161660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d71619f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d7161b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d7161d10"/>
        <function-ref name="tx" scoped="" ref="0x7f49d7160020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d71601b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d7160340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d71604d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d7160660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d71607f0"/>
        <function-ref name="rx" scoped="" ref="0x7f49d7160980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d7160b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d7160ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d7160e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d715f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d715f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d715fc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d715fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d715e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d715e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d715e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d715e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d715e660"/>
        <function-ref name="get" scoped="" ref="0x7f49d715e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d715e980"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d715d020"/>
        <function-ref name="set" scoped="" ref="0x7f49d715eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d715eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d715ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f49d71665b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f49d71665b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d7166950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d7166ae0"/>
        <function-ref name="request" scoped="" ref="0x7f49d7166c70"/>
        <function-ref name="granted" scoped="" ref="0x7f49d7166e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d7165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d7169470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d7169470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d7169810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d71699a0"/>
        <function-ref name="request" scoped="" ref="0x7f49d7169b30"/>
        <function-ref name="granted" scoped="" ref="0x7f49d7169cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d7169e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f49d7167060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f49d7167060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f49d71673e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f49d7167570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f49d7167700"/>
        <function-ref name="write" scoped="" ref="0x7f49d7167890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f49d715f480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d715f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d715f800"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d715f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f49d715d2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f49d715d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d715d670"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d715d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f49d714d2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f49d714d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d714d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f49d7151d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d7151d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d71500e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d7150270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f49d7155020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d7155020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d71553a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d7155530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d71556c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d7155850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d71559e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d7155b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d7155d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d7154020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d71541b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d7154340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d71544d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d7154660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d71547f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d7154a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d7154c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d7154da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d7153020"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d71531b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d7153340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d71534d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d7153660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d71537f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d7153980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d7153b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7153ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d7152220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d71523b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d7152540"/>
        <function-ref name="tx" scoped="" ref="0x7f49d71526d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d7152860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d71529f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d7152b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d7152d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d7151020"/>
        <function-ref name="rx" scoped="" ref="0x7f49d71511b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d7151340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d71514d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d7151660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d71517f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d7151980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f49d7112bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f49d7112bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7111020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d71111b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7111340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d710f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7111660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d71117f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7111980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7111b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7111ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7111e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7110020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d71101b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7110340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d71105d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7110760"/>
        <function-ref name="set" scoped="" ref="0x7f49d71108f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7110a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d71114d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7110c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7110da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f49d71472d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f49d71472d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d7147650"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d71477e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f49d710f3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f49d710f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d710f760"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d710f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d710fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f49d710d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d710fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d710e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d710e1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d710e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d710e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d710e660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d710e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d710e980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d710eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d710eda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d710d020"/>
        <function-ref name="set" scoped="" ref="0x7f49d710d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d710d340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d710fc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d710d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d710d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f49d710dbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f49d710dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d710c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d710c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d710c340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d710a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d710c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d710c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d710c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d710cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d710cca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d710ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d710b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d710b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d710b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d710b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d710b760"/>
        <function-ref name="set" scoped="" ref="0x7f49d710b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d710ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d710c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d710bc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d710bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f49d714c700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f49d714c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d714ca80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d714cc10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d714cda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d714b020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d714b1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d714b340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d714b4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d714b660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d714b7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d714b980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d714bb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d714bca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d714be30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d714a120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d714a2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d714a440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d714a5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d714a760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d714a8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d714aa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d714ac10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d714ada0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d7149020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d71491b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d7149340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d71496d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d7149860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d71499f0"/>
        <function-ref name="tx" scoped="" ref="0x7f49d7149b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d7149d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d7148020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d71481b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d7148340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d71484d0"/>
        <function-ref name="rx" scoped="" ref="0x7f49d7148660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d71487f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d7148980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d7148b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d7148ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d7148e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f49d711dd10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f49d711dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f49d71450e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f49d7145270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f49d7145400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f49d7145590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f49d7145720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f49d71458b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f49d7145a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f49d7145bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d7145d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f49d7143020"/>
        <function-ref name="getData" scoped="" ref="0x7f49d71431b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f49d7143340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f49d71434d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f49d7143760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f49d71438f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f49d7143a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f49d7143c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f49d7143da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f49d711c020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f49d711c1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f49d711c340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f49d711c4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f49d711c660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f49d711c7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f49d711c980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f49d711cd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f49d711b020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f49d711b1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f49d711b340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f49d711b4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f49d711b660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f49d711b7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f49d711b980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f49d711bb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f49d711bca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f49d711be30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f49d711a020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f49d711a1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f49d711a340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f49d711a4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f49d711a660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f49d711a7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f49d711a980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f49d711ab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f49d711aca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f49d711ae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f49d7119020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f49d71191b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f49d7119340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f49d71198d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f49d7119a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f49d7119bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f49d7119d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f49d7118020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f49d71181b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f49d7118340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f49d71184d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f49d7118660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f49d71187f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f49d71143e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f49d71143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7114760"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d71148f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7114a80"/>
        <function-ref name="clr" scoped="" ref="0x7f49d71127f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7114da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d7113020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d71131b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7113340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d71134d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7113660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d71137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d7113980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7113b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d7113da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7112020"/>
        <function-ref name="set" scoped="" ref="0x7f49d71121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7112340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d7114c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d71124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7112660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f49d7147c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d7147c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7146020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f49d7118bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f49d7118bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d7116020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d71161b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d7116340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d7114020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d7116660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d71167f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d7116980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d7116b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d7116ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d7116e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d7115020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d71151b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d7115340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d71155d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d7115760"/>
        <function-ref name="set" scoped="" ref="0x7f49d71158f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d7115a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d71164d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d7115c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d7115da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d5dd42c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5dd42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d5dd4640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5dd47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f49d5dcd440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f49d5dcd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d5dcd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d5dc6760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5dc6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d5dc6ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f49d5dc6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f49d5dcda50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f49d5dcda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f49d5dcddd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f49d5dcc020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f49d5dcc1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f49d5dcc340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f49d5dcc4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f49d5dcc660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f49d5dcc7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f49d5dcc980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d5dccb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f49d5dccca0"/>
        <function-ref name="getData" scoped="" ref="0x7f49d5dcce30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f49d5dcb020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f49d5dcb1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f49d5dcb440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f49d5dcb5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f49d5dcb760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f49d5dcb8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f49d5dcba80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f49d5dcbc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f49d5dcbda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f49d5dca020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f49d5dca1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f49d5dca340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f49d5dca4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f49d5dca660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f49d5dca9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f49d5dcab80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f49d5dcad10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f49d5dc9020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f49d5dc91b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f49d5dc9340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f49d5dc94d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f49d5dc9660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f49d5dc97f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f49d5dc9980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f49d5dc9b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f49d5dc9ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f49d5dc9e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f49d5dc8020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f49d5dc81b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f49d5dc8340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f49d5dc84d0"/>
        <function-ref name="setData" scoped="" ref="0x7f49d5dc8660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f49d5dc87f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f49d5dc8980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f49d5dc8b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f49d5dc8ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f49d5dc8e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f49d5dc7020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f49d5dc75b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f49d5dc7740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f49d5dc78d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f49d5dc7a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f49d5dc7bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f49d5dc7d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f49d5dc6020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f49d5dc61b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f49d5dc6340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f49d5dc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f49d5dcec10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d5dcec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d5dcd020"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d5dcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d5dd5640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d5dd5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5dd59c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d5dd5b50"/>
        <function-ref name="request" scoped="" ref="0x7f49d5dd5ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5dd5e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5dd4030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f49d5dd22b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d5dd22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d5dd2630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d5dd27c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d5dd2950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d5dd2ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d5dd2c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d5dd2e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d5dd1020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d5dd11b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d5dd1340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d5dd14d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d5dd1660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d5dd17f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d5dd1980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d5dd1c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d5dd1da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d5dd0020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d5dd01b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d5dd0340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d5dd04d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d5dd0660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d5dd07f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d5dd0980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d5dd0b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d5dd0ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d5dd0e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d5dcf220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d5dcf3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d5dcf540"/>
        <function-ref name="tx" scoped="" ref="0x7f49d5dcf6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d5dcf860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d5dcf9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d5dcfb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d5dcfd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d5dce020"/>
        <function-ref name="rx" scoped="" ref="0x7f49d5dce1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d5dce340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d5dce4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d5dce660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d5dce7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d5dce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d5dd4a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5dd4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d5dd4de0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d5dd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d70642c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d70642c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d7064640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d70647d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d70638a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d70638a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d7063c20"/>
        <function-ref name="configure" scoped="" ref="0x7f49d7063db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f49d70684d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f49d70684d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d7068850"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d70689e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d7065020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d7065020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d70653a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d7065530"/>
        <function-ref name="request" scoped="" ref="0x7f49d70656c0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d7065850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d70659e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f49d70663f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d70663f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7066770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d7064ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d7064ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d7064e50"/>
        <function-ref name="userId" scoped="" ref="0x7f49d7063020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f49d704ebf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d704ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d704d020"/>
        <function-ref name="userId" scoped="" ref="0x7f49d704d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f49d7061d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f49d7061d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d7060180"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d7060310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f49d704e5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f49d704e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d704e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f49d7060710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d7060710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d7060ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f49d7060d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f49d7060d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d704e180"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d704e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d6fcea60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d6fcea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d6fcee00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d6fcd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d6fcc790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d6fcc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d6fccb30"/>
        <function-ref name="configure" scoped="" ref="0x7f49d6fcccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f49d6fcd270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d6fcd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6fcd5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f49d6fcd780"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6fcd910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6fcdaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d6fcdc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6fd0ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6fd0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6fce0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6fce230"/>
        <function-ref name="request" scoped="" ref="0x7f49d6fce3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6fce550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6fce6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f49d6fcb020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d6fcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d6fcb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d6fcde80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6fcde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d6fcc220"/>
        <function-ref name="userId" scoped="" ref="0x7f49d6fcc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d5d5c020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d5d5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d5d5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f49d5d5c630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f49d5d5c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f49d5d5c9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f49d5d5cb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f49d5d5ccd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f49d5d5ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d5d586c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5d586c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d5d58a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5d58bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d5d569d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5d569d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d5d56d70"/>
        <function-ref name="configure" scoped="" ref="0x7f49d5d55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f49d5d552b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f49d5d552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f49d5d55630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f49d5d557c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f49d5d55950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f49d5d55ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f49d5d58e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d5d58e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5d571e0"/>
        <function-ref name="requested" scoped="" ref="0x7f49d5d57370"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5d57500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5d57690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5d57820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d5d55d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d5d55d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d5d540e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d5d54270"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d5d54400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d5d54590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d5d54720"/>
        <function-ref name="get" scoped="" ref="0x7f49d5d548b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d5d54a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d5d531b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d5d54d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d5d54bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d5d53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d5d59850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d5d59850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5d59bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d5d59d80"/>
        <function-ref name="request" scoped="" ref="0x7f49d5d58020"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5d581b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5d58340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f49d5d562d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d5d562d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d5d56650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d5d57a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5d57a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d5d57df0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d5d56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f49d5d53480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f49d5d53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d5d53800"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d5d53990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f49d6fc2020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f49d6fc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f49d6fc23a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f49d6fc2530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f49d6fc26c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f49d6fc2850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f49d6fc29e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f49d6fc2b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f49d6fc2d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f49d6fc1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d6fc11b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f49d6fc1340"/>
        <function-ref name="getData" scoped="" ref="0x7f49d6fc14d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f49d6fc1660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f49d6fc17f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f49d6fc1a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f49d6fc1c10"/>
        <function-ref name="getIV" scoped="" ref="0x7f49d6fc1da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f49d6fc0020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f49d6fc01b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f49d6fc0340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f49d6fc04d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f49d6fc0660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f49d6fc07f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f49d6fc0980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f49d6fc0b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f49d6fc0ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f49d6fbf220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f49d6fbf3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f49d6fbf540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f49d6fbf6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f49d6fbf860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f49d6fbf9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f49d6fbfb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f49d6fbfd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f49d6fbe020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f49d6fbe1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f49d6fbe340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f49d6fbe4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f49d6fbe660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f49d6fbe7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f49d6fbe980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f49d6fbeb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f49d6fbeca0"/>
        <function-ref name="setData" scoped="" ref="0x7f49d6fbee30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f49d6fbd020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f49d6fbd1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f49d6fbd340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f49d6fbd4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f49d6fbd660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f49d6fbd7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f49d6fbdd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f49d6fbc020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f49d6fbc1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f49d6fbc340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f49d6fbc4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f49d6fbc660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f49d6fbc7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f49d6fbc980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f49d6fbcb10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f49d6fbcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f49d6fb2bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f49d6fb2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d6fb0020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d6fb01b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d6fb0340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d6fb04d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d6fb0660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d6fb07f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d6fb0980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d6fb0b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d6fb0ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d6fb0e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d6faf020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d6faf1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d6faf340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d6faf5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d6faf760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d6faf8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d6fafa80"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d6fafc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d6fafda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d6fae020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d6fae1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d6fae340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d6fae4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d6fae660"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d6fae7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d6faeb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d6faed10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d6fad020"/>
        <function-ref name="tx" scoped="" ref="0x7f49d6fad1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d6fad340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d6fad4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d6fad660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d6fad7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d6fad980"/>
        <function-ref name="rx" scoped="" ref="0x7f49d6fadb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d6fadca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d6fade30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d6fac020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d6fac1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d6fac340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f49d6faae40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f49d6faae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6fa91e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6fa9370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d6fa9500"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6fa71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6fa9820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6fa99b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d6fa9b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d6fa9cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6fa9e60"/>
        <function-ref name="get" scoped="" ref="0x7f49d6fa8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d6fa81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d6fa8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d6fa84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d6fa8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d6fa88f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6fa8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d6fa8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d6fa9690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d6fa8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d6fa7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f49d6fbbd40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f49d6fbbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f49d6fb80e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f49d6fb8270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f49d6fb8400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f49d6fb8590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f49d6fb8720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f49d6fb88b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f49d6fb8a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f49d6fb8bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d6fb8d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f49d6fb7020"/>
        <function-ref name="getData" scoped="" ref="0x7f49d6fb71b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f49d6fb7340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f49d6fb74d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f49d6fb7760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f49d6fb78f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f49d6fb7a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f49d6fb7c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f49d6fb7da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f49d6fb6020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f49d6fb61b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f49d6fb6340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f49d6fb64d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f49d6fb6660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f49d6fb67f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f49d6fb6980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f49d6fb6d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f49d6fb5020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f49d6fb51b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f49d6fb5340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f49d6fb54d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f49d6fb5660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f49d6fb57f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f49d6fb5980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f49d6fb5b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f49d6fb5ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f49d6fb5e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f49d6fb4020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f49d6fb41b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f49d6fb4340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f49d6fb44d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f49d6fb4660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f49d6fb47f0"/>
        <function-ref name="setData" scoped="" ref="0x7f49d6fb4980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f49d6fb4b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f49d6fb4ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f49d6fb4e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f49d6fb3020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f49d6fb31b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f49d6fb3340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f49d6fb38d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f49d6fb3a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f49d6fb3bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f49d6fb3d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f49d6fb2020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f49d6fb21b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f49d6fb2340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f49d6fb24d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f49d6fb2660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f49d6fb27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f49d6fac700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f49d6fac700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6faca80"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6facc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d6facda0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6faaa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6fab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6fab340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d6fab4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d6fab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6fab7f0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6fab980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d6fabb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d6fabca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d6fabe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d6faa120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d6faa2b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6faa440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d6faa5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d6fab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d6faa760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d6faa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f49d6e96c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6e96c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e94210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f49d6ea0da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f49d6ea0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f49d6e99b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6e99b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e98020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f49d6e93670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6e93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e939f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f49d6e8ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f49d6e8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8b210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f49d6e93e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f49d6e93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e92210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f49d6e7f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6e7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e7f670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e7f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f49d6e822f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6e822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e82670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e82800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f49d6e9e120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6e9e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f49d6e88670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f49d6e88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e889f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f49d6e832f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6e832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e83670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e83800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f49d6e98c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f49d6e98c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e97020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f49d6e97c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6e97c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e96020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f49d6e8d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6e8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f49d6e90e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f49d6e90e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8f210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f49d6e92670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6e92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e929f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d6ea2760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6ea2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d6ea2ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d6ea2c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d6ea2e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f49d6e9daa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6e9daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f49d6e9c120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f49d6e9c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f49d6e86a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6e86a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e86df0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f49d6e9c870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6e9c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f49d6e83ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6e83ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e83e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f49d6e9edc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6e9edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f49d6e89e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f49d6e89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e88210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f49d6e97480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6e97480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e97800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e97990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f49d6e98480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6e98480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e98800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e98990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f49d6ea0750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6ea0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ea0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f49d6e8ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6e8ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e89210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f49d6e8b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f49d6e8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f49d6e89670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6e89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e899f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f49d6e81ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6e81ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e81e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f49d6e82ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6e82ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e82e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f49d6e8f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f49d6e8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f49d6e8be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f49d6e8be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8a210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f49d6e84ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6e84ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e84e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f49d6e91670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6e91670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e919f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e91b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f49d6e7fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6e7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6e7fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6e7e020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e7e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6e7e340"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6e7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f49d6ea0100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6ea0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6ea0480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f49d6e99370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f49d6e99370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e996f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e99880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f49d6e96480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6e96480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e96800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e96990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f49d6e8de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6e8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8c210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f49d6e92e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6e92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e91210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f49d6e8c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6e8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f49d6e94670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6e94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e949f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f49d6e9f450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f49d6e9f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f49d6e94e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6e94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e93210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6ea3a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6ea3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6ea3e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6ea2020"/>
        <function-ref name="request" scoped="" ref="0x7f49d6ea21b0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6ea2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6ea24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f49d6e9a020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6e9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f49d6e9acc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f49d6e9acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e990a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f49d6e842f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f49d6e842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e84670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f49d6e85ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6e85ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e85e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f49d6e9d450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6e9d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f49d6e852f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6e852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e85670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e85800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f49d6e812f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f49d6e812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e81670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e81800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f49d6e8fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6e8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8d210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f49d6e8a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f49d6e8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e8a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e8ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f49d6e9faa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f49d6e9faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f49d6e9e770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6e9e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f49d6e91e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6e91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e90210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f49d6e9a670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f49d6e9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e9a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f49d6e90670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f49d6e90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e909f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e90b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f49d6e88e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f49d6e88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e86610"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e867a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f49d6e7e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6e7e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6e7eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6e7ecb0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e7ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6e7d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6e7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f49d6e69c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6e69c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e68210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f49d6e74da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f49d6e74da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e73180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f49d6e6db50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6e6db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e6b020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f49d6e67670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6e67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e679f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e67b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f49d6e60e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f49d6e60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5f210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f49d6e67e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f49d6e67e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e66210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f49d6e532f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6e532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e53670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e53800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f49d6e552f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6e552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e55670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e55800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f49d6e71120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6e71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e714a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f49d6e5b670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f49d6e5b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f49d6e562f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6e562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e56670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e56800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f49d6e6bc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f49d6e6bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e6a020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f49d6e6ac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6e6ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e69020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f49d6e61670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6e61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e619f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e61b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f49d6e63e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f49d6e63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e62210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f49d6e66670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6e66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e669f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e66b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d6e75760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6e75760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d6e75ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d6e75c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d6e75e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f49d6e70aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6e70aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e70e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f49d6e6f120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f49d6e6f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e6f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f49d6e5aa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6e5aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5adf0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f49d6e6f870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6e6f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e6fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f49d6e56ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6e56ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e56e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f49d6e71dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6e71dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e70180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f49d6e5ce50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f49d6e5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5b210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f49d6e6a480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6e6a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e6a800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e6a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f49d6e6b480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6e6b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e6b800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e6b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f49d6e74750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6e74750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e74ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f49d6e5de50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6e5de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5c210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f49d6e5f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f49d6e5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f49d6e5c670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6e5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f49d6e54ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6e54ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e54e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f49d6e55ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6e55ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e55e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f49d6e62670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f49d6e62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e629f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e62b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f49d6e5fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f49d6e5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5d210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f49d6e58ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6e58ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e58e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f49d6e64670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6e64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e649f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f49d6e53ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6e53ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6e53e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6e52020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e521b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6e52340"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6e524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f49d6e74100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6e74100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e74480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f49d6e6d370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f49d6e6d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e6d6f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e6d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f49d6e69480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6e69480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e69800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e69990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f49d6e61e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6e61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e60210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f49d6e66e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6e66e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e64210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f49d6e60670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6e60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e609f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e60b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f49d6e68670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6e68670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e689f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e68b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f49d6e73450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f49d6e73450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e737d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f49d6e68e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6e68e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e67210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6e769e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6e769e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6e76d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6e75020"/>
        <function-ref name="request" scoped="" ref="0x7f49d6e751b0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6e75340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6e754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f49d6e6e020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6e6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e6e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f49d6e6ecc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f49d6e6ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e6d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f49d6e582f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f49d6e582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e58670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e58800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f49d6e59ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6e59ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e59e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f49d6e70450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6e70450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e707d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f49d6e592f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6e592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e59670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e59800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f49d6e542f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f49d6e542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e54670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e54800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f49d6e62e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6e62e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e61210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f49d6e5d670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f49d6e5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f49d6e73aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f49d6e73aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e73e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f49d6e71770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6e71770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e71af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f49d6e64e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6e64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e63210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f49d6e6e670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f49d6e6e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6e6e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f49d6e63670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f49d6e63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e639f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e63b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f49d6e5be50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f49d6e5be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e5a610"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e5a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f49d6e527a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6e527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6e52b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6e52cb0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e52e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6e51020"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6e511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f49d6e4ab20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d6e4ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f49d6e47020"/>
        <function-ref name="changed" scoped="" ref="0x7f49d6e471b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f49d6e47340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f49d6e474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f49d6e49d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d6e49d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f49d6e320e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f49d6e2e310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f49d6e2e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f49d6e2e690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f49d6e2b880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e2b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e2bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f49d6e20020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e203a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f49d6e17bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f49d6e17bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e1a020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f49d6e1a530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f49d6e1a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6e1a8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6e1aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f49d6e1b140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f49d6e1b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e1b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f49d6e1fc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f49d6e1fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e06020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e061b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f49d6e06540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f49d6e06540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6e068c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6e06a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6e06be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6e06d70"/>
        <function-ref name="get" scoped="" ref="0x7f49d6e05020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6e051b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6e05340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6e054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f49d6dfd950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f49d6dfd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f49d6e00780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f49d6e02150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f49d6e02150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6e024d0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6e02660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f49d6e029f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f49d6e029f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6e02d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6e01020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6e011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6e01340"/>
        <function-ref name="get" scoped="" ref="0x7f49d6e014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6e01660"/>
        <function-ref name="set" scoped="" ref="0x7f49d6e017f0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6e01980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f49d6e04ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f49d6e04ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f49d6ddcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f49d6ddaa90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f49d6ddaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f49d6dcb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f49d6dca020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d6dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6dcae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6dc9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6dc9340"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6dc9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f49d6dc4530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f49d6dc4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6dc33d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6dc3d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6dc3890"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6dc2260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f49d6dbd020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d6dbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6dbd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d6dbd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d6dbd6c0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6dbd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d6dbd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6dbdb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d6dbdd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6dbc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6dbc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d6dbc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d6dbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d6dc1e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d6dc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c5f460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f49d7c5f7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6dbfca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6dbe670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6dbe1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6dbeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f49d6e07590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f49d6e07590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6e07910"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6e07aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6e07c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6e07dc0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6db7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6db71b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6db7340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6db74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f49d6db4c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f49d6db4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6db3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6db31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d6db3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d6db1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6db3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6db37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d6db3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d6db3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6db3ca0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6db3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d6db2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d6db21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d6db2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d6db25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d6db2760"/>
        <function-ref name="set" scoped="" ref="0x7f49d6db28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d6db2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d6db2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6db34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d6db2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f49d6db69e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f49d6db69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6db6d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6db4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6db41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6db4340"/>
        <function-ref name="get" scoped="" ref="0x7f49d6db44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6db4660"/>
        <function-ref name="set" scoped="" ref="0x7f49d6db47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6db4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d6dac1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d6dac1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6dac530"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6dac6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f49d6d9dcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d6d9dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d6d9c0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d6d9c230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d6d9c3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d6d9c550"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d6d9c6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d6d9c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f49d6d99990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f49d6d99990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f49d6d99d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f49d6d9d020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f49d6d9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6d9d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6d9d530"/>
        <function-ref name="modify" scoped="" ref="0x7f49d6d9d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6d9d850"/>
        <function-ref name="resend" scoped="" ref="0x7f49d6d9d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d6da06c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d6da06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6da0a40"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6da0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f49d6d9b150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f49d6d9b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f49d6d9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f49d6d8f970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d6d8f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d6d8fcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d6d8fe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d6d8e030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d6d8e1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d6d8e350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d6d8e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f49d6d85950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f49d6d85950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d6d83020"/>
        <function-ref name="clear" scoped="" ref="0x7f49d6d83750"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d6d84780"/>
        <function-ref name="set" scoped="" ref="0x7f49d6d83e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f49d6d6e020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6d6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d6e3a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d6e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f49d6d6e890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6d6e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d6ec10"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d6eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f49d6d8e900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f49d6d8e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f49d6d8ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f49d6d71530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6d71530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6d718b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f49d6d80880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f49d6d80880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f49d6d80c00"/>
        <function-ref name="disable" scoped="" ref="0x7f49d6d80d90"/>
        <function-ref name="captured" scoped="" ref="0x7f49d6d7f020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f49d6d7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f49d6d8dae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f49d6d8dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6d88390"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6d89360"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d6d89ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6d89820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d6d88850"/>
        <function-ref name="start" scoped="" ref="0x7f49d6d8a970"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6d8ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f49d6d88d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6d88d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d6d860a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d6d86230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d6d863c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d6d86550"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d6d866e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d6d86870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f49d6d73550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6d73550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d738d0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d73a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f49d6d73e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6d73e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d721c0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d72350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f49d6d67d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6d67d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6d6b0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f49d6d6b270"/>
        <function-ref name="sfd" scoped="" ref="0x7f49d6d6b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d6d91bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d6d91bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6d8f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6d8f1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f49d6d8f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6d8f4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f49d6d8f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f49d6d75d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6d75d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d6d740e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d6d74270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d6d74400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f49d6d71c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6d71c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6d70020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f49d6d78820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f49d6d78820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6d78ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6d78d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6d77020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6d771b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6d77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6d774d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6d77660"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6d777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6d92c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6d92c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6d91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d6d86bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6d86bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6d85020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d6d851b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d6d85340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f49d6d7abe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6d7abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6d80020"/>
        <function-ref name="isSet" scoped="" ref="0x7f49d6d801b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6d80340"/>
        <function-ref name="set" scoped="" ref="0x7f49d6d804d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f49d6d703e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6d703e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d70960"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d70af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f49d6d75020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f49d6d75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6d753a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6d75530"/>
        <function-ref name="request" scoped="" ref="0x7f49d6d756c0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6d75850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6d759e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f49d6d7f500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f49d6d7f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6d7f980"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6d7fb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6d7fca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6d7fe30"/>
        <function-ref name="get" scoped="" ref="0x7f49d6d78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6d781b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6d78340"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6d784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f49d6d6d130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6d6d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d6d4b0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d6d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f49d6d6d9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6d6d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d6dd40"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f49d6d726d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6d726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6d72a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f49d6d77b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f49d6d77b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6d76020"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6d761b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6d76340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6d764d0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6d76660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6d767f0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6d76980"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6d76b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d6d6b6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d6d6b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d6d6ba40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d6d6bbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d6d6bd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d6d6a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d6d6a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6d6a340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d6d6a4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d6d6ab10"/>
        <function-ref name="set" scoped="" ref="0x7f49d6d6a660"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d6d6a7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d6d6a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f49d6d6f5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6d6f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6d6f960"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d6faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d6d91320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d6d91320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6d916a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6d91830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f49d6d74780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6d74780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6d74b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6d74c90"/>
        <function-ref name="write" scoped="" ref="0x7f49d6d74e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6d73020"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6d731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f49d6d72de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f49d6d72de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6d71180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f49d6d70e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f49d6d70e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6d6f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f49d6d8d0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f49d6d8d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f49d6d8d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f49d6ccdc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6ccdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccc210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f49d6cd7020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f49d6cd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f49d6cd1c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6cd1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccf020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f49d6ccb670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6ccb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f49d6cc4e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f49d6cc4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc3210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f49d6ccbe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f49d6ccbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cca210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f49d6cb72f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6cb72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cb7670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f49d6cb92f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6cb92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cb9670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f49d6cd5370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6cd5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f49d6cbf670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f49d6cbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f49d6cba2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6cba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cba670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f49d6ccfc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f49d6ccfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cce020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f49d6ccec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6ccec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccd020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f49d6cc5670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6cc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc59f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f49d6cc7e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f49d6cc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc6210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f49d6cca670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6cca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d6cd98f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6cd98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d6cd9c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d6cd9e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d6cd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f49d6cd4d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6cd4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f49d6cd3370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f49d6cd3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f49d6cbea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6cbea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbedf0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f49d6cd3ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6cd3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f49d6cbaad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6cbaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbae50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f49d6cd4060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6cd4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd43e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f49d6cc0e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f49d6cc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbf210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f49d6cce480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6cce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cce800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cce990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f49d6ccf480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6ccf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccf800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f49d6cd8940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6cd8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f49d6cc1e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6cc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc0210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f49d6cc3670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f49d6cc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc39f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f49d6cc0670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6cc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc09f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f49d6cb8ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6cb8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cb8e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f49d6cb9ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6cb9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cb9e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f49d6cc6670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f49d6cc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc69f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f49d6cc3e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f49d6cc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc1210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f49d6cbcad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6cbcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbce50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f49d6cc8670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6cc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc89f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f49d6cb7ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6cb7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6cb7e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6cb6020"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6cb6340"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6cb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f49d6cd82f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6cd82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f49d6cd1490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f49d6cd1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cd1810"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cd19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f49d6ccd480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6ccd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccd800"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f49d6cc5e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6cc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc4210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f49d6ccae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6ccae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc8210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f49d6cc4670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6cc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc49f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f49d6ccc670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6ccc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f49d6cd7670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f49d6cd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f49d6ccce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6ccce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6ccb210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6ccb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6cdac30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6cdac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6cd9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6cd91b0"/>
        <function-ref name="request" scoped="" ref="0x7f49d6cd9340"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6cd94d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6cd9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f49d6cd2160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6cd2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f49d6cd2e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f49d6cd2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f49d6cbc2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f49d6cbc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbc670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f49d6cbdad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6cbdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbde50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f49d6cd46b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6cd46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f49d6cbd2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6cbd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbd670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f49d6cb82f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f49d6cb82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cb8670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f49d6cc6e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6cc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc5210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f49d6cc1670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f49d6cc1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc19f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f49d6cd7cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f49d6cd7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f49d6cd59c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6cd59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f49d6cc8e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6cc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc7210"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f49d6cd27b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f49d6cd27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6cd2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f49d6cc7670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f49d6cc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cc79f0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f49d6cbfe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f49d6cbfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6cbe610"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cbe7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f49d6cb67a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6cb67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6cb6b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6cb6cb0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6cb6e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6cb5020"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6cb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f49d6caadf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6caadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6ca71c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f49d6ca7350"/>
        <function-ref name="sfd" scoped="" ref="0x7f49d6ca74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6ca77c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6ca77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6ca7b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f49d6ca5020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f49d6ca5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f49d6ca53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d6caa5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d6caa5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6caa940"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6caaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f49d6c9e380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f49d6c9e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6c9e700"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6c9e890"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6c9ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6c9ebb0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6c9ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6c9d020"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c9d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6c9d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f49d6c97b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f49d6c97b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f49d6c96020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f49d6c961b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f49d6c96340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f49d6c964d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f49d6c96660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f49d6c967f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f49d6c96980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f49d6c96b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f49d6c96ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f49d6c96e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f49d6c95020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f49d6c951b0"/>
        <function-ref name="sync" scoped="" ref="0x7f49d6c95340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f49d6c955d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f49d6c95760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f49d6c809d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f49d6c809d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d6c80d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d6c7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f49d6c95d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f49d6c95d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d6c92330"/>
        <function-ref name="clear" scoped="" ref="0x7f49d6c92a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d6c94ba0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c91210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f49d6c9d6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f49d6c9d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6c9da30"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6c9dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6c9dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6c9c020"/>
        <function-ref name="get" scoped="" ref="0x7f49d6c9c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6c9c340"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c9c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6c9c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f49d6c90cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6c90cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6c8f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c8f230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f49d6c8f590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6c8f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6c8f910"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c8faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f49d6c8d6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6c8d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6c8da50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c8dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f49d6c98330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c98330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d6c986b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d6c98840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d6c989d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d6c98b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d6c98cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d6c98e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f49d6ca1550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f49d6ca1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6ca18d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f49d6ca1a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f49d6ca1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f49d6c993a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f49d6c993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6c99720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f49d6c9f020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f49d6c9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6c9f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6c9f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6c9f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6c9f850"/>
        <function-ref name="get" scoped="" ref="0x7f49d6c9f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6c9fb70"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c9fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6c9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f49d6c8c020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6c8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6c8c3a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c8c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6ca2620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6ca2620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6ca29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d6c971e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c971e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6c97560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d6c976f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d6c97880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6ca0020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6ca0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6ca03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f49d6c9b6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f49d6c9b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6c9ba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6c9bbf0"/>
        <function-ref name="request" scoped="" ref="0x7f49d6c9bd80"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6c9a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6c9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f49d6c8fe00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6c8fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6c8d1c0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c8d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f49d6c9a530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6c9a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6c9a8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6c9aa40"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c9abd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6c9ad60"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6c99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f49d6c8c8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6c8c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6c8ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f49d6ca07c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f49d6ca07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f49d6ca0b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d6c8b150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d6c8b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d6c8b4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d6c8b660"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d6c8b7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d6c8b980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d6c8bb10"/>
        <function-ref name="get" scoped="" ref="0x7f49d6c8bca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d6c8be30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d6c8a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c8a020"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d6c8a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d6c8a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f49d6c903e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6c903e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6c90760"/>
        <function-ref name="write" scoped="" ref="0x7f49d6c908f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f49d6c91b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6c91b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6c90020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f49d6c9ca50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f49d6c9ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d6c9cdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f49d6c9b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f49d6c9b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f49d6c9b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f49d6c99ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6c99ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6c98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d6ca2ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d6ca2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6ca10a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6ca1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f49d6c1fa70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d6c1fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f49d6c1fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f49d6c23670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d6c239f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d6c23b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d6c23d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d6c20020"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d6c201b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d6c20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f49d6c1e550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c1e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d6c1db00"/>
        <function-ref name="clear" scoped="" ref="0x7f49d6c1b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d6c1d3d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c1b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f49d6c1f0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c1f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6c1f440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d6c1f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d6c1f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f49d6c16480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6c16480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6c16800"/>
        <function-ref name="isSet" scoped="" ref="0x7f49d6c16990"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6c16b20"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c16cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f49d6c1a660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d6c1a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d6c19ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f49d6c17460"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d6c195b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c17b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f49d6c206e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f49d6c206e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d6c20a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d6c20bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d6c20d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f49d6c10020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f49d6c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f49d6c103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f49d6c15d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d6c15d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d6c120e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d6c12270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d6c12400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d6c12590"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d6c12720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d6c128b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f49d6c074a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6c074a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6c07820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d6c079b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6c07b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6c07cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d6c07e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f49d6c10a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f49d6c10a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d6c0d020"/>
        <function-ref name="clear" scoped="" ref="0x7f49d6c0d750"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d6c0e8d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c0de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f49d6c11640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6c11640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6c119c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d6c11b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d6c11ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f49d6c088b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f49d6c088b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6c08c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f49d6c08dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6c07020"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f49d6c02820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f49d6c02820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6c044c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f49d6c04b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f49d6c04b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6c037d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f49d6c0caf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f49d6c0caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f49d6c090d0"/>
        <function-ref name="clear" scoped="" ref="0x7f49d6c09800"/>
        <function-ref name="isValid" scoped="" ref="0x7f49d6c0a970"/>
        <function-ref name="set" scoped="" ref="0x7f49d6c08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f49d6c12c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f49d6c12c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d6c11020"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d6c111b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d6c11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f49d6bb2790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f49d6bb2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6ba83f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f49d6ba8a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d6ba8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6ba7890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6ba6260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6ba7d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6ba6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f49d6ba11d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6ba11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6b9d630"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6b9fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d6b9e9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d6b9e550"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d6b9c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d6b9dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6b9e0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d6ba1dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d6b9d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d6b9f2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6b9f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f49d6b9c610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f49d6b9c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6b9a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6ba23a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6ba23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6ba2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d6b6d870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d6b6d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6b69090"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6b6a090"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d6b6aa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6b6a550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d6b69550"/>
        <function-ref name="start" scoped="" ref="0x7f49d6b6c6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6b6cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6b6d020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6b6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6b6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d5c24260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d5c24260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d5c22b30"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5c23a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d5c224e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d5c22020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d5c21020"/>
        <function-ref name="start" scoped="" ref="0x7f49d5c23090"/>
        <function-ref name="stop" scoped="" ref="0x7f49d5c235a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d5c259d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d5c259d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d5c25d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f49d5c0ca80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d5c0ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d5c0ce00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d5c0b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d5c0b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d5c0b340"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5c0b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f49d5c0e020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d5c0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d5c0e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d5c0e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d5c0e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f49d5c0e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d5c0e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d5c0eb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d5c0ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d5c0d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d5c0d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d5c0d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d5c0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f49d5c0d760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d5c0d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d5c0dae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d5c0dc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d5c0de00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d5c0c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d5c0c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d5c0c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d5c0c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d5c0c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d5c0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f49d5c02760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f49d5c02760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f49d5c02ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f49d5c02c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f49d5c02e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f49d5c01020"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5c011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f49d5c05dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f49d5c05dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d5c04180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f49d5c04310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d5c044a0"/>
        <function-ref name="get" scoped="" ref="0x7f49d5c04630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d5c047c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d5c04950"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d5c04ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d5c04c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d5c04e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f49d5c03020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f49d5c031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d5c09bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d5c09bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d5c054e0"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5c064e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d5c06e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d5c069a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d5c059a0"/>
        <function-ref name="start" scoped="" ref="0x7f49d5c07a80"/>
        <function-ref name="stop" scoped="" ref="0x7f49d5c06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d5c09360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d5c09360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d5c096e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f49d5c03440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f49d5c03440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f49d5c037c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f49d5c03950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f49d5c03ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f49d5c03c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f49d5c03e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f49d5c02020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f49d5c021b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f49d5c02340"/>
        <function-ref name="setControl" scoped="" ref="0x7f49d5c024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d6b8cb70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d6b8cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6b899b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6b88360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6b89e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6b88820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f49d6b81b90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f49d6b81b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6b809d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6b7f4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6b7f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6b7f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d6b84610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d6b84610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6b835b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6b81020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6b83a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6b814e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f49d5c1e5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d5c1e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d5c1ce50"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5c1de00"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d5c1c800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d5c1c340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d5c1b340"/>
        <function-ref name="start" scoped="" ref="0x7f49d5c1d430"/>
        <function-ref name="stop" scoped="" ref="0x7f49d5c1d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f49d5c18d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f49d5c18d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d5c15670"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5c16550"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d5c15020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d5c16a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d5c15b30"/>
        <function-ref name="start" scoped="" ref="0x7f49d5c17b60"/>
        <function-ref name="stop" scoped="" ref="0x7f49d5c16090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f49d5c1b9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d5c1b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d5c1a7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d5c181b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d5c1aca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d5c18670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f49d6b379c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f49d6b379c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d6b37d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d6b35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f49d6b3a850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f49d6b3a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6b37090"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6b38090"/>
        <function-ref name="startAt" scoped="" ref="0x7f49d6b38a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6b38550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f49d6b37550"/>
        <function-ref name="start" scoped="" ref="0x7f49d6b396a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6b39bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d6b402f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d6b402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6b3c870"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6b3ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d6b3dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d6b3d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d6b3a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d6b3ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6b3d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d6b3e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d6b3c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d6b3e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6b3e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f49d6ab8020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f49d6ab8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6ab4630"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6ab6a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d6ab5920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d6ab54a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d6ab3020"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d6ab4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6ab5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d6ab8c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d6ab4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d6ab6110"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6ab65e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f49d6ab3450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f49d6ab3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f49d6ab37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d6abf8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d6abf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6ab9020"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6abc4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d6abb300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d6abce00"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d6ab9960"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d6ab94c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6abc960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d6abe560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d6abb930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d6abea50"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6abc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f49d5ba6020" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f49d5ba6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d5ba63a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d5ba6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f49d5bad180" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f49d5bad180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d5baa630"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5bacbf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d5bab990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d5bab510"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d5ba8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d5baaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d5bab090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d5badd70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d5baa020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d5bac2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d5bac770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f49d5ba78b0" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f49d5ba78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f49d5ba7c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f49d5ba8410" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f49d5ba8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f49d5ba74d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f49d5ba7660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f49d5ba8ab0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f49d5ba8c40"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f49d5ba8dd0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f49d5ba7020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f49d5ba71b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f49d5ba7340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f49d5ba8790"/>
        <function-ref name="node_id" scoped="" ref="0x7f49d5ba8920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d5bb5bc0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d5bb5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d5baf220"/>
        <function-ref name="fired" scoped="" ref="0x7f49d5bb2740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d5bb0570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d5bb00d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d5bafb60"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d5baf6c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d5bb2be0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d5bb3860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d5bb0ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d5bb3d50"/>
        <function-ref name="stop" scoped="" ref="0x7f49d5bb22a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f49d6ab0a20" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f49d6ab0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6aaf6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f49d6aafd20" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d6aafd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6aaeb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6aad550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6aad090"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d6aada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d6aa6ce0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d6aa6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6a91220"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6a947c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d6a93590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d6a93110"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d6a91b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d6a916a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6a94c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d6a95940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d6a93ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d6a95e10"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6a94340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f49d6a9d610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f49d6a9d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d6a9ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f49d6a9b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d6a9a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d6a9bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d6a98590"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d6a98110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d6a9b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d6a9c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d6a9a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d6a9c860"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6a9cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f49d6a802f0" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f49d6a802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a80870"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a80a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f49d6a8b670" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f49d6a8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a8b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f49d6a832f0" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f49d6a832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a83670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a83800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f49d6a7fce0" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f49d6a7fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f49d6a76500" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f49d6a76500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a76880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a76a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f49d6a7e500" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f49d6a7e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7e880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f49d6a6b900" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f49d6a6b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6bc80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f49d6a6d900" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f49d6a6d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6dc80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6de10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f49d6a899c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f49d6a899c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a89d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f49d6a73ce0" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f49d6a73ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a720a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a72230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f49d6a6e900" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f49d6a6e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6ec80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f49d6a822f0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f49d6a822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a82670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a82800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f49d6a812f0" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f49d6a812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a81670"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a81800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f49d6a79ce0" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f49d6a79ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a780a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a78230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f49d6a7a500" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f49d6a7a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7a880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f49d6a7ece0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f49d6a7ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f49d6a8c020" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f49d6a8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f49d6a8c3a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f49d6a8c530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f49d6a8c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f49d6a87370" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f49d6a87370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a876f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f49d6a879c0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f49d6a879c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a87e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f49d6a71120" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f49d6a71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a714a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a71630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f49d6a86160" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f49d6a86160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a864e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f49d6a6d120" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f49d6a6d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6d4a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f49d6a886b0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f49d6a886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a88a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f49d6a73500" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f49d6a73500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a73880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a73a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f49d6a82ad0" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f49d6a82ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a82e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f49d6a83ad0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f49d6a83ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a83e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f49d6a8b020" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f49d6a8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f49d6a74500" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f49d6a74500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a74880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a74a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f49d6a76ce0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f49d6a76ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a750a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a75230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f49d6a74ce0" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f49d6a74ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a730a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a73230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f49d6a6b120" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f49d6a6b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6b4a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f49d6a6c120" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f49d6a6c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6c4a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f49d6a7ace0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f49d6a7ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a790a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a79230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f49d6a75500" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f49d6a75500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a75880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a75a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f49d6a6e120" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f49d6a6e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6e4a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f49d6a7cce0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f49d6a7cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f49d6a6a120" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f49d6a6a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6a6a4a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6a6a630"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6a7c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6a6a950"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6a6aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f49d6a8c990" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f49d6a8c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a8cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f49d6a85ae0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f49d6a85ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a85e60"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f49d6a81ad0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f49d6a81ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a81e50"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f49d6a78500" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f49d6a78500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a78880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a78a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f49d6a7c500" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f49d6a7c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7c880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f49d6a78ce0" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f49d6a78ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a760a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a76230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f49d6a80cd0" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f49d6a80cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f49d6a8bcc0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f49d6a8bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f49d6a7f500" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f49d6a7f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7f880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6a8d250" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6a8d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6a8d5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6a8d760"/>
        <function-ref name="request" scoped="" ref="0x7f49d6a8d8f0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6a8da80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6a8dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f49d6a867b0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f49d6a867b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a86b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f49d6a85490" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f49d6a85490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a85810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f49d6a70900" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f49d6a70900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a70c80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a70e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f49d6a70120" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f49d6a70120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a704a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a70630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f49d6a88d00" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f49d6a88d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a870a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f49d6a71900" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f49d6a71900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a71c80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a71e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f49d6a6c900" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f49d6a6c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a6cc80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a6ce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f49d6a79500" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f49d6a79500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a79880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a79a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f49d6a75ce0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f49d6a75ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a740a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a74230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f49d6a89370" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f49d6a89370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a896f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f49d6a88060" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f49d6a88060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a883e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f49d6a7b500" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f49d6a7b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7b880"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f49d6a86e00" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f49d6a86e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f49d6a851c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f49d6a7bce0" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f49d6a7bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a7a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a7a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f49d6a72500" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f49d6a72500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f49d6a72c80"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a72e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f49d6a6adb0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f49d6a6adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f49d6a68180"/>
        <function-ref name="writeDone" scoped="" ref="0x7f49d6a68310"/>
        <function-ref name="write" scoped="" ref="0x7f49d6a684a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f49d6a68630"/>
        <function-ref name="readDone" scoped="" ref="0x7f49d6a687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f49d6a3fa20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f49d6a3fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f49d6a3fda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f49d6a3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f49d6a3d920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f49d6a3d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6a3f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6a43990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6a43990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6a43d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f49d6a38a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f49d6a38a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f49d6a38da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f49d6a37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f49d6a39940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f49d6a39940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6a38560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6a39080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6a39080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6a39400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f49d6a41aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d6a41aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d6a41e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d6a3a020"/>
        <function-ref name="isState" scoped="" ref="0x7f49d6a3a1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d6a3a340"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d6a3a4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d6a3a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d6a1d020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d6a1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6a1d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6a1d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6a1d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6a1d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6a1d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d6a1e220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d6a1e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6a1e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6a1e730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6a1e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6a1ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6a1ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d6a19e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d6a19e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6a18210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6a183a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6a18530"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6a186c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6a18850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d6a1ca10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d6a1ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6a1cd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6a19020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6a191b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6a19340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6a194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f49d6a168f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f49d6a168f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f49d6a16c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f49d6a16e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6a19750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6a19750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6a19ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d6a15170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d6a15170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6a154f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d6a15680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d6a15810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f49d6a18ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d6a18ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d6a18e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d6a16020"/>
        <function-ref name="isState" scoped="" ref="0x7f49d6a161b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d6a16340"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d6a164d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d6a16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f49d6a1a690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d6a1a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d6a1aa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d6a1aba0"/>
        <function-ref name="isState" scoped="" ref="0x7f49d6a1ad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d6a04020"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d6a041b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d6a04340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d69fe950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d69fe950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69fecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6a01aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6a01aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6a01e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f49d69fe200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f49d69fe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69fe580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d69f93f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d69f93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69f9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d69fab70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d69fab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d69f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d69fde30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d69fde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69fa1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d69f9a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d69f9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69f9df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d69f8020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d69f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f49d69fa570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f49d69fa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d69ca020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d69ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d69ca6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d69ca6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69caa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69cabc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69cad50"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69c9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d69cf8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d69cf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69cfc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69cfdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69ce020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69ce1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69ce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f49d69cec90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f49d69cec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69cc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69cc230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69cc3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69cc550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69cc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d69ce5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d69ce5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69ce960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d69d0be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d69d0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d69cf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d69cf1b0"/>
        <function-ref name="request" scoped="" ref="0x7f49d69cf340"/>
        <function-ref name="granted" scoped="" ref="0x7f49d69cf4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d69cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f49d69cca50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d69cca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69ccdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f49d69cb170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f49d69cb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d69cb4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d69cb680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69cb810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69cb9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d69cbb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d69c1d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d69c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69c0180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69c0310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69c04a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69c0630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69c07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d69c0b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d69c0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f49d6991db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f49d6991db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d6990180"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d6990310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f49d69be2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d69be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d69be670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d69be800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d69be990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d69beb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d69becb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d69bee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f49d69c3a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f49d69c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69c3da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69c2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69c21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69c2340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f49d69bdb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f49d69bdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f49d69bc020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f49d69bc1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f49d69bc340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f49d69bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d69bd170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d69bd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69bd4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d69bd680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d69bd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f49d69c3370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f49d69c3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69c36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d69c57b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d69c57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d69c5b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d69c5cc0"/>
        <function-ref name="request" scoped="" ref="0x7f49d69c5e50"/>
        <function-ref name="granted" scoped="" ref="0x7f49d69c4020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d69c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f49d69c44d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f49d69c44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69c4850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69c49e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69c4b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69c4d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f49d69c2840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f49d69c2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69c2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f49d69c1020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f49d69c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d69c13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d69c1530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d69c16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69c1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d69c19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6971dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6971dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6970180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f49d6970410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f49d6970410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f49d6970790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f49d6970920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f49d6970ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f49d6970c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d6965b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d6965b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d6964020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d69641b0"/>
        <function-ref name="start" scoped="" ref="0x7f49d6964340"/>
        <function-ref name="stop" scoped="" ref="0x7f49d69644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d6963860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d6963860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6963be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6963d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6962020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d69621b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6962340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d6962690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d6962690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6962a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d6969ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d6969ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69660a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6966230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69663c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6966550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69666e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f49d6965080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d6965080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f49d6965400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f49d6965590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f49d6965720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f49d69658b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f49d6964800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f49d6964800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d6964b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d6964d10"/>
        <function-ref name="isState" scoped="" ref="0x7f49d6963020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d69631b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d6963340"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d69634d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f49d6962d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f49d6962d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d6960180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d6960310"/>
        <function-ref name="start" scoped="" ref="0x7f49d69604a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6960630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6966980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6966980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6966d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f49d695d2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f49d695d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f49d695d650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f49d695d7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f49d695d970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f49d695db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f49d695f580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f49d695f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f49d695f900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f49d695fa90"/>
        <function-ref name="isState" scoped="" ref="0x7f49d695fc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f49d695fdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f49d695e020"/>
        <function-ref name="forceState" scoped="" ref="0x7f49d695e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d6950d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d6950d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d694f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d694f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d694f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d694f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d694f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d6953350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d6953350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69536d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6953860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69539f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6953b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6953d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f49d6950020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f49d6950020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f49d69503a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f49d6950530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f49d69506c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f49d6950850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f49d69509e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f49d694b1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d694b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d694b540"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d694b6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d694b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f49d694e410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f49d694e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f49d694e790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f49d694e920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f49d694eab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f49d694ec40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f49d694edd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d692b690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d692b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d692ba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d692d860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d692d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d692dbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d692dd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d692b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d692b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d692b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f49d6929610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f49d6929610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f49d6929990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f49d6929b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f49d6929cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f49d6929e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f49d6928020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f49d69281b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f49d6928340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f49d69284d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f49d6928660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f49d69287f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f49d6928980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f49d6928b10"/>
        <function-ref name="sync" scoped="" ref="0x7f49d6928ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f49d6927020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f49d69271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f49d692e8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f49d692e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d692ec30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d692edc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d692d020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d692d1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d692d340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d692d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f49d692fce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f49d692fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f49d692e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f49d69261f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f49d69261f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f49d6926570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f49d6926700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f49d6926890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f49d6926a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f49d6926bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f49d6926d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d6930a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6930a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6930e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d692f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d692f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d692f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d692f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d6933020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d6933020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d69333a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6933530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d69336c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6933850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d69339e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f49d6932df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f49d6932df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d69311c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f49d692bce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f49d692bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f49d692a0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f49d692a230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f49d692a3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f49d692a550"/>
        <function-ref name="getPower" scoped="" ref="0x7f49d692a6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f49d692a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f49d69274d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f49d69274d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f49d6927950"/>
        <function-ref name="changed" scoped="" ref="0x7f49d6927ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f49d6927c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f49d6927e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f49d692ab70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f49d692ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6929020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f49d69291b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f49d6929340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6932210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6932210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6932590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d6925d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d6925d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d69240e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d6924270"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d6924400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d6924590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d6924720"/>
        <function-ref name="get" scoped="" ref="0x7f49d69248b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d6924a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d69231b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6924bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d6924d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d6923020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d6931470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d6931470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d69317f0"/>
        <function-ref name="source" scoped="" ref="0x7f49d6931980"/>
        <function-ref name="address" scoped="" ref="0x7f49d6931b10"/>
        <function-ref name="destination" scoped="" ref="0x7f49d6931ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d6931e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d6930020"/>
        <function-ref name="type" scoped="" ref="0x7f49d69301b0"/>
        <function-ref name="setType" scoped="" ref="0x7f49d6930340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d69304d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d6930660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d69307f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f49d69250f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f49d69250f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6925470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6925600"/>
        <function-ref name="request" scoped="" ref="0x7f49d6925790"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6925920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6925ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d689b5c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d689b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d689b940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d689bad0"/>
        <function-ref name="start" scoped="" ref="0x7f49d689bc60"/>
        <function-ref name="stop" scoped="" ref="0x7f49d689bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d6898600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d6898600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6898980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6898b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6898ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6898e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6897020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d6897e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6897e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d68961c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d6896350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d68964e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6896670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d6896800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6897800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6897800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6897b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d6894b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d6894b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d6893020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d68931b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d6893340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d68934d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d6893660"/>
        <function-ref name="get" scoped="" ref="0x7f49d68937f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d6893980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d6892020"/>
        <function-ref name="set" scoped="" ref="0x7f49d6893b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d6893ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d6893e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f49d68941a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d68941a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d6894520"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d68946b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d6894840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d6896ab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d6896ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d6896e30"/>
        <function-ref name="source" scoped="" ref="0x7f49d6895020"/>
        <function-ref name="address" scoped="" ref="0x7f49d68951b0"/>
        <function-ref name="destination" scoped="" ref="0x7f49d6895340"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d68954d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d6895660"/>
        <function-ref name="type" scoped="" ref="0x7f49d68957f0"/>
        <function-ref name="setType" scoped="" ref="0x7f49d6895980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d6895b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d6895ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d6895e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f49d6835120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f49d6835120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d68354a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6835630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d68357c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6835950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6835ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f49d6835d70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f49d6835d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6834180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d6839110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d6839110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d68394b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6839640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d68397d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6839960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d6839af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d6837a40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6837a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6837dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d6836020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d68361b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6836340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d68364d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6839e70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6839e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6838240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f49d6836720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f49d6836720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d6836aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d6836c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d6836dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d6838490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d6838490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d6838810"/>
        <function-ref name="source" scoped="" ref="0x7f49d68389a0"/>
        <function-ref name="address" scoped="" ref="0x7f49d6838b30"/>
        <function-ref name="destination" scoped="" ref="0x7f49d6838cc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d6838e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d6837020"/>
        <function-ref name="type" scoped="" ref="0x7f49d68371b0"/>
        <function-ref name="setType" scoped="" ref="0x7f49d6837340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d68374d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d6837660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d68377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d68308d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d68308d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d6830c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d6830de0"/>
        <function-ref name="start" scoped="" ref="0x7f49d682f020"/>
        <function-ref name="stop" scoped="" ref="0x7f49d682f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d682e480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d682e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f49d7ce4960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d682e800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d682e990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d682eb20"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d682ecb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d682ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6830280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6830280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6830600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d682f940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d682f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f49d7ce4960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d682fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d682bdc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d682bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d6826180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d6826310"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d68264a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d6826630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d68267c0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6826950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d6826ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d68251b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d6826c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d6826e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d6825020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f49d682b4a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f49d682b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f49d7ce4960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f49d682b820"/>
        <function-ref name="offset" scoped="" ref="0x7f49d682b9b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f49d682bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f49d68222f0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f49d68222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f49d6822670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f49d6822800"/>
        <function-ref name="start" scoped="" ref="0x7f49d6822990"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6822b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f49d67bbe40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f49d67bbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d67ba1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d67ba370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f49d6811060" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f49d6811060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d68113e0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6811570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f49d67f3d10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f49d67f3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d67f10e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d67f1270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d6825c70" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d6825c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d6822020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f49d680ec50" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f49d680ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f49d6810020"/>
        <function-ref name="flush" scoped="" ref="0x7f49d68101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f49d67be400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f49d67be400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d67be780"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d67be910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f49d68128e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f49d68128e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f49d6812c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f49d6812df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f49d681f020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f49d681f1b0"/>
        <function-ref name="putData" scoped="" ref="0x7f49d681f340"/>
        <function-ref name="putDone" scoped="" ref="0x7f49d681f4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f49d681f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d681f8e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d681f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d681fc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d681fdf0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d6817020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d68171b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d6817340"/>
        <function-ref name="get" scoped="" ref="0x7f49d68174d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d6817660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d6817ca0"/>
        <function-ref name="set" scoped="" ref="0x7f49d68177f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d6817980"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d6817b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f49d67b70c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f49d67b70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d67b7440"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d67b75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f49d681c130" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f49d681c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f49d681c4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f49d681c640"/>
        <function-ref name="startSend" scoped="" ref="0x7f49d681c7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f49d681c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f49d68185c0" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f49d68185c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f49d6818940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f49d6818ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f49d6818c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f49d66edc50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f49d66edc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d66ec020"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d66ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d66f1830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d66f1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f49d7ce4960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d66f1bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d66f1d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d66f0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d66f01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d66f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f49d66ec480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f49d66ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d66ec800"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d66ec990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d66f1110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d66f1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f49d7ce4960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d66f14b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f49d66f0760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f49d66f0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f49d7ce4960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f49d66f0b00"/>
        <function-ref name="offset" scoped="" ref="0x7f49d66f0c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f49d66f0e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d66ee590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d66ee590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d66ee910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d66eeaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d66eec30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d66eedc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d66ed020"/>
        <function-ref name="get" scoped="" ref="0x7f49d66ed1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d66ed340"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d66ed980"/>
        <function-ref name="set" scoped="" ref="0x7f49d66ed660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d66ed4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d66ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f49d66ef9d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f49d66ef9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f49d66efd50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f49d66ee020"/>
        <function-ref name="startSend" scoped="" ref="0x7f49d66ee1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f49d66ee340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f49d66ef0e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f49d66ef0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f49d66ef460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f49d66ef5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f49d66ef780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f49d66dad20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f49d66dad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d66e50e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f49d66e5270"/>
        <function-ref name="receive" scoped="" ref="0x7f49d66e5400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f49d66e5590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f49d66e5720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f49d66e58b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d66e5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f49d66e9b60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f49d66e9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f49d66e6020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f49d66e61b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f49d66e6340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f49d66e64d0"/>
        <function-ref name="putData" scoped="" ref="0x7f49d66e6660"/>
        <function-ref name="putDone" scoped="" ref="0x7f49d66e67f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f49d66e6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d66e5cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d66e5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d66e40a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d66e4230"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d66e43c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d66e4550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d66e46e0"/>
        <function-ref name="get" scoped="" ref="0x7f49d66e4870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d66e4a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d66d91b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d66e4b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d66e4d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d66d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f49d66bd020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f49d66bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d66bd3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f49d66bd530"/>
        <function-ref name="receive" scoped="" ref="0x7f49d66bd6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f49d66bd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f49d66bf890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f49d66bf890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d66bfc10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f49d66bfda0"/>
        <function-ref name="receive" scoped="" ref="0x7f49d66be020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f49d66be1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f49d66be340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f49d66be4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d66be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d66bf080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d66bf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d66bf400"/>
        <function-ref name="stop" scoped="" ref="0x7f49d66bf590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d652bc70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d652bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d652a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d652a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f49d6529440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f49d6529440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d65297c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f49d6529950"/>
        <function-ref name="receive" scoped="" ref="0x7f49d6529ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f49d6529c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f49d6528020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d6528020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d65283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f49d652a440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f49d652a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d652a7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f49d652a950"/>
        <function-ref name="receive" scoped="" ref="0x7f49d652aae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f49d652ac70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f49d652ae00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f49d6529020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d65291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d652b020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d652b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d652b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d652b530"/>
        <function-ref name="request" scoped="" ref="0x7f49d652b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d652b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d652b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f49d66ada30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d66ada30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d66addb0"/>
        <function-ref name="configure" scoped="" ref="0x7f49d66ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f49d66a9020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f49d66a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d66a93a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f49d66a9530"/>
        <function-ref name="receive" scoped="" ref="0x7f49d66a96c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f49d66a9850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f49d66a6450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d66a6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d66a67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f49d66ab860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f49d66ab860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d66abbe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f49d66abd70"/>
        <function-ref name="receive" scoped="" ref="0x7f49d66aa020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f49d66aa1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f49d66aa340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f49d66aa4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d66aa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f49d66a71d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f49d66a71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d66a7550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d66a76e0"/>
        <function-ref name="request" scoped="" ref="0x7f49d66a7870"/>
        <function-ref name="granted" scoped="" ref="0x7f49d66a7a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d66a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d66ae7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d66ae7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d66aeb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d66aecb0"/>
        <function-ref name="request" scoped="" ref="0x7f49d66aee40"/>
        <function-ref name="granted" scoped="" ref="0x7f49d66ad020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d66ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f49d66a51d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d66a51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d66a5550"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d66a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f49d663adc0" loc="47:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d663adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d6639180"/>
        <function-ref name="configure" scoped="" ref="0x7f49d6639310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f49d6638890" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f49d6638890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6638c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f49d6638dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f49d6636020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f49d66361b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f49d66353e0" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d66353e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d6635780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f49d6635a50" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f49d6635a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d6635dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d6634020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d66341b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d6634340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d66344d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d6634660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d66347f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d6634980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d6634b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d6634ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d6634e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d6633020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d66331b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d6633440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d66335d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d6633760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d66338f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d6633a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d6633c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d6633da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d6632020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d66321b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d6632340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d66324d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d6632660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d66329f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d6632b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d6632d10"/>
        <function-ref name="tx" scoped="" ref="0x7f49d6631020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d66311b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d6631340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d66314d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d6631660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d66317f0"/>
        <function-ref name="rx" scoped="" ref="0x7f49d6631980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d6631b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d6631ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d6631e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d6630020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d66301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f49d66396d0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f49d66396d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d6639a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f49d6639c00"/>
        <function-ref name="receive" scoped="" ref="0x7f49d6639d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f49d6638020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f49d66381b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f49d6638340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d66384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f49d662f020" loc="55:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d662f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d662fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d662e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d662e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d662ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f49d66365b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f49d66365b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6636950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6636ae0"/>
        <function-ref name="request" scoped="" ref="0x7f49d6636c70"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6636e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6635020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d663a020" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d663a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d663a3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d663a550"/>
        <function-ref name="request" scoped="" ref="0x7f49d663a6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d663a870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d663aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f49d66305b0" loc="54:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f49d66305b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d6630950"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d6630ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d662d120" loc="56:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d662d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d662d4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d662d630"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d662d7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d662d950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d662dae0"/>
        <function-ref name="get" scoped="" ref="0x7f49d662dc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d662de00"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d662c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f49d662c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d662c020"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d662c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f49d661d860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d661d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d661dbe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d661dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f49d6620500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d6620500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6620880"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6620a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f49d6620d30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d6620d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d66240e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d6624270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d6624400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d6624590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d6624720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d66248b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d6624a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d6624bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d6624d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d6623020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d66231b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d6623340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d66234d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d6623760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d66238f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d6623a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d6623c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d6623da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d661f020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d661f1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d661f340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d661f4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d661f660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d661f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d661f980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d661fd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d661e020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d661e1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f49d661e340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d661e4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d661e660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d661e7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d661e980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d661eb10"/>
        <function-ref name="rx" scoped="" ref="0x7f49d661eca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d661ee30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d661d020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d661d1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d661d340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d661d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f49d660f890" loc="66:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f49d660f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d660fc10"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d660fda0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d660e020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d660dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d660e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d660e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d660e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d660e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d660e980"/>
        <function-ref name="get" scoped="" ref="0x7f49d660eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d660eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d660ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d660d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d660d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d660d440"/>
        <function-ref name="set" scoped="" ref="0x7f49d660d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d660d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d660e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d660d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d660da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f49d6614020" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f49d6614020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d66143a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d6614530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f49d660c020" loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f49d660c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d660c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d660c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d660c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d660a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d660c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d660cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d660cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d660b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d660b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d660b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d660b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d660b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d660b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d660ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d660bc10"/>
        <function-ref name="set" scoped="" ref="0x7f49d660bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d660a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d660c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d660a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d660a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f49d660a890" loc="68:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f49d660a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d660ac10"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d660ada0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d6609020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6608c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6609340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d66094d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d6609660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d66097f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6609980"/>
        <function-ref name="get" scoped="" ref="0x7f49d6609b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d6609ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d6609e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d6608020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d66082b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d6608440"/>
        <function-ref name="set" scoped="" ref="0x7f49d66085d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d6608760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d66091b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d66088f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d6608a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f49d66193c0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f49d66193c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d6619740"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d66198d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d6619a60"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d6619bf0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d6619d80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d6618020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d66181b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d6618340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d66184d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d6618660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d66187f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d6618980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d6618b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d6618da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d6617020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d66171b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d6617340"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d66174d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d6617660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d66177f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d6617980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d6617b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d6617ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d6617e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d6616020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d66163b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d6616540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d66166d0"/>
        <function-ref name="tx" scoped="" ref="0x7f49d6616860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d66169f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d6616b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d6616d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d6615020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d66151b0"/>
        <function-ref name="rx" scoped="" ref="0x7f49d6615340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d66154d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d6615660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d66157f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d6615980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d6615b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f49d661c9c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d661c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d661cd40"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6619020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f49d6611020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f49d6611020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d66113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6611530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d66116c0"/>
        <function-ref name="clr" scoped="" ref="0x7f49d660f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d66119e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d6611b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d6611d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d6610020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d66101b0"/>
        <function-ref name="get" scoped="" ref="0x7f49d6610340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d66104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d6610660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d66107f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d6610a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d6610c10"/>
        <function-ref name="set" scoped="" ref="0x7f49d6610da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d660f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d6611850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d660f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d660f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f49d66148f0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f49d66148f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f49d6614c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f49d6614e00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f49d6613020"/>
        <function-ref name="clr" scoped="" ref="0x7f49d6612c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f49d6613340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f49d66134d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f49d6613660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f49d66137f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f49d6613980"/>
        <function-ref name="get" scoped="" ref="0x7f49d6613b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f49d6613ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f49d6613e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f49d6612020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f49d66122b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f49d6612440"/>
        <function-ref name="set" scoped="" ref="0x7f49d66125d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f49d6612760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f49d66131b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f49d66128f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f49d6612a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f49d658b7c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f49d658b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c60c80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f49d7c5f020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f49d6587620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f49d6586020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f49d6587ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f49d65864e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d5aa6a90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5aa6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d5aa6e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5aa5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d5aa0be0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5aa0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d5a9f020"/>
        <function-ref name="configure" scoped="" ref="0x7f49d5a9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f49d5aa0440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f49d5aa0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d5aa07c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d5aa0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d5ab0e00" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d5ab0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5aa61c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d5aa6350"/>
        <function-ref name="request" scoped="" ref="0x7f49d5aa64e0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5aa6670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5aa6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f49d5aa5a50" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f49d5aa5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f49d5aa5dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f49d5aa4020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f49d5aa41b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f49d5aa4340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f49d5aa44d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f49d5aa4660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f49d5aa47f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f49d5aa4980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f49d5aa4b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f49d5aa4ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f49d5aa4e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f49d5aa3020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f49d5aa31b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f49d5aa3440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f49d5aa35d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f49d5aa3760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f49d5aa38f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f49d5aa3a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f49d5aa3c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f49d5aa3da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f49d5aa2020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f49d5aa21b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f49d5aa2340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f49d5aa24d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f49d5aa2660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f49d5aa29f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f49d5aa2b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f49d5aa2d10"/>
        <function-ref name="tx" scoped="" ref="0x7f49d5aa1020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f49d5aa11b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f49d5aa1340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f49d5aa14d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f49d5aa1660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f49d5aa17f0"/>
        <function-ref name="rx" scoped="" ref="0x7f49d5aa1980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f49d5aa1b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f49d5aa1ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f49d5aa1e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f49d5aa0020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f49d5aa01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d5aa52b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5aa52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d5aa5630"/>
        <function-ref name="userId" scoped="" ref="0x7f49d5aa57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d656d510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d656d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d656d890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d656da20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d656caf0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d656caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d656ce70"/>
        <function-ref name="configure" scoped="" ref="0x7f49d656b030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f49d6570510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f49d6570510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d6570890"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d6570a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d656f280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d656f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d656f600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d656f790"/>
        <function-ref name="request" scoped="" ref="0x7f49d656f920"/>
        <function-ref name="granted" scoped="" ref="0x7f49d656fab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d656fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d656dd20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d656dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d656c0e0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d656c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f49d6568120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6568120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d65684a0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d6568630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f49d656a230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f49d656a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d656a5d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d656a760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f49d6569ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f49d6569ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d6569e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f49d656ab60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f49d656ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f49d6569020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f49d65692f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f49d65692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f49d6569670"/>
        <function-ref name="txDone" scoped="" ref="0x7f49d6569800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d6564bd0" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d6564bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d6563020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d65631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d6562950" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d6562950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d6562cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f49d6562e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f49d6563400" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d6563400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6563780"/>
        <function-ref name="requested" scoped="" ref="0x7f49d6563910"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6563aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6563c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d6563dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d6565e30" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6565e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6564210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d65643a0"/>
        <function-ref name="request" scoped="" ref="0x7f49d6564530"/>
        <function-ref name="granted" scoped="" ref="0x7f49d65646c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d6564850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f49d65610f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d65610f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d6561470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d6562060" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6562060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d65623e0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d6562570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f49d5a3a020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f49d5a3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f49d5a3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f49d5a3a630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f49d5a3a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f49d5a3a9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f49d5a3ab40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f49d5a3acd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f49d5a3ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f49d5a376c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f49d5a376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f49d5a37a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5a37bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f49d5a349d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f49d5a349d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f49d5a34d70"/>
        <function-ref name="configure" scoped="" ref="0x7f49d5a33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f49d5a332b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f49d5a332b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f49d5a33630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f49d5a337c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f49d5a33950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f49d5a33ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f49d5a37e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d5a37e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5a351e0"/>
        <function-ref name="requested" scoped="" ref="0x7f49d5a35370"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5a35500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5a35690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d5a35820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f49d5a33d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f49d5a33d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f49d5a320e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f49d5a32270"/>
        <function-ref name="led1On" scoped="" ref="0x7f49d5a32400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f49d5a32590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f49d5a32720"/>
        <function-ref name="get" scoped="" ref="0x7f49d5a328b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f49d5a32a40"/>
        <function-ref name="led0On" scoped="" ref="0x7f49d5a311b0"/>
        <function-ref name="set" scoped="" ref="0x7f49d5a32d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f49d5a32bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f49d5a31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f49d5a38850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d5a38850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d5a38bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d5a38d80"/>
        <function-ref name="request" scoped="" ref="0x7f49d5a37020"/>
        <function-ref name="granted" scoped="" ref="0x7f49d5a371b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d5a37340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f49d5a342d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f49d5a342d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d5a34650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f49d5a35a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d5a35a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d5a35df0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d5a34020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f49d5a31480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f49d5a31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d5a31800"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d5a31990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f49d655b780" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f49d655b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f49d655bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f49d655bd50" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d655bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d6544100"/>
        <function-ref name="requested" scoped="" ref="0x7f49d6544290"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6544420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d65445b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d6544740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f49d655b020" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d655b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d655b3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f49d655b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f49d6544990" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d6544990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d6544d10"/>
        <function-ref name="userId" scoped="" ref="0x7f49d6543020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f49d59fce00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f49d59fce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f49d59fb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f49d59fb410" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f49d59fb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d59fb790"/>
        <function-ref name="requested" scoped="" ref="0x7f49d59fb920"/>
        <function-ref name="granted" scoped="" ref="0x7f49d59fbab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d59fbc40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f49d59fbdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f49d59fc6a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f49d59fc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d59fca20"/>
        <function-ref name="stop" scoped="" ref="0x7f49d59fcbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f49d59fa060" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f49d59fa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f49d59fa3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f49d59fa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f49d65248e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f49d65248e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f49d6524c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f49d6523020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f49d6523020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f49d65233a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f49d6523530"/>
        <function-ref name="request" scoped="" ref="0x7f49d65236c0"/>
        <function-ref name="granted" scoped="" ref="0x7f49d6523850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f49d65239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f49d6524080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f49d6524080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f49d6524400"/>
        <function-ref name="stop" scoped="" ref="0x7f49d6524590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f49d6511a30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f49d6511a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f49d6511db0"/>
        <function-ref name="offset" scoped="" ref="0x7f49d650d020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f49d650d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d64ff060" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerTramaTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d64ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d64fb630"/>
        <function-ref name="fired" scoped="" ref="0x7f49d64feac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d64fd920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d64fd4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d64fa020"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d64fbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d64fd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d64ffc50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d64fb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d64fe170"/>
        <function-ref name="stop" scoped="" ref="0x7f49d64fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f49d64f9b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f49d64f9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f49d7c604d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f49d7c60840"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f49d64f4110"/>
        <function-ref name="fired" scoped="" ref="0x7f49d64f75b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f49d64f54a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f49d64f5020"/>
        <function-ref name="getdt" scoped="" ref="0x7f49d64f4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f49d64f4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f49d64f7a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f49d64f8750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f49d64f5ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f49d64f8c20"/>
        <function-ref name="stop" scoped="" ref="0x7f49d64f7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d6466020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d6466020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d64663a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6466530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d64666c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d6466850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d64669e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d6466c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6466c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6465020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d64651b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6465340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d64654d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d6465660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d64658b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d64658b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d6465c30"/>
        <function-ref name="source" scoped="" ref="0x7f49d6465dc0"/>
        <function-ref name="address" scoped="" ref="0x7f49d6464020"/>
        <function-ref name="destination" scoped="" ref="0x7f49d64641b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d6464340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d64644d0"/>
        <function-ref name="type" scoped="" ref="0x7f49d6464660"/>
        <function-ref name="setType" scoped="" ref="0x7f49d64647f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d6464980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d6464b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d6464ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f49d6463020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f49d6463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d64633a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d6463530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d64636c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d59e8920" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d59e8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d59e8ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d59e8e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d59e7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d59e71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d59e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d59e7590" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d59e7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d59e7910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d59e7aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d59e7c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d59e7dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d59e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d59e5270" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d59e5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d59e55f0"/>
        <function-ref name="source" scoped="" ref="0x7f49d59e5780"/>
        <function-ref name="address" scoped="" ref="0x7f49d59e5910"/>
        <function-ref name="destination" scoped="" ref="0x7f49d59e5aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d59e5c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d59e5dc0"/>
        <function-ref name="type" scoped="" ref="0x7f49d59e4020"/>
        <function-ref name="setType" scoped="" ref="0x7f49d59e41b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d59e4340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d59e44d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d59e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f49d59e48f0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f49d59e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f49d59e4c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f49d59e4e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f49d59e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f49d59da390" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d59da390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d59da710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d59da8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d59daa30"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d59dabc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d59dad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f49d59d9060" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d59d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d59d93e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d59d9570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d59d9700"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d59d9890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d59d9a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f49d59d9c70" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseStationC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d59d9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d59d8020"/>
        <function-ref name="source" scoped="" ref="0x7f49d59d81b0"/>
        <function-ref name="address" scoped="" ref="0x7f49d59d8340"/>
        <function-ref name="destination" scoped="" ref="0x7f49d59d84d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d59d8660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d59d87f0"/>
        <function-ref name="type" scoped="" ref="0x7f49d59d8980"/>
        <function-ref name="setType" scoped="" ref="0x7f49d59d8b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d59d8ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d59d8e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d59d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d64ce930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d64ce930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d64cecb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d64cee40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d64cb020"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d64cb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d64cb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f49d647b400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f49d647b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d647b7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d647b930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d647bac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d647bc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d647bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f49d647ddf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f49d647ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f49d647c1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d647c350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d647c4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f49d647c670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f49d647c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f49d6479720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6479720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d6479aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d6479c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d6479dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6478020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d64781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f49d647cb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f49d647cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f49d647b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f49d6478480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f49d6478480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d6478800"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d6478990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f49d6478c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f49d6478c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f49d6477020"/>
        <function-ref name="runTask" scoped="" ref="0x7f49d64771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f49d647a060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d647a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d647a3e0"/>
        <function-ref name="source" scoped="" ref="0x7f49d647a570"/>
        <function-ref name="address" scoped="" ref="0x7f49d647a700"/>
        <function-ref name="destination" scoped="" ref="0x7f49d647a890"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d647aa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d647abb0"/>
        <function-ref name="type" scoped="" ref="0x7f49d647ad40"/>
        <function-ref name="setType" scoped="" ref="0x7f49d6479020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d64791b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d6479340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d64794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f49d6459020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f49d6459020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f49d64593a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f49d6459530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f49d64596c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f49d6459850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f49d64599e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f49d6460910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f49d6460910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f49d6460c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f49d6459c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="BaseStationC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f49d6459c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f49d6458020"/>
        <function-ref name="source" scoped="" ref="0x7f49d64581b0"/>
        <function-ref name="address" scoped="" ref="0x7f49d6458340"/>
        <function-ref name="destination" scoped="" ref="0x7f49d64584d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f49d6458660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f49d64587f0"/>
        <function-ref name="type" scoped="" ref="0x7f49d6458980"/>
        <function-ref name="setType" scoped="" ref="0x7f49d6458b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f49d6458ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f49d6458e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f49d6457020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f49d7d91a40" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f49d7d90650" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f49d7d86d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f49d7d82c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f49d7d82940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f49d7d87020" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f49d7d887b0" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f49d7d84b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f49d7d84550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f49d7d848b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f49d7d82020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f49d7d83cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f49d7d835a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f49d7d83320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f49d7d865b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f49d7d88020" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f49d7d87dc0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f49d7d877d0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f49d7d87b30" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f49d7d44b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f49d7d47de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f49d7d44420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f49d7d47700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f49d7d455a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f49d7d4a8f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f49d7d47020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f49d7d45cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f49d7eb27e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f49d817a700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f49d7dd8a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f49d7dd61f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f49d7dd82b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f49d7f50020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f49d88f0e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f49d8238e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f49d8238610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f49d822c770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f49d822a020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f49d7cd55c0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f49d7cd5340" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f49d7cd4ab0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f49d7cd4830" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f49d7cd6920" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f49d7cd5e10" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f49d7c82060" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
              <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c846e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f49d7c84a30" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d7c84d60" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f49d7c7f110" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7cd1e20" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f49d7c7d2a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c7d020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f49d7c7b620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c7b020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d7c7b350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f49d7c7a6d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f49d7c7c730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c7c170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d7c7c4a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f49d7c8d2c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f49d7c8f7e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f49d7c8fb60" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d7c8d020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f49d7c89970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c89370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d7c896a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f49d7c88a60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f49d7c8c630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c8c3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f49d7c8ab80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7c8a5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f49d7c8a8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d7c5fdd0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d7c5fdd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f49d7c57c10" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f49d7c5b420" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f49d7c592b0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f49d7c5abd0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f49d7c59020" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f49d7c5a420" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f49d7c56c60" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f49d7c563e0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f49d7c5bc00" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f49d7c5e970" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f49d7c5e6f0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f49d7c572b0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f49d7c59c50" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f49d7c57020" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f49d7c5c4d0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f49d7c5c250" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f49d7c5ccd0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f49d7c47570" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f49d7c47d20" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f49d7c45540" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f49d7c444d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f49d7c43c20" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f49d7c42480" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f49d7c45cd0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f49d7c40020" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f49d7c42d70" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f49d7c48db0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f49d7c44cb0" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f49d7c43470" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f49d7c692a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c69020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f49d7c73d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c73ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f49d7c761f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f49d7c76cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c76a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f49d7c707a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c701c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f49d7c70510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f49d7c722b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c74c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f49d7c72020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f49d7c6dbf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c6d970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f49d7c6f020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c6b9a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f49d7c6bcc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f49d7ce6de0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f49d7c6e9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c6e770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f49d7c68730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f49d7c68150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f49d7c684a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f49d7c67580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f49d7bb38a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f49d7bb1020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f49d7bb4a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f49d7bb1e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f49d7bb3190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f49d7bb1740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f49d7bb7c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f49d7bb4350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f49d7b88880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f49d7b86020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f49d7b83b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f49d7b83890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f49d7b805d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f49d7b89120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f49d7b85020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f49d7b80d60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f49d7b7f860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f49d7b7f5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f49d7b86760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f49d7b880e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f49d7b7e190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f49d7b84770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f49d7b81e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f49d7b898c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f49d7b813e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f49d7b8a270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f49d7b857a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f49d7b83020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f49d7b84020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f49d7b8a9a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d78d81e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d78d81e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f49d78d8420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d78d8420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f49d78d62a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d78d8420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78d6020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f49d78d5430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78d51b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f49d78d7020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78d8d60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f49d78d3740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d78d8420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78d3150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f49d78d34b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d78d8420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f49d78c7990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78c7370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f49d78c7700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f49d78c5b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78c58b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f49d78c9ae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f49d78c9120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f49d78cce80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f49d78de5f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78de370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f49d78dc7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78dc550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f49d78da940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78da6c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f49d789e6e0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d789e460" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f49d78a0980" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78a0700" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f49d78a20b0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f49d78a3dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f49d78a3520" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f49d78a32a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f49d78a2ae0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f49d78a2860" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f49d789f860" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d789f5e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f49d7891020" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f49d78928b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f49d7892c30" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f49d78ad420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d78aee10" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f49d78ad190" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f49d78a9b20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d78a9520" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f49d78a9890" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f49d78ab020" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f49d88e4110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d78adc80" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f49d78aaa30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d78aa7b0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f49d78ae610" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d78ae390" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f49d78abb50" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d78ab8d0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f49d7896830" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78965b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f49d789a8f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d789a2d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f49d789a660" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f49d7897810" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7897590" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f49d7898d20" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7898700" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f49d7898a90" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f49d7895810" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7895590" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f49d78a5430" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78a51b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f49d78843c0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d788bdd0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d7884130" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f49d7880970" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7880370" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d78806a0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f49d787faa0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f49d78836c0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7883440" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f49d7882b80" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d78825a0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f49d78828f0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f49d7888390" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f49d7889390" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f49d788ca00" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f49d7889b80" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f49d7888de0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f49d785f2b0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d7864c50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f49d785f020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f49d785e5b0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f49d785be30" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f49d785b020" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f49d785b860" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d785bb90" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f49d785c770" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f49d785c190" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f49d785c4e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f49d785fd40" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f49d785fac0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f49d7857070" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f49d7860830" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f49d78628e0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f49d7861120" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f49d78512e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7851020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f49d7852710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f49d7ccfde0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f49d7ccd7d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7852410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f49d7850620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f49d7ccb3b0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f49d7ccac60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d7850320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f49d78676e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f49d78657f0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f49d7865020" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f49d786ce20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f49d7868e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f49d7866020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f49d7866800" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f49d78686c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f49d784bbf0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f49d784c270" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f49d784b420" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f49d784b1a0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f49d784c9e0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f49d784d020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f49d7854c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f49d784dad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f49d784d850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f49d77ee640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f49d77ee060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f49d77ee3b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f49d77ef020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f49d77f1690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f49d77f1020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f49d77f1400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f49d77f7a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f49d77f77c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f49d77ef8a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f49d77f3540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f49d77f32c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f49d77f6b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f49d77f6910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f49d77ed8a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f49d77f26b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f49d77f2430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f49d77ed070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f49d77f4350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f49d78cbe10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f49d78c25a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f49d77f4b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f49d77f7020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f49d77f61f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f49d77f3ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f49d77e92b0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f49d77e92b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f49d77e9b70" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f49d77e78f0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f49d77e92b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f49d77e7340" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f49d77e7660" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f49d77e92b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f49d77bec10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d77be990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f49d77bd710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d77bd490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f49d77ddc50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f49d78cbe10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f49d78c25a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d77d9020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d77d9020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f49d77d9260" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f49d77d5e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f49d77d8e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f49d77d5460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f49d77d7e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f49d77d51d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f49d77d7640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f49d77d4620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f49d77d9dc0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f49d77d9b40" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d77d9260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f49d77d8680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f49d77c6560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f49d77c54f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f49d77c6d40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f49d77c7cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f49d77c76f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f49d7ce5210"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f49d77c7a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f49d7ce55f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f49d77b9e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f49d77c3e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f49d77c3020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f49d77c3890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d77c3be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f49d77c0610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f49d77c1770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f49d77c0020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d77c0370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f49d77cac30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f49d77ca470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f49d77cbce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f49d77cb420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f49d76ff560" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f49d76fe020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f49d76ffc60" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f49d76fea00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f49d76fe780" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f49d76fd410" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f49d76fd190" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f49d76fdb00" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f49d770c3e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f49d770bc60" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f49d770b9e0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f49d770cb10" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f49d7710650" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f49d770b270" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f49d770f570" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f49d770dcc0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f49d7710de0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f49d770fc80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f49d770d5c0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f49d770d340" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f49d770a6a0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f49d770a420" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f49d7704bc0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f49d77045f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f49d7704930" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f49d7711b60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f49d7d3b550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f49d7d39020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f49d77025c0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f49d77014d0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f49d7705d30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f49d7702d00" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f49d7706350" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f49d7706ae0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f49d77055a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f49d7d3b550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f49d7d39020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f49d7705320" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f49d7d3b550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f49d7d39020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f49d76ea020" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f49d76e76a0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f49d76e7420" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f49d76e62a0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f49d76e6020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f49d76e8c10" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f49d76e8350" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f49d76ea9d0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f49d76ea750" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f49d76bc1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d756de10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d756de10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f49d7567070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d7567070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f49d7567990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d7567070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f49d7566ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f49d7566270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f49d7565270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f49d749a190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f49d7498350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f49d749ab30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f49d749a8b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f49d749d8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f49d746f5a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f49d746b020" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f49d7470dc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f49d746d6d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f49d746d450" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f49d746ed30" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f49d7470620" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f49d746e5d0" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f49d746fda0" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f49d731a810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f49d73190e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f49d7319920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f49d72f1420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d72f2e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d72f1190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f49d72ec700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d72edd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d72ec110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f49d72ec460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f49d72ed020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d72ef970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d72efcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f49d72f2020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f49d7cd0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d72f49d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d72f4d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f49d72f0b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d72f0250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f49d72f05a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f49d72f08f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f49d72d1a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f49d72d10d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f49d72d1460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d72d17a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f49d72cd020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f49d72d02a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f49d72d0630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d72d0970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f49d72d0ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f49d72d38f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f49d72d3670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f49d71f3b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f49d71f04e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f49d71eeaa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f49d72242b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f49d7225e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f49d71ed6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d71ed470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f49d71ecb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d71ec8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f49d71ec020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f49d71eb5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d71eb370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f49d71e1020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f49d71e2750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f49d71da740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d71da4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f49d71ddcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f49d71b57c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f49d71c12d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f49d71cd020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d7241020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f49d7241860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f49d71d0cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d7241020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f49d7241860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f49d71c33b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f49d71cb530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d723c020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f49d723c860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f49d71cb2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d723c020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f49d723c860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f49d71ba9e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f49d71b6020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f49d71cca90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d723fec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f49d723e680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f49d71cbd20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d723c020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f49d723c860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f49d71c7b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f49d71c7910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f49d71c71f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f49d71ba2b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f49d71cc2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d723fec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f49d723e680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f49d71cc020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d723fec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f49d723e680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f49d71c8020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f49d71b9190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f49d71c8a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f49d71c8780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f49d71c4480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f49d71c4c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f49d71bc420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f49d71be190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f49d71c2350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f49d71bcb60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f49d71c1ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f49d71b98b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f49d71c6390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f49d7247d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f49d72434d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f49d71b8070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f49d71b5020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f49d71ca700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f49d71ca480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f49d71b42a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d71b4020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f49d71cd800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f49d7241020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f49d7241860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f49d71c3b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f49d71bf270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f49d71bdba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f49d720fb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f49d720f730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f49d71bd920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f49d720fb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f49d720f730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f49d71beca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f49d72242b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f49d7225e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f49d71bea20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f49d72242b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f49d7225e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f49d71b4ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f49d71b8860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f49d71c6ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f49d71b6780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f49d71bf9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f49d71c2b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f49d714d020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f49d71269d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f49d7137020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f49d712c620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f49d712c3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f49d71405b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f49d7129c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f49d71315e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f49d7139070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f49d7136020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f49d713a020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f49d713bd30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f49d713c4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f49d7133020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f49d712b550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f49d7126270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f49d712dc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f49d7121350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f49d711d9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f49d713f420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f49d7135740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f49d71321f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f49d713a8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f49d7142350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f49d712d460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f49d712d1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f49d7146c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f49d71294d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f49d7124190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f49d711fb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f49d711d270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f49d7128b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f49d71248c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f49d712cdb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f49d7122390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f49d713fb40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f49d71307e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f49d71237b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f49d7127ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f49d7132de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f49d7132b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f49d711e2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f49d712fa60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f49d7128420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f49d7142e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f49d71fc4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f49d71fc080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f49d7142b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f49d71fc4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f49d71fc080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f49d7135020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f49d713ecb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f49d713ea30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f49d7133980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d7133700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f49d7122b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f49d713b620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f49d713e350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f49d712f2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f49d712f020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f49d7140ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f49d7123020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f49d7127350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f49d712bcc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f49d7130020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f49d7131d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f49d7136740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f49d71397b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f49d711ea40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f49d713ce30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f49d713cbb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f49d7121b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f49d7137750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f49d711f350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f49d7078020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f49d7078880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f49d7043dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f49d7040020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f49d7043530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f49d70426d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f49d7040950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f49d703fb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f49d70344c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f49d703d490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f49d7034240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f49d703d490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f49d7037420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f49d7035020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f49d703d490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f49d7037ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f49d703d490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f49d7035930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f49d703d490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f49d6e2b5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f49d6e2b360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f49d6e18b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f49d6e181c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f49d6e18530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d6e18860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f49d6e17880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f49d6e172c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d6e175f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6dfe530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6dfe530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f49d6dfe770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d6dfe770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f49d6dfd2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d6dfe770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f49d6dfd060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f49d6dfe770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f49d6d99580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f49d6d679e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f49d6d67020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f49d6d67750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f49d6d687f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f49d6d68020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f49d6d6cd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f49d6d7d3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d6d7d150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f49d6d7e3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d6d7e150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f49d6d7a350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d6d7a0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f49d6d7c390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d6d7c110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f49d6c05910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f49d6c05910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f49d6c02270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f49d88e3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f49d6b24e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f49d88e4930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f49d6b24c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f49d88e4930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f49d6a405e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f49d6a405e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f49d6a3d2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f49d6a405e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f49d6a3d020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f49d6a405e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f49d6827b00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d68274f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f49d6827870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f49d682cc70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f49d6828b60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f49d6828560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f49d7c92940"/>
                <typename><typedef-ref name="message_t" ref="0x7f49d7c8f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f49d68288d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f49d680e960" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f49d680e1f0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f49d6820c20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f49d68150e0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f49d6813d00" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d6813a80" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f49d6815960" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f49d68167e0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d6816560" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f49d68125b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f49d6813270" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f49d681e780" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f49d681d0e0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f49d6821d80" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f49d6821b00" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f49d681dc60" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f49d681d9e0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f49d681b8f0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f49d68195b0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f49d6819330" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f49d68180b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f49d6819e00" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f49d66e3c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f49d66e3670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d66e39b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f49d66dea70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f49d66de7f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f49d66dd890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f49d66dd2c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d66dd600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f49d66e0610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f49d66da2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f49d66db820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d66dbb60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f49d66da020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f49d66de020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f49d66e2610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f49d66e1bd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f49d66e2020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f49d88e3520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f49d66e2370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
              <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f49d66bb5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f49d66bb330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f49d66bbdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f49d66bacf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f49d66ba700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f49d66baa60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f49d88e3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f49d66b7b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <short>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f49d66b04c0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f49d720fb50"/></typename>
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f49d720f730"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f49d6622860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f49d66200e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f49d8236020"/>
            <typename><typedef-ref name="error_t" ref="0x7f49d82311b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f49d6559ce0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f49d64c21f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f49d823c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
